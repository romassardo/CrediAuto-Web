[{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\middleware.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":45,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":45,"endColumn":19},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err2' is defined but never used.","line":52,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":52,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":62,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":62,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server'\r\nimport { jwtVerify } from 'jose'\r\nimport { debugAuth } from '@/lib/logger'\r\n\r\n// Rutas protegidas y p├║blicas\r\nconst protectedRoutes = ['/admin', '/portal']\r\nconst publicRoutes = ['/login', '/signup', '/']\r\nconst adminRoutes = ['/admin']\r\nconst portalRoutes = ['/portal']\r\n\r\n// Claves para verificar tokens\r\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || '')\r\nconst JWT_REFRESH_SECRET = new TextEncoder().encode(process.env.JWT_REFRESH_SECRET || '')\r\n\r\nexport default async function middleware(req: NextRequest) {\r\n  const path = req.nextUrl.pathname\r\n  \r\n  // Verificar si es una ruta protegida\r\n  const isProtectedRoute = protectedRoutes.some(route => path.startsWith(route))\r\n  const isPublicRoute = publicRoutes.some(route => path === route) || path === '/'\r\n  const isAdminRoute = adminRoutes.some(route => path.startsWith(route))\r\n  const isPortalRoute = portalRoutes.some(route => path.startsWith(route))\r\n  const isApiRoute = path.startsWith('/api')\r\n\r\n  // Obtener tokens de las cookies (access y refresh por separado)\r\n  const accessToken = req.cookies.get('access_token')?.value\r\n  const refreshToken = req.cookies.get('refresh_token')?.value\r\n\r\n  // Si no hay token y es ruta protegida, redirigir a login\r\n  if (isProtectedRoute && !accessToken && !refreshToken) {\r\n    return NextResponse.redirect(new URL('/', req.url))\r\n  }\r\n\r\n  // Si hay token, verificar su validez y permisos (fallback a refresh si access expir├│)\r\n  if (accessToken || refreshToken) {\r\n    let payload: any | null = null\r\n    let tokenType: 'access' | 'refresh' | null = null\r\n\r\n    // Intentar validar access_token primero\r\n    if (accessToken) {\r\n      try {\r\n        const result = await jwtVerify(accessToken, JWT_SECRET)\r\n        payload = result.payload\r\n        tokenType = 'access'\r\n      } catch (err) {\r\n        // Si el access token no es v├ílido o expir├│, probar con refresh_token\r\n        if (refreshToken) {\r\n          try {\r\n            const result = await jwtVerify(refreshToken, JWT_REFRESH_SECRET)\r\n            payload = result.payload\r\n            tokenType = 'refresh'\r\n          } catch (err2) {\r\n            // ambos tokens inv├ílidos\r\n          }\r\n        }\r\n      }\r\n    } else if (refreshToken) {\r\n      try {\r\n        const result = await jwtVerify(refreshToken, JWT_REFRESH_SECRET)\r\n        payload = result.payload\r\n        tokenType = 'refresh'\r\n      } catch (err) {\r\n        // refresh inv├ílido\r\n      }\r\n    }\r\n\r\n    if (!payload) {\r\n      // Tokens presentes pero inv├ílidos\r\n      if (isApiRoute) {\r\n        return NextResponse.json({ error: 'No autorizado' }, { status: 401 })\r\n      }\r\n      const response = NextResponse.redirect(new URL('/', req.url))\r\n      response.cookies.delete('access_token')\r\n      return response\r\n    }\r\n\r\n    const userRole = payload.role as string\r\n    const userId = payload.userId as number\r\n\r\n    // Para API routes: solo verificar autenticaci├│n. Importante: no modificar el request en m├®todos con body (POST/PATCH/PUT/DELETE)\r\n    // porque puede perderse el stream del body y causar \"TypeError: Failed to fetch\" en el cliente.\r\n    if (isApiRoute) {\r\n      const method = req.method\r\n      if (method === 'GET' || method === 'HEAD') {\r\n        debugAuth('­ƒöì Middleware API:', path, { userId, userRole, dealerId: (payload as any).dealerId, tokenType, method })\r\n        const requestHeaders = new Headers(req.headers)\r\n        requestHeaders.set('x-user-id', userId.toString())\r\n        requestHeaders.set('x-user-role', userRole)\r\n        if ((payload as any).dealerId) {\r\n          requestHeaders.set('x-user-dealer-id', String((payload as any).dealerId))\r\n        }\r\n        return NextResponse.next({\r\n          request: { headers: requestHeaders },\r\n        })\r\n      }\r\n      // Para m├®todos con body, dejamos pasar sin alterar request para preservar el body\r\n      return NextResponse.next()\r\n    }\r\n\r\n    // Verificar permisos espec├¡ficos por ruta (solo para p├íginas, no API)\r\n    if (isAdminRoute && userRole !== 'ADMIN') {\r\n      return NextResponse.redirect(new URL('/', req.url))\r\n    }\r\n\r\n    if (isPortalRoute && !['DEALER', 'EJECUTIVO_CUENTAS'].includes(userRole)) {\r\n      return NextResponse.redirect(new URL('/', req.url))\r\n    }\r\n\r\n    // Si est├í autenticado y trata de acceder a rutas p├║blicas, redirigir al dashboard apropiado\r\n    if (isPublicRoute && path === '/') {\r\n      if (userRole === 'ADMIN') {\r\n        return NextResponse.redirect(new URL('/admin/dashboard', req.url))\r\n      } else if (['DEALER', 'EJECUTIVO_CUENTAS'].includes(userRole)) {\r\n        return NextResponse.redirect(new URL('/portal/dashboard', req.url))\r\n      }\r\n    }\r\n\r\n    const method2 = req.method\r\n    if (method2 === 'GET' || method2 === 'HEAD') {\r\n      const requestHeaders = new Headers(req.headers)\r\n      requestHeaders.set('x-user-id', userId.toString())\r\n      requestHeaders.set('x-user-role', userRole)\r\n      if ((payload as any).dealerId) {\r\n        requestHeaders.set('x-user-dealer-id', String((payload as any).dealerId))\r\n      }\r\n      return NextResponse.next({\r\n        request: { headers: requestHeaders },\r\n      })\r\n    }\r\n    // Para m├®todos con body fuera de /api, no alteramos el request para no interferir con el stream del body\r\n    return NextResponse.next()\r\n  }\r\n\r\n  // Si no hay token y es API route protegida, devolver 401\r\n  if (isApiRoute && (path.startsWith('/api/admin') || path.startsWith('/api/loan-applications') || path.startsWith('/api/dealer'))) {\r\n    return NextResponse.json({ error: 'No autorizado' }, { status: 401 })\r\n  }\r\n\r\n  return NextResponse.next()\r\n}\r\n\r\n// Configurar en qu├® rutas debe ejecutarse el middleware\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Ejecutar en todas las rutas incluyendo API routes para agregar headers de usuario\r\n     */\r\n    '/((?!_next/static|_next/image|favicon\\\\.ico|sitemap\\\\.xml|robots\\\\.txt).*)',\r\n    '/api/:path*'\r\n  ],\r\n}\r\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\next.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\postcss.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\dashboard\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'FileText' is defined but never used.","line":4,"column":73,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":81},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchDealers'. Either include it or remove the dependency array.","line":121,"column":6,"nodeType":"ArrayExpression","endLine":121,"endColumn":22,"suggestions":[{"desc":"Update the dependencies array to be: [fetchDealers, selectedStatus]","fix":{"range":[3568,3584],"text":"[fetchDealers, selectedStatus]"}}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'pendingCount' is assigned a value but never used.","line":187,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":187,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect, useMemo } from 'react';\nimport { Building2, Search, Eye, Check, X, Clock, User, Mail, Calendar, FileText } from 'lucide-react';\nimport ConfirmationModal from '@/components/ui/ConfirmationModal';\nimport AdminNavigation from '@/components/admin/AdminNavigation';\n\ninterface Dealer {\n  id: string;\n  legalName: string;\n  tradeName: string;\n  cuit: string;\n  email: string;\n  phone: string;\n  addressStreet: string;\n  addressCity: string;\n  addressProvince: string;\n  status: string;\n  createdAt: string;\n  owner?: {\n    firstName: string;\n    lastName: string;\n    email: string;\n    createdAt: string;\n  };\n  users?: Array<{\n    publicId: string;\n    firstName: string;\n    lastName: string;\n    email: string;\n    phone?: string;\n    role: string;\n    status: string;\n    createdAt: string;\n  }>;\n}\n\nexport default function AdminDealers() {\n  const [dealers, setDealers] = useState<Dealer[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [processingId, setProcessingId] = useState<string | null>(null);\n  const [selectedStatus, setSelectedStatus] = useState<string>('ALL');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedDealer, setSelectedDealer] = useState<Dealer | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [modalState, setModalState] = useState<{\n    isOpen: boolean;\n    title: string;\n    message: string;\n    type: 'success' | 'error' | 'warning' | 'info';\n  }>({ isOpen: false, title: \"\", message: \"\", type: \"info\" });\n\n  const showModal = (title: string, message: string, type: 'success' | 'error' | 'warning' | 'info' = \"info\") => {\n    setModalState({ isOpen: true, title, message, type });\n  };\n\n  const closeModal = () => setModalState((prev) => ({ ...prev, isOpen: false }));\n\n  // Funci├│n para obtener token de cookies\n  const getTokenFromCookies = (): string | null => {\n    if (typeof document === 'undefined') return null;\n    \n    // Intentar obtener desde localStorage primero\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) return token;\n    } catch (e) {\n      console.warn('No se pudo acceder a localStorage:', e);\n    }\n    \n    // Fallback a cookies (aunque sean httpOnly, intentamos)\n    const cookies = document.cookie.split(';');\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=');\n      if (name === 'access_token') {\n        return decodeURIComponent(value);\n      }\n    }\n    \n    return null;\n  };\n\n  const fetchDealers = async () => {\n    try {\n      setLoading(true);\n      const token = getTokenFromCookies();\n      \n      if (!token) {\n        showModal('Error de Autenticaci├│n', 'No se encontr├│ token de acceso', 'error');\n        return;\n      }\n\n      const response = await fetch(`/api/admin/dealers?status=${selectedStatus}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        setDealers(data.dealers);\n      } else {\n        showModal('Error', data.error || 'Error al cargar concesionarios', 'error');\n      }\n    } catch (error) {\n      console.error('Error fetching dealers:', error);\n      showModal('Error de Conexi├│n', 'No se pudo conectar con el servidor', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDealers();\n  }, [selectedStatus]);\n\n  const handleApproveReject = async (dealerId: string, action: 'approve' | 'reject') => {\n    try {\n      setProcessingId(dealerId);\n      const token = getTokenFromCookies();\n      \n      if (!token) {\n        showModal('Error de Autenticaci├│n', 'No se encontr├│ token de acceso', 'error');\n        return;\n      }\n\n      const response = await fetch('/api/admin/dealers', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          dealerId,\n          action,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (data.success) {\n        await fetchDealers();\n        showModal(\n          'Ô£à Operaci├│n exitosa',\n          action === 'approve' ? 'Concesionario aprobado correctamente' : 'Concesionario rechazado',\n          'success'\n        );\n      } else {\n        showModal('Error', data.error || 'Error al procesar solicitud', 'error');\n      }\n    } catch (error) {\n      console.error('Error processing dealer:', error);\n      showModal('Error de Conexi├│n', 'No se pudo conectar con el servidor', 'error');\n    } finally {\n      setProcessingId(null);\n    }\n  };\n\n  const filteredDealers = useMemo(() => {\n    let filtered = dealers;\n\n    if (selectedStatus !== 'ALL') {\n      filtered = filtered.filter(dealer => dealer.status === selectedStatus);\n    }\n\n    if (searchTerm) {\n      filtered = filtered.filter(dealer =>\n        dealer.tradeName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        dealer.legalName.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        dealer.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        (dealer.cuit && dealer.cuit.includes(searchTerm))\n      );\n    }\n\n    return filtered;\n  }, [dealers, selectedStatus, searchTerm]);\n\n  const pendingCount = dealers.filter(dealer => dealer.status === 'PENDING_APPROVAL').length;\n\n  const getStatusBadge = (status: string) => {\n    const styles: Record<string, string> = {\n      PENDING_APPROVAL: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n      APPROVED: 'bg-green-100 text-green-800 border-green-200',\n      REJECTED: 'bg-red-100 text-red-800 border-red-200',\n      SUSPENDED: 'bg-gray-100 text-gray-800 border-gray-200',\n    };\n\n    const labels: Record<string, string> = {\n      PENDING_APPROVAL: 'Pendiente',\n      APPROVED: 'Aprobado',\n      REJECTED: 'Rechazado',\n      SUSPENDED: 'Suspendido',\n    };\n\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${styles[status as keyof typeof styles]}`}>\n        {labels[status as keyof typeof labels]}\n      </span>\n    );\n  };\n\n  const getSelectedLabel = () => {\n    switch (selectedStatus) {\n      case 'ALL':\n        return 'Todos los estados';\n      case 'PENDING_APPROVAL':\n        return 'Pendientes';\n      case 'APPROVED':\n        return 'Aprobados';\n      case 'REJECTED':\n        return 'Rechazados';\n      case 'SUSPENDED':\n        return 'Suspendidos';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden\">\n      <AdminNavigation\n        title=\"Gesti├│n de Concesionarios\"\n        subtitle=\"Administra y supervisa concesionarios\"\n        stats={{\n          count: dealers.length,\n          label: getSelectedLabel()\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6 relative\">\n        {/* Filtros y b├║squeda compactos */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-4 mb-6\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              {(['ALL', 'PENDING_APPROVAL', 'APPROVED', 'REJECTED', 'SUSPENDED'] as const).map((status) => (\n                <button\n                  key={status}\n                  onClick={() => setSelectedStatus(status)}\n                  className={`px-3 py-1.5 rounded-lg text-xs font-semibold transition-all border ${\n                    selectedStatus === status\n                      ? 'bg-brand-primary-600 text-white border-brand-primary-700 shadow-sm'\n                      : 'bg-gray-50 text-gray-700 hover:bg-gray-100 border-gray-200'\n                  }`}\n                >\n                  {status === 'ALL' && 'Todos'}\n                  {status === 'PENDING_APPROVAL' && 'Pendientes'}\n                  {status === 'APPROVED' && 'Aprobados'}\n                  {status === 'REJECTED' && 'Rechazados'}\n                  {status === 'SUSPENDED' && 'Suspendidos'}\n                </button>\n              ))}\n            </div>\n            <div className=\"flex items-center gap-2 w-full lg:w-80 bg-white border-2 border-gray-300 rounded-lg px-3 py-2 shadow-sm\">\n              <Search className=\"w-4 h-4 text-gray-500\" />\n              <input\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Buscar por nombre, email o CUIT...\"\n                className=\"flex-1 outline-none text-sm text-gray-900 placeholder-gray-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Tabla de Concesionarios */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 overflow-hidden\">\n          {loading ? (\n            <div className=\"flex items-center justify-center py-12\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary-600\"></div>\n              <span className=\"ml-2 text-gray-600\">Cargando...</span>\n            </div>\n          ) : filteredDealers.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <Building2 className=\"mx-auto h-12 w-12 text-gray-400\" />\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No hay concesionarios</h3>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                {searchTerm ? 'No se encontraron resultados para tu b├║squeda' : 'No hay concesionarios en este estado'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Concesionario\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Estado\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Fecha\n                    </th>\n                    <th className=\"px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Acciones\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {filteredDealers.map((dealer) => (\n                    <tr key={dealer.id} className=\"hover:bg-gray-50\">\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <div className=\"h-10 w-10 rounded-lg bg-brand-primary-600 flex items-center justify-center\">\n                              <Building2 className=\"h-5 w-5 text-white\" />\n                            </div>\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900\">{dealer.tradeName}</div>\n                            <div className=\"text-sm text-gray-500\">{dealer.legalName}</div>\n                            <div className=\"text-xs text-gray-400\">CUIT: {dealer.cuit}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        {getStatusBadge(dealer.status)}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                        {new Date(dealer.createdAt).toLocaleDateString()}\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                        <button\n                          onClick={() => {\n                            setSelectedDealer(dealer);\n                            setIsModalOpen(true);\n                          }}\n                          className=\"text-brand-primary-600 hover:text-brand-primary-900 mr-3\"\n                        >\n                          <Eye className=\"w-4 h-4\" />\n                        </button>\n                        {selectedStatus === 'PENDING_APPROVAL' && (\n                          <div className=\"inline-flex items-center gap-2\">\n                            <button\n                              onClick={() => handleApproveReject(dealer.id, 'approve')}\n                              disabled={processingId === dealer.id}\n                              className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50\"\n                            >\n                              {processingId === dealer.id ? (\n                                <Clock className=\"w-3 h-3 animate-spin mr-1\" />\n                              ) : (\n                                <Check className=\"w-3 h-3 mr-1\" />\n                              )}\n                              Aprobar\n                            </button>\n                            <button\n                              onClick={() => handleApproveReject(dealer.id, 'reject')}\n                              disabled={processingId === dealer.id}\n                              className=\"inline-flex items-center px-3 py-1.5 border border-red-300 text-xs font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50\"\n                            >\n                              {processingId === dealer.id ? (\n                                <Clock className=\"w-3 h-3 animate-spin mr-1\" />\n                              ) : (\n                                <X className=\"w-3 h-3 mr-1\" />\n                              )}\n                              Rechazar\n                            </button>\n                          </div>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <ConfirmationModal\n        isOpen={modalState.isOpen}\n        onClose={closeModal}\n        title={modalState.title}\n        message={modalState.message}\n        type={modalState.type}\n      />\n\n      {/* Modal de detalles del concesionario */}\n      {isModalOpen && selectedDealer && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n          <div className=\"bg-white rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto\">\n            {/* Header del modal */}\n            <div className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 px-6 py-4 rounded-t-xl\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-10 h-10 bg-white/20 rounded-lg flex items-center justify-center\">\n                    <Building2 className=\"w-5 h-5 text-white\" />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-white\">{selectedDealer.tradeName}</h3>\n                    <p className=\"text-brand-primary-100 text-sm\">{selectedDealer.legalName}</p>\n                  </div>\n                </div>\n                <button\n                  onClick={() => setIsModalOpen(false)}\n                  className=\"text-white/80 hover:text-white transition-colors\"\n                >\n                  <X className=\"w-6 h-6\" />\n                </button>\n              </div>\n            </div>\n\n            {/* Contenido del modal */}\n            <div className=\"p-6 space-y-6\">\n              {/* Informaci├│n b├ísica */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\n                    <Building2 className=\"w-5 h-5 text-brand-primary-600\" />\n                    Informaci├│n del Concesionario\n                  </h4>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Nombre Comercial</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.tradeName}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Raz├│n Social</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.legalName}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">CUIT</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.cuit}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Estado</label>\n                      <div className=\"mt-1\">{getStatusBadge(selectedDealer.status)}</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2\">\n                    <Mail className=\"w-5 h-5 text-brand-primary-600\" />\n                    Informaci├│n de Contacto\n                  </h4>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Email</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.email}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Tel├®fono</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.phone}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Direcci├│n</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.addressStreet}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Ubicaci├│n</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.addressCity}, {selectedDealer.addressProvince}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Informaci├│n del responsable */}\n              {selectedDealer.owner && (\n                <div className=\"border-t pt-6\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2 mb-4\">\n                    <User className=\"w-5 h-5 text-brand-primary-600\" />\n                    Responsable Principal\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Nombre Completo</label>\n                      <p className=\"text-sm text-gray-900\">\n                        {selectedDealer.owner.firstName} {selectedDealer.owner.lastName}\n                      </p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Email</label>\n                      <p className=\"text-sm text-gray-900\">{selectedDealer.owner.email}</p>\n                    </div>\n                    <div>\n                      <label className=\"text-sm font-medium text-gray-500\">Fecha de Registro</label>\n                      <p className=\"text-sm text-gray-900\">\n                        {new Date(selectedDealer.owner.createdAt).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {/* Ejecutivos de cuenta */}\n              {selectedDealer.users && selectedDealer.users.length > 0 && (\n                <div className=\"border-t pt-6\">\n                  <h4 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2 mb-4\">\n                    <User className=\"w-5 h-5 text-brand-primary-600\" />\n                    Ejecutivos de Cuenta ({selectedDealer.users.length})\n                  </h4>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    {selectedDealer.users.map((user) => (\n                      <div key={user.publicId} className=\"bg-gray-50 rounded-lg p-4\">\n                        <div className=\"flex items-start gap-3\">\n                          <div className={`w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0 ${\n                            user.role === 'DEALER' \n                              ? 'bg-amber-500' \n                              : 'bg-brand-primary-600'\n                          }`}>\n                            <User className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <p className=\"text-sm font-medium text-gray-900\">\n                              {user.firstName} {user.lastName}\n                            </p>\n                            <p className=\"text-xs text-gray-400 mb-2\">\n                              {user.role === 'DEALER' ? 'Responsable' : user.role} ÔÇó {new Date(user.createdAt).toLocaleDateString()}\n                            </p>\n                            \n                            {/* Informaci├│n de contacto */}\n                            <dl className=\"space-y-1\">\n                              <div className=\"flex items-center gap-2\">\n                                <dt className=\"text-xs font-medium text-gray-500\">Email:</dt>\n                                <dd className=\"text-xs text-gray-900 truncate\">\n                                  <a href={`mailto:${user.email}`} className=\"text-brand-primary-600 hover:text-brand-primary-800 underline\">\n                                    {user.email}\n                                  </a>\n                                </dd>\n                              </div>\n                              {user.phone && (\n                                <div className=\"flex items-center gap-2\">\n                                  <dt className=\"text-xs font-medium text-gray-500\">Tel├®fono:</dt>\n                                  <dd className=\"text-xs text-gray-900\">\n                                    <a href={`tel:${user.phone}`} className=\"text-brand-primary-600 hover:text-brand-primary-800 underline\">\n                                      {user.phone}\n                                    </a>\n                                  </dd>\n                                </div>\n                              )}\n                            </dl>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {/* Informaci├│n adicional */}\n              <div className=\"border-t pt-6\">\n                <h4 className=\"text-lg font-semibold text-gray-900 flex items-center gap-2 mb-4\">\n                  <Calendar className=\"w-5 h-5 text-brand-primary-600\" />\n                  Informaci├│n Adicional\n                </h4>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <label className=\"text-sm font-medium text-gray-500\">Fecha de Solicitud</label>\n                    <p className=\"text-sm text-gray-900\">\n                      {new Date(selectedDealer.createdAt).toLocaleDateString()}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Footer con acciones */}\n            {selectedDealer.status === 'PENDING_APPROVAL' && (\n              <div className=\"border-t bg-gray-50 px-6 py-4 rounded-b-xl\">\n                <div className=\"flex items-center justify-end gap-3\">\n                  <button\n                    onClick={() => {\n                      handleApproveReject(selectedDealer.id, 'reject');\n                      setIsModalOpen(false);\n                    }}\n                    disabled={processingId === selectedDealer.id}\n                    className=\"inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50\"\n                  >\n                    <X className=\"w-4 h-4 mr-2\" />\n                    Rechazar\n                  </button>\n                  <button\n                    onClick={() => {\n                      handleApproveReject(selectedDealer.id, 'approve');\n                      setIsModalOpen(false);\n                    }}\n                    disabled={processingId === selectedDealer.id}\n                    className=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50\"\n                  >\n                    <Check className=\"w-4 h-4 mr-2\" />\n                    Aprobar\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\kpis\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'useEffect' is defined but never used.","line":3,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":3,"endColumn":29},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'loading' is assigned a value but never used.","line":26,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":26,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport AdminNavigation from '@/components/admin/AdminNavigation';\nimport { TrendingUp, TrendingDown, DollarSign, Users, FileText, Clock, Target, BarChart3, PieChart, Activity } from 'lucide-react';\n\ninterface KPIData {\n  id: string;\n  title: string;\n  value: string;\n  change: number;\n  changeType: 'increase' | 'decrease' | 'neutral';\n  icon: React.ReactNode;\n  color: string;\n  description: string;\n}\n\ninterface ChartData {\n  name: string;\n  value: number;\n  color: string;\n}\n\nexport default function KPIsPage() {\n  const [timeRange, setTimeRange] = useState<'7d' | '30d' | '90d' | '1y'>('30d');\n  const [loading, setLoading] = useState(false);\n\n  const kpiData: KPIData[] = [\n    {\n      id: 'total_applications',\n      title: 'Solicitudes Totales',\n      value: '1,247',\n      change: 12.5,\n      changeType: 'increase',\n      icon: <FileText className=\"w-6 h-6\" />,\n      color: 'bg-blue-500',\n      description: 'Solicitudes recibidas en el per├¡odo'\n    },\n    {\n      id: 'approval_rate',\n      title: 'Tasa de Aprobaci├│n',\n      value: '68.3%',\n      change: -2.1,\n      changeType: 'decrease',\n      icon: <Target className=\"w-6 h-6\" />,\n      color: 'bg-green-500',\n      description: 'Porcentaje de solicitudes aprobadas'\n    },\n    {\n      id: 'avg_loan_amount',\n      title: 'Pr├®stamo Promedio',\n      value: '$3.2M',\n      change: 8.7,\n      changeType: 'increase',\n      icon: <DollarSign className=\"w-6 h-6\" />,\n      color: 'bg-purple-500',\n      description: 'Monto promedio de pr├®stamos aprobados'\n    },\n    {\n      id: 'active_dealers',\n      title: 'Dealers Activos',\n      value: '89',\n      change: 5.2,\n      changeType: 'increase',\n      icon: <Users className=\"w-6 h-6\" />,\n      color: 'bg-orange-500',\n      description: 'Concesionarios con actividad reciente'\n    },\n    {\n      id: 'avg_processing_time',\n      title: 'Tiempo Promedio',\n      value: '2.4 d├¡as',\n      change: -15.3,\n      changeType: 'increase',\n      icon: <Clock className=\"w-6 h-6\" />,\n      color: 'bg-indigo-500',\n      description: 'Tiempo promedio de procesamiento'\n    },\n    {\n      id: 'monthly_volume',\n      title: 'Volumen Mensual',\n      value: '$127.5M',\n      change: 23.8,\n      changeType: 'increase',\n      icon: <TrendingUp className=\"w-6 h-6\" />,\n      color: 'bg-emerald-500',\n      description: 'Volumen total de pr├®stamos del mes'\n    }\n  ];\n\n  const statusDistribution: ChartData[] = [\n    { name: 'Aprobadas', value: 68.3, color: '#10b981' },\n    { name: 'Pendientes', value: 18.2, color: '#f59e0b' },\n    { name: 'Rechazadas', value: 10.1, color: '#ef4444' },\n    { name: 'Canceladas', value: 3.4, color: '#6b7280' }\n  ];\n\n  const monthlyTrend = [\n    { month: 'Ene', applications: 980, approved: 668 },\n    { month: 'Feb', applications: 1120, approved: 756 },\n    { month: 'Mar', applications: 1050, approved: 714 },\n    { month: 'Apr', applications: 1180, approved: 826 },\n    { month: 'May', applications: 1247, approved: 851 }\n  ];\n\n  const getChangeIcon = (changeType: string) => {\n    if (changeType === 'increase') return <TrendingUp className=\"w-4 h-4\" />;\n    if (changeType === 'decrease') return <TrendingDown className=\"w-4 h-4\" />;\n    return <Activity className=\"w-4 h-4\" />;\n  };\n\n  const getChangeColor = (changeType: string) => {\n    if (changeType === 'increase') return 'text-green-600 bg-green-50';\n    if (changeType === 'decrease') return 'text-red-600 bg-red-50';\n    return 'text-gray-600 bg-gray-50';\n  };\n\n  const handleTimeRangeChange = (range: '7d' | '30d' | '90d' | '1y') => {\n    setLoading(true);\n    setTimeRange(range);\n    // Simular carga de datos\n    setTimeout(() => setLoading(false), 800);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50\">\n      <AdminNavigation \n        title=\"Dashboard de KPIs\"\n        subtitle=\"M├®tricas y an├ílisis de rendimiento del sistema\"\n        stats={{\n          count: kpiData.length,\n          label: \"m├®tricas\"\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6\">\n        {/* Filtros de tiempo */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-4 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-10 h-10 bg-brand-primary-100 rounded-lg flex items-center justify-center\">\n                <BarChart3 className=\"w-5 h-5 text-brand-primary-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-lg font-bold text-gray-900\">Per├¡odo de An├ílisis</h2>\n                <p className=\"text-gray-600 text-sm\">Selecciona el rango de tiempo para las m├®tricas</p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              {(['7d', '30d', '90d', '1y'] as const).map((range) => (\n                <button\n                  key={range}\n                  onClick={() => handleTimeRangeChange(range)}\n                  className={`px-4 py-2 rounded-lg text-sm font-semibold transition-all ${\n                    timeRange === range\n                      ? 'bg-brand-primary-600 text-white shadow-sm'\n                      : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n                  }`}\n                >\n                  {range === '7d' && '├Ültimos 7 d├¡as'}\n                  {range === '30d' && '├Ültimos 30 d├¡as'}\n                  {range === '90d' && '├Ültimos 90 d├¡as'}\n                  {range === '1y' && '├Ültimo a├▒o'}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Grid de KPIs principales */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n          {kpiData.map((kpi) => (\n            <div key={kpi.id} className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-6 hover:shadow-xl transition-shadow\">\n              <div className=\"flex items-start justify-between mb-4\">\n                <div className={`w-12 h-12 ${kpi.color} rounded-xl flex items-center justify-center text-white`}>\n                  {kpi.icon}\n                </div>\n                <div className={`flex items-center gap-1 px-2 py-1 rounded-full text-xs font-semibold ${getChangeColor(kpi.changeType)}`}>\n                  {getChangeIcon(kpi.changeType)}\n                  {Math.abs(kpi.change)}%\n                </div>\n              </div>\n              \n              <div className=\"mb-2\">\n                <h3 className=\"text-sm font-medium text-gray-600 mb-1\">{kpi.title}</h3>\n                <div className=\"text-2xl font-bold text-gray-900\">{kpi.value}</div>\n              </div>\n              \n              <p className=\"text-xs text-gray-500\">{kpi.description}</p>\n            </div>\n          ))}\n        </div>\n\n        {/* Gr├íficos y an├ílisis detallado */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n          {/* Distribuci├│n por Estado */}\n          <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                <PieChart className=\"w-5 h-5 text-purple-600\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-bold text-gray-900\">Distribuci├│n por Estado</h3>\n                <p className=\"text-sm text-gray-600\">Porcentaje de solicitudes por estado</p>\n              </div>\n            </div>\n            \n            <div className=\"space-y-4\">\n              {statusDistribution.map((item) => (\n                <div key={item.name} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div \n                      className=\"w-4 h-4 rounded-full\"\n                      style={{ backgroundColor: item.color }}\n                    ></div>\n                    <span className=\"text-sm font-medium text-gray-700\">{item.name}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"h-2 rounded-full\"\n                        style={{ \n                          width: `${item.value}%`,\n                          backgroundColor: item.color \n                        }}\n                      ></div>\n                    </div>\n                    <span className=\"text-sm font-semibold text-gray-900 w-12 text-right\">\n                      {item.value}%\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Tendencia Mensual */}\n          <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-6\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <TrendingUp className=\"w-5 h-5 text-blue-600\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-bold text-gray-900\">Tendencia Mensual</h3>\n                <p className=\"text-sm text-gray-600\">Solicitudes recibidas vs aprobadas</p>\n              </div>\n            </div>\n            \n            <div className=\"space-y-3\">\n              {monthlyTrend.map((month) => (\n                <div key={month.month} className=\"flex items-center justify-between py-2\">\n                  <div className=\"text-sm font-medium text-gray-700 w-12\">{month.month}</div>\n                  <div className=\"flex-1 flex items-center gap-2 mx-4\">\n                    <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"h-2 bg-blue-500 rounded-full\"\n                        style={{ width: `${(month.applications / 1300) * 100}%` }}\n                      ></div>\n                    </div>\n                    <div className=\"flex-1 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"h-2 bg-green-500 rounded-full\"\n                        style={{ width: `${(month.approved / 1300) * 100}%` }}\n                      ></div>\n                    </div>\n                  </div>\n                  <div className=\"text-right\">\n                    <div className=\"text-sm font-semibold text-gray-900\">{month.applications}</div>\n                    <div className=\"text-xs text-green-600\">{month.approved}</div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"flex items-center justify-center gap-6 mt-4 pt-4 border-t border-gray-100\">\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                <span className=\"text-xs text-gray-600\">Recibidas</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                <span className=\"text-xs text-gray-600\">Aprobadas</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Resumen ejecutivo */}\n        <div className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 rounded-xl shadow-lg p-6 text-white\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center\">\n              <Target className=\"w-6 h-6\" />\n            </div>\n            <div>\n              <h3 className=\"text-xl font-bold\">Resumen Ejecutivo</h3>\n              <p className=\"text-brand-primary-100\">An├ílisis del per├¡odo seleccionado</p>\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"bg-white/10 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold mb-1\">+12.5%</div>\n              <div className=\"text-sm text-brand-primary-100\">Crecimiento en solicitudes</div>\n            </div>\n            <div className=\"bg-white/10 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold mb-1\">68.3%</div>\n              <div className=\"text-sm text-brand-primary-100\">Tasa de aprobaci├│n actual</div>\n            </div>\n            <div className=\"bg-white/10 rounded-lg p-4\">\n              <div className=\"text-2xl font-bold mb-1\">2.4 d├¡as</div>\n              <div className=\"text-sm text-brand-primary-100\">Tiempo promedio de respuesta</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\loans\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":6,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Filter' is defined but never used.","line":7,"column":88,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":94},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'loadingDetails' is assigned a value but never used.","line":96,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":96,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'selectedLabel' is assigned a value but never used.","line":173,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":173,"endColumn":22}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchApplications'. Either include it or remove the dependency array.","line":311,"column":6,"nodeType":"ArrayExpression","endLine":311,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [statusFilter, page, searchTerm, fetchApplications]","fix":{"range":[10117,10149],"text":"[statusFilter, page, searchTerm, fetchApplications]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport ConfirmationModal from \"@/components/ui/ConfirmationModal\";\nimport AdminNavigation from \"@/components/admin/AdminNavigation\";\nimport Link from \"next/link\";\nimport { Check, X, Search, Calendar, Clock, Eye, FileText, User, Building, DollarSign, Filter, Car, Heart, Download, ExternalLink, Briefcase, MapPin } from \"lucide-react\";\n\n// Tipos alineados con /api/admin/loan-applications (GET)\ninterface AdminLoanApplication {\n  id: number;\n  publicId: string;\n  clientFirstName: string;\n  clientLastName: string;\n  clientDni: string;\n  clientEmail: string;\n  clientPhone: string;\n  vehiclePrice: number;\n  loanAmount: number;\n  monthlyPayment: number;\n  loanTerm: number;\n  cft: number;\n  status: string;\n  createdAt: string;\n  reviewedAt?: string;\n  // Campos adicionales del veh├¡culo\n  vehicleBrand?: string;\n  vehicleModel?: string;\n  vehicleYear?: number;\n  vehicleVersion?: string;\n  vehicleCondition?: string;\n  // Campos adicionales del c├│nyuge\n  spouseFirstName?: string;\n  spouseLastName?: string;\n  spouseCuil?: string;\n  // Campos adicionales de direcci├│n y empleo\n  applicantFirstName?: string;\n  applicantLastName?: string;\n  applicantCuil?: string;\n  applicantEmail?: string;\n  applicantPhone?: string;\n  applicantAddress?: string;\n  applicantCity?: string;\n  applicantProvince?: string;\n  applicantPostalCode?: string;\n  applicantMaritalStatus?: string;\n  applicantBirthDate?: string;\n  employmentType?: string;\n  employmentTypeOther?: string;\n  companyName?: string;\n  companyPhone?: string;\n  workExperience?: string;\n  dealer: {\n    companyName: string;\n  };\n  submittedByUser: {\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  documentsMetadata?: any[];\n  // Datos de submisi├│n con estructura anidada\n  submissionData?: {\n    vehicleData?: {\n      marca: string;\n      modelo: string;\n      anio: number;\n      version: string;\n      condicionVehiculo: string;\n    };\n    spouseData?: {\n      nombreConyuge: string;\n      apellidoConyuge: string;\n      cuilConyuge: string;\n    };\n    personalData?: any;\n    employmentData?: any;\n    calculationData?: any;\n    documents?: any[];\n  };\n}\n\ntype ModalType = \"success\" | \"error\" | \"warning\" | \"info\";\n\nexport default function AdminLoansPage() {\n  const [apps, setApps] = useState<AdminLoanApplication[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [processingId, setProcessingId] = useState<string | null>(null);\n  const [statusFilter, setStatusFilter] = useState<string>('ALL');\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [page, setPage] = useState<number>(1);\n  const [limit] = useState<number>(15);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [selectedApp, setSelectedApp] = useState<AdminLoanApplication | null>(null);\n  const [loadingDetails, setLoadingDetails] = useState<boolean>(false);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const [modalState, setModalState] = useState<{\n    isOpen: boolean;\n    title: string;\n    message: string;\n    type: ModalType;\n  }>({ isOpen: false, title: \"\", message: \"\", type: \"info\" });\n\n  const showModal = (title: string, message: unknown, type: ModalType = \"info\") => {\n    const safeMessage =\n      typeof message === \"string\"\n        ? message\n        : message instanceof Error\n        ? message.message\n        : (() => {\n            try {\n              return JSON.stringify(message);\n            } catch {\n              return \"Error desconocido\";\n            }\n          })();\n    setModalState({ isOpen: true, title, message: safeMessage, type });\n  };\n  const closeModal = () => setModalState((prev) => ({ ...prev, isOpen: false }));\n\n  // Funci├│n para obtener token de cookies\n  const getTokenFromCookies = (): string | null => {\n    if (typeof document === 'undefined') return null;\n    const cookies = document.cookie.split(';');\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=');\n      if (name === 'access_token') {\n        return decodeURIComponent(value);\n      }\n    }\n    return null;\n  };\n\n  const handleOpenDetailsModal = async (app: AdminLoanApplication) => {\n    setLoadingDetails(true);\n    setIsModalOpen(true);\n    \n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch(`/api/admin/loan-applications/${app.publicId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      if (result.success && result.data) {\n        setSelectedApp(result.data);\n      } else {\n        throw new Error('No se pudieron obtener los detalles');\n      }\n    } catch (error) {\n      console.error('Error al obtener detalles:', error);\n      showModal('Error', 'No se pudieron cargar los detalles de la solicitud', 'error');\n      setSelectedApp(app); // Fallback a datos b├ísicos\n    } finally {\n      setLoadingDetails(false);\n    }\n  };\n\n  const handleCloseDetailsModal = () => {\n    setIsModalOpen(false);\n    setSelectedApp(null);\n  };\n\n  const selectedLabel = useMemo(() => {\n    const map: Record<string, string> = {\n      PENDING: \"Pendientes\",\n      UNDER_REVIEW: \"En revisi├│n\",\n      APPROVED: \"Aprobadas\",\n      REJECTED: \"Rechazadas\",\n      CANCELLED: \"Canceladas\",\n    };\n    return map[statusFilter] ?? statusFilter;\n  }, [statusFilter]);\n\n  const fetchApplications = async () => {\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        page: String(page),\n        limit: String(limit),\n      });\n      if (statusFilter) params.set(\"status\", statusFilter);\n      if (searchTerm.trim()) params.set(\"search\", searchTerm.trim());\n\n      const response = await fetch(`/api/admin/loan-applications?${params.toString()}` , {\n        credentials: \"include\",\n        headers: { Accept: \"application/json\" },\n      });\n\n      const contentType = response.headers.get(\"content-type\") || \"\";\n\n      if (!response.ok) {\n        let message = `Error ${response.status}`;\n        if (contentType.includes(\"application/json\")) {\n          try {\n            const err = await response.json();\n            message = err.error || err.message || message;\n          } catch {}\n        } else {\n          try {\n            const text = await response.text();\n            message = text?.slice(0, 300) || message;\n          } catch {}\n        }\n        showModal(\"ÔØî Error al cargar\", message, \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n        return;\n      }\n\n      if (!contentType.includes(\"application/json\")) {\n        const text = await response.text();\n        console.error(\"Non-JSON response for GET /api/admin/loan-applications:\", text.slice(0, 300));\n        showModal(\"ÔØî Respuesta inv├ílida\", \"El servidor devolvi├│ un contenido no-JSON.\", \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n        return;\n      }\n\n      const data = await response.json();\n      if (data?.success && data?.data?.applications) {\n        setApps(data.data.applications as AdminLoanApplication[]);\n        const p = data.data.pagination;\n        setTotalPages(p?.totalPages ?? 1);\n        setTotalCount(p?.totalCount ?? 0);\n      } else {\n        showModal(\"ÔØî Error\", data?.error || \"Respuesta inv├ílida del servidor\", \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n      }\n    } catch (error) {\n      console.error(\"Error fetching applications:\", error);\n      showModal(\"ÔØî Error de Conexi├│n\", \"No se pudo conectar con el servidor. Intenta nuevamente.\", \"error\");\n      setApps([]);\n      setTotalPages(1);\n      setTotalCount(0);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateStatus = async (applicationPublicId: string, nextStatus: \"PENDING\" | \"UNDER_REVIEW\" | \"APPROVED\" | \"REJECTED\") => {\n    setProcessingId(applicationPublicId);\n    try {\n      const response = await fetch(\"/api/admin/loan-applications\", {\n        method: \"PATCH\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({ applicationId: applicationPublicId, status: nextStatus }),\n      });\n\n      const contentType = response.headers.get(\"content-type\") || \"\";\n\n      if (!response.ok) {\n        let message = `Error ${response.status}`;\n        if (contentType.includes(\"application/json\")) {\n          try {\n            const err = await response.json();\n            message = err.error || err.message || message;\n          } catch {}\n        } else {\n          try {\n            const text = await response.text();\n            message = text?.slice(0, 300) || message;\n          } catch {}\n        }\n        showModal(\"ÔØî Error\", message, \"error\");\n        return;\n      }\n\n      if (!contentType.includes(\"application/json\")) {\n        const text = await response.text();\n        console.error(\"Non-JSON response for PATCH /api/admin/loan-applications:\", text.slice(0, 300));\n        showModal(\"ÔØî Respuesta inv├ílida\", \"El servidor devolvi├│ un contenido no-JSON.\", \"error\");\n        return;\n      }\n\n      const data = await response.json();\n      if (data?.success) {\n        await fetchApplications();\n        showModal(\"Ô£à Operaci├│n exitosa\", data.message || \"Solicitud actualizada correctamente.\", \"success\");\n      } else {\n        showModal(\"ÔØî Error\", data?.error || \"Error al actualizar solicitud\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"Error updating application:\", error);\n      showModal(\"ÔØî Error de Conexi├│n\", \"No se pudo conectar con el servidor. Intenta nuevamente.\", \"error\");\n    } finally {\n      setProcessingId(null);\n    }\n  };\n\n  useEffect(() => {\n    fetchApplications();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statusFilter, page, searchTerm]);\n  const getStatusBadge = (status: AdminLoanApplication[\"status\"]) => {\n    const styles: Record<string, string> = {\n      PENDING: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n      UNDER_REVIEW: \"bg-blue-100 text-blue-800 border-blue-200\",\n      APPROVED: \"bg-green-100 text-green-800 border-green-200\",\n      REJECTED: \"bg-red-100 text-red-800 border-red-200\",\n      CANCELLED: \"bg-gray-100 text-gray-800 border-gray-200\",\n    };\n    const labels: Record<string, string> = {\n      PENDING: \"Pendiente\",\n      UNDER_REVIEW: \"En revisi├│n\",\n      APPROVED: \"Aprobada\",\n      REJECTED: \"Rechazada\",\n      CANCELLED: \"Cancelada\",\n    };\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${styles[status]}`}>\n        {labels[status]}\n      </span>\n    );\n  };\n\n  const formatMoney = (n: number) =>\n    new Intl.NumberFormat(\"es-AR\", { style: \"currency\", currency: \"ARS\", maximumFractionDigits: 0 }).format(n);\n\n  const formatDate = (s?: string) => (s ? new Date(s).toLocaleDateString() : \"-\");\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden\">\n      {/* Nueva Navegaci├│n Admin */}\n      <AdminNavigation \n        title=\"Solicitudes de Pr├®stamo\"\n        subtitle=\"Gestiona las solicitudes de financiamiento\"\n        stats={{\n          count: totalCount,\n          label: \"solicitudes\"\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6 relative\">\n        {/* Filtros y b├║squeda compactos */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-4 mb-6\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              {([\"ALL\", \"PENDING\", \"UNDER_REVIEW\", \"APPROVED\", \"REJECTED\", \"CANCELLED\"] as const).map((st) => (\n                <button\n                  key={st}\n                  onClick={() => { setStatusFilter(st); setPage(1); }}\n                  className={`px-3 py-1.5 rounded-lg text-xs font-semibold transition-all border ${\n                    statusFilter === st\n                      ? \"bg-brand-primary-600 text-white border-brand-primary-700 shadow-sm\"\n                      : \"bg-gray-50 text-gray-700 hover:bg-gray-100 border-gray-200\"\n                  }`}\n                >\n                  {st === \"ALL\" && \"Todos\"}\n                  {st === \"PENDING\" && \"Pendientes\"}\n                  {st === \"UNDER_REVIEW\" && \"En Revisi├│n\"}\n                  {st === \"APPROVED\" && \"Aprobadas\"}\n                  {st === \"REJECTED\" && \"Rechazadas\"}\n                  {st === \"CANCELLED\" && \"Canceladas\"}\n                </button>\n              ))}\n            </div>\n            <div className=\"flex items-center gap-2 w-full lg:w-80 bg-white border-2 border-gray-300 rounded-lg px-3 py-2 shadow-sm\">\n              <Search className=\"w-4 h-4 text-gray-500\" />\n              <input\n                value={searchTerm}\n                onChange={(e) => { setSearchTerm(e.target.value); setPage(1); }}\n                placeholder=\"Buscar por nombre, DNI, email...\"\n                className=\"flex-1 bg-transparent outline-none text-sm text-gray-900 placeholder-gray-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Tabla moderna y densa */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 overflow-hidden\">\n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-4 border-brand-primary-600/20 border-t-brand-primary-600 mx-auto\"></div>\n              <p className=\"mt-3 text-gray-600 text-sm\">Cargando solicitudes...</p>\n            </div>\n          ) : apps.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Calendar className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">No hay solicitudes</h3>\n              <p className=\"text-gray-500 text-sm\">No se encontraron solicitudes para este filtro</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50 border-b border-gray-200\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Solicitante\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Contacto\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Pr├®stamo\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Dealer\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Estado\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Fecha\n                    </th>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Acciones\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-100\">\n                  {apps.map((a) => (\n                    <tr key={a.publicId} className=\"hover:bg-gray-50 transition-colors\">\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center\">\n                            <User className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <div>\n                            <div className=\"font-semibold text-gray-900 text-sm\">\n                              {a.clientFirstName} {a.clientLastName}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">DNI: {a.clientDni}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm text-gray-900\">{a.clientEmail}</div>\n                        <div className=\"text-xs text-gray-500\">{a.clientPhone}</div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(a.loanAmount)}</div>\n                        <div className=\"text-xs text-gray-500\">\n                          {formatMoney(a.monthlyPayment)} ├ù {a.loanTerm}m\n                        </div>\n                        <div className=\"text-xs text-brand-primary-600\">CFT: {(a.cft || 0).toFixed(2)}%</div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <Building className=\"w-3 h-3 text-gray-400\" />\n                          <div className=\"text-sm text-gray-900 truncate max-w-32\">\n                            {a.dealer.companyName}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        {getStatusBadge(a.status)}\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm text-gray-900\">{formatDate(a.createdAt)}</div>\n                        {a.reviewedAt && (\n                          <div className=\"text-xs text-gray-500\">Rev: {formatDate(a.reviewedAt)}</div>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center justify-center gap-1\">\n                          <button\n                            onClick={() => handleOpenDetailsModal(a)}\n                            className=\"p-1.5 rounded-lg text-brand-primary-600 hover:bg-brand-primary-50 transition-colors\"\n                            title=\"Ver detalles\"\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </button>\n                          {a.status !== \"APPROVED\" && a.status !== \"REJECTED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"UNDER_REVIEW\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-blue-600 hover:bg-blue-50 transition-colors disabled:opacity-50\"\n                              title=\"Marcar en revisi├│n\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <Clock className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                          {a.status !== \"APPROVED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"APPROVED\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-green-600 hover:bg-green-50 transition-colors disabled:opacity-50\"\n                              title=\"Aprobar\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <Check className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                          {a.status !== \"REJECTED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"REJECTED\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-red-600 hover:bg-red-50 transition-colors disabled:opacity-50\"\n                              title=\"Rechazar\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <X className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Paginaci├│n compacta */}\n          {!loading && totalPages > 1 && (\n            <div className=\"px-4 py-3 bg-gray-50 border-t border-gray-200 flex items-center justify-between\">\n              <button\n                onClick={() => setPage((p) => Math.max(1, p - 1))}\n                disabled={page <= 1}\n                className=\"px-3 py-1.5 rounded-lg text-sm font-medium bg-white hover:bg-gray-50 border border-gray-200 disabled:opacity-50 transition-colors\"\n              >\n                Anterior\n              </button>\n              <div className=\"text-sm text-gray-600\">\n                P├ígina {page} de {totalPages} ÔÇó {totalCount} solicitudes\n              </div>\n              <button\n                onClick={() => setPage((p) => Math.min(totalPages, p + 1))}\n                disabled={page >= totalPages}\n                className=\"px-3 py-1.5 rounded-lg text-sm font-medium bg-white hover:bg-gray-50 border border-gray-200 disabled:opacity-50 transition-colors\"\n              >\n                Siguiente\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de detalles */}\n      {isModalOpen && selectedApp && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n            {/* Header del modal */}\n            <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-6 py-4 relative overflow-hidden\">\n              <div className=\"absolute top-0 right-0 w-24 h-24 bg-white/5 rounded-full -translate-y-12 translate-x-12\"></div>\n              <div className=\"relative flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-10 h-10 bg-white/10 backdrop-blur-sm rounded-xl flex items-center justify-center\">\n                    <User className=\"w-5 h-5 text-white\" />\n                  </div>\n                  <div>\n                    <h2 className=\"text-xl font-bold text-white\">\n                      {selectedApp.clientFirstName} {selectedApp.clientLastName}\n                    </h2>\n                    <p className=\"text-brand-primary-100 text-sm\">Solicitud de Pr├®stamo</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  {getStatusBadge(selectedApp.status)}\n                  <button\n                    onClick={handleCloseDetailsModal}\n                    className=\"p-2 rounded-lg text-white/80 hover:text-white hover:bg-white/10 transition-colors\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Contenido del modal */}\n            <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-80px)]\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Informaci├│n Personal */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <User className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n Personal</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre Completo</label>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {selectedApp.applicantFirstName || selectedApp.clientFirstName} {selectedApp.applicantLastName || selectedApp.clientLastName}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CUIL</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantCuil || selectedApp.clientDni}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantEmail || selectedApp.clientEmail}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Tel├®fono</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantPhone || selectedApp.clientPhone}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Nacimiento</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.applicantBirthDate ? formatDate(selectedApp.applicantBirthDate) : '-'}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Estado Civil</label>\n                      <div className=\"text-sm text-gray-900 capitalize\">\n                        {selectedApp.applicantMaritalStatus || '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n de Direcci├│n */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <MapPin className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n de Direcci├│n</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Direcci├│n</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.applicantAddress || '-'}\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Ciudad</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.applicantCity || '-'}</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">C├│digo Postal</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.applicantPostalCode || '-'}</div>\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Provincia</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantProvince || '-'}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n Laboral */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Briefcase className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n Laboral</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Tipo de Empleo</label>\n                      <div className=\"text-sm text-gray-900 capitalize\">\n                        {selectedApp.employmentType?.replace('_', ' ') || '-'}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.companyName || '-'}</div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Tel├®fono Empresa</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.companyPhone || '-'}</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Experiencia</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.workExperience ? `${selectedApp.workExperience} a├▒os` : '-'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n del Pr├®stamo */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <DollarSign className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n del Pr├®stamo</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Monto del Veh├¡culo</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.vehiclePrice)}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Monto del Pr├®stamo</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.loanAmount)}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Cuota Mensual</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.monthlyPayment)}</div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Plazo</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.loanTerm} meses</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CFT</label>\n                        <div className=\"text-sm font-semibold text-brand-primary-600\">{(selectedApp.cft || 0).toFixed(2)}%</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n del Veh├¡culo */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Car className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n del Veh├¡culo</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Marca y Modelo</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.vehicleData ? \n                          `${selectedApp.submissionData.vehicleData.marca} ${selectedApp.submissionData.vehicleData.modelo}` :\n                          `${selectedApp.vehicleBrand || '-'} ${selectedApp.vehicleModel || '-'}`\n                        }\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">A├▒o</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.submissionData?.vehicleData?.anio || selectedApp.vehicleYear || '-'}\n                        </div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Versi├│n</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.submissionData?.vehicleData?.version || selectedApp.vehicleVersion || '-'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Condici├│n</label>\n                        <div className=\"text-sm text-gray-900 capitalize\">\n                          {selectedApp.submissionData?.vehicleData?.condicionVehiculo || selectedApp.vehicleCondition || '-'}\n                        </div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Precio</label>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.vehiclePrice)}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n del C├│nyuge */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Heart className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n del C├│nyuge</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre Completo</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.spouseData ? \n                          `${selectedApp.submissionData.spouseData.nombreConyuge?.trim()} ${selectedApp.submissionData.spouseData.apellidoConyuge}` :\n                          selectedApp.spouseFirstName && selectedApp.spouseLastName ?\n                          `${selectedApp.spouseFirstName} ${selectedApp.spouseLastName}` :\n                          'No registrado'\n                        }\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CUIL</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.spouseData?.cuilConyuge || selectedApp.spouseCuil || '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n del Dealer */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Building className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Concesionario</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</label>\n                      <div className=\"text-sm font-medium text-gray-900\">{selectedApp.dealer?.companyName || '-'}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Enviado por</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submittedByUser?.firstName || ''} {selectedApp.submittedByUser?.lastName || ''}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">{selectedApp.submittedByUser?.email || '-'}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Informaci├│n de Solicitud */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Calendar className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Informaci├│n de Solicitud</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Creaci├│n</label>\n                      <div className=\"text-sm text-gray-900\">{formatDate(selectedApp.createdAt)}</div>\n                    </div>\n                    {selectedApp.reviewedAt && (\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Revisi├│n</label>\n                        <div className=\"text-sm text-gray-900\">{formatDate(selectedApp.reviewedAt)}</div>\n                      </div>\n                    )}\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Estado Actual</label>\n                      <div className=\"mt-1\">{getStatusBadge(selectedApp.status)}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Documentaci├│n Subida */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"flex items-center gap-2 pb-4 border-b border-gray-200\">\n                  <FileText className=\"w-4 h-4 text-brand-primary-600\" />\n                  <h3 className=\"font-semibold text-gray-900\">Documentaci├│n Subida</h3>\n                </div>\n                <div className=\"mt-4\">\n                  {selectedApp.documentsMetadata && Array.isArray(selectedApp.documentsMetadata) && selectedApp.documentsMetadata.length > 0 ? (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                      {selectedApp.documentsMetadata.map((doc: any, index: number) => (\n                        <div key={index} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors\">\n                          <div className=\"w-8 h-8 bg-brand-primary-600 rounded-lg flex items-center justify-center\">\n                            <FileText className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"text-sm font-medium text-gray-900 truncate\">\n                              {doc.name || `Documento ${index + 1}`}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {doc.size ? `${Math.round(doc.size / 1024)} KB` : 'Tama├▒o desconocido'}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            {doc.url && (\n                              <>\n                                <button\n                                  onClick={() => window.open(doc.url, '_blank')}\n                                  className=\"p-1.5 rounded-lg text-brand-primary-600 hover:bg-brand-primary-50 transition-colors\"\n                                  title=\"Ver documento\"\n                                >\n                                  <ExternalLink className=\"w-4 h-4\" />\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    const link = document.createElement('a');\n                                    link.href = doc.url;\n                                    link.download = doc.name || `documento-${index + 1}`;\n                                    link.click();\n                                  }}\n                                  className=\"p-1.5 rounded-lg text-green-600 hover:bg-green-50 transition-colors\"\n                                  title=\"Descargar documento\"\n                                >\n                                  <Download className=\"w-4 h-4\" />\n                                </button>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <FileText className=\"w-8 h-8 text-gray-400\" />\n                      </div>\n                      <h4 className=\"text-sm font-medium text-gray-900 mb-1\">Sin documentos</h4>\n                      <p className=\"text-xs text-gray-500\">No se han subido documentos para esta solicitud</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Acciones del modal */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"flex flex-wrap gap-3 justify-end\">\n                  {selectedApp.status !== \"APPROVED\" && selectedApp.status !== \"REJECTED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"UNDER_REVIEW\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-blue-600 hover:bg-blue-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <Clock className=\"w-4 h-4\" />\n                      Marcar en Revisi├│n\n                    </button>\n                  )}\n                  {selectedApp.status !== \"APPROVED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"APPROVED\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-green-600 hover:bg-green-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <Check className=\"w-4 h-4\" />\n                      Aprobar Solicitud\n                    </button>\n                  )}\n                  {selectedApp.status !== \"REJECTED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"REJECTED\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-red-600 hover:bg-red-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <X className=\"w-4 h-4\" />\n                      Rechazar Solicitud\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <ConfirmationModal\n        isOpen={modalState.isOpen}\n        onClose={closeModal}\n        title={modalState.title}\n        message={modalState.message}\n        type={modalState.type}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\rates\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DollarSign' is defined but never used.","line":5,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":30},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calculator' is defined but never used.","line":5,"column":41,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":51},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchRateRanges'. Either include it or remove the dependency array.","line":100,"column":6,"nodeType":"ArrayExpression","endLine":100,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fetchRateRanges]","fix":{"range":[2721,2723],"text":"[fetchRateRanges]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport AdminNavigation from '@/components/admin/AdminNavigation';\nimport { Settings, DollarSign, Percent, Calculator, Save, RefreshCw, AlertCircle, Plus, Edit, Trash2, Calendar } from 'lucide-react';\n\ninterface InterestRateRange {\n  id: number;\n  name: string;\n  description?: string;\n  yearFrom: number;\n  yearTo: number;\n  interestRate: number;\n  isActive: boolean;\n  priority: number;\n  createdAt: string;\n  updatedAt: string;\n  createdByUser?: {\n    id: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n}\n\ninterface RateRangeFormData {\n  name: string;\n  description: string;\n  yearFrom: number;\n  yearTo: number;\n  interestRate: number;\n  isActive: boolean;\n  priority: number;\n}\n\nexport default function RatesPage() {\n  const [rateRanges, setRateRanges] = useState<InterestRateRange[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingRange, setEditingRange] = useState<InterestRateRange | null>(null);\n  const [formData, setFormData] = useState<RateRangeFormData>({\n    name: '',\n    description: '',\n    yearFrom: new Date().getFullYear() - 10,\n    yearTo: new Date().getFullYear(),\n    interestRate: 0.45,\n    isActive: true,\n    priority: 0\n  });\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n\n  // Funci├│n para obtener token desde cookies\n  const getTokenFromCookies = () => {\n    const cookies = document.cookie.split(';');\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=');\n      if (name === 'access_token') {\n        return value;\n      }\n    }\n    return null;\n  };\n\n  // Cargar rangos de tasas desde la API\n  const fetchRateRanges = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch('/api/admin/rates', {\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Error al cargar rangos de tasas');\n      }\n      \n      const result = await response.json();\n      if (result.success) {\n        setRateRanges(result.data);\n      } else {\n        setError(result.error || 'Error desconocido');\n      }\n    } catch (err) {\n      setError('Error de conexi├│n al cargar rangos de tasas');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    fetchRateRanges();\n  }, []);\n\n  // Manejar env├¡o del formulario\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const token = getTokenFromCookies();\n      const url = editingRange \n        ? `/api/admin/rates/${editingRange.id}`\n        : '/api/admin/rates';\n      \n      const method = editingRange ? 'PATCH' : 'POST';\n      \n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        },\n        credentials: 'include',\n        body: JSON.stringify(formData)\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        setSuccess(result.message || 'Operaci├│n exitosa');\n        setShowCreateModal(false);\n        setEditingRange(null);\n        resetForm();\n        await fetchRateRanges();\n      } else {\n        setError(result.error || 'Error en la operaci├│n');\n      }\n    } catch (err) {\n      setError('Error de conexi├│n');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Eliminar rango de tasas\n  const handleDelete = async (id: number) => {\n    if (!confirm('┬┐Est├í seguro de que desea eliminar este rango de tasas?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    \n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch(`/api/admin/rates/${id}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        }\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        setSuccess('Rango eliminado exitosamente');\n        await fetchRateRanges();\n      } else {\n        setError(result.error || 'Error al eliminar');\n      }\n    } catch (err) {\n      setError('Error de conexi├│n');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Resetear formulario\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      yearFrom: new Date().getFullYear() - 10,\n      yearTo: new Date().getFullYear(),\n      interestRate: 0.45,\n      isActive: true,\n      priority: 0\n    });\n  };\n\n  // Abrir modal de edici├│n\n  const handleEdit = (range: InterestRateRange) => {\n    setEditingRange(range);\n    setFormData({\n      name: range.name,\n      description: range.description || '',\n      yearFrom: range.yearFrom,\n      yearTo: range.yearTo,\n      interestRate: range.interestRate,\n      isActive: range.isActive,\n      priority: range.priority\n    });\n    setShowCreateModal(true);\n  };\n\n  // Formatear tasa como porcentaje\n  const formatRate = (rate: number) => {\n    return `${(rate * 100).toFixed(2)}%`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50\">\n      <AdminNavigation \n        title=\"Gesti├│n de Tasas por A├▒os\"\n        subtitle=\"Configuraci├│n de tasas de inter├®s seg├║n el a├▒o del veh├¡culo\"\n        stats={{\n          count: rateRanges.length,\n          label: \"rangos configurados\"\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6\">\n        {/* Mensajes de error y ├®xito */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <AlertCircle className=\"w-5 h-5 text-red-600\" />\n              <p className=\"text-red-800\">{error}</p>\n            </div>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"bg-green-50 border border-green-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <Settings className=\"w-5 h-5 text-green-600\" />\n              <p className=\"text-green-800\">{success}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Header con acciones */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-12 h-12 bg-brand-primary-100 rounded-xl flex items-center justify-center\">\n                <Calendar className=\"w-6 h-6 text-brand-primary-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-xl font-bold text-gray-900\">Rangos de Tasas por A├▒os</h2>\n                <p className=\"text-gray-600 text-sm\">\n                  Configure tasas de inter├®s seg├║n el a├▒o del modelo del veh├¡culo\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={fetchRateRanges}\n                disabled={loading}\n                className=\"flex items-center gap-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 disabled:opacity-50 transition-all\"\n              >\n                <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n                Actualizar\n              </button>\n              <button\n                onClick={() => {\n                  resetForm();\n                  setEditingRange(null);\n                  setShowCreateModal(true);\n                }}\n                className=\"flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 transition-all\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Nuevo Rango\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Lista de rangos de tasas */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 overflow-hidden\">\n          <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg flex items-center justify-center bg-blue-50 border-blue-200 text-blue-700\">\n                <Percent className=\"w-5 h-5\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-bold text-gray-900\">Rangos de Tasas Configurados</h3>\n                <p className=\"text-sm text-gray-600\">{rateRanges.length} rangos activos</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"divide-y divide-gray-100\">\n            {loading ? (\n              <div className=\"p-8 text-center\">\n                <RefreshCw className=\"w-8 h-8 animate-spin mx-auto text-gray-400 mb-4\" />\n                <p className=\"text-gray-600\">Cargando rangos de tasas...</p>\n              </div>\n            ) : rateRanges.length === 0 ? (\n              <div className=\"p-8 text-center\">\n                <Calendar className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" />\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">No hay rangos configurados</h4>\n                <p className=\"text-gray-600 mb-4\">Cree el primer rango de tasas para comenzar</p>\n                <button\n                  onClick={() => {\n                    resetForm();\n                    setEditingRange(null);\n                    setShowCreateModal(true);\n                  }}\n                  className=\"inline-flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 transition-all\"\n                >\n                  <Plus className=\"w-4 h-4\" />\n                  Crear Primer Rango\n                </button>\n              </div>\n            ) : (\n              rateRanges.map((range) => (\n                <div key={range.id} className=\"p-6 hover:bg-gray-50/50 transition-colors\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-3 mb-2\">\n                        <h4 className=\"text-lg font-semibold text-gray-900\">{range.name}</h4>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`px-2 py-1 rounded text-xs font-medium ${\n                            range.isActive \n                              ? 'bg-green-100 text-green-700' \n                              : 'bg-gray-100 text-gray-600'\n                          }`}>\n                            {range.isActive ? 'Activo' : 'Inactivo'}\n                          </span>\n                          {range.priority > 0 && (\n                            <span className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs font-medium\">\n                              Prioridad {range.priority}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      {range.description && (\n                        <p className=\"text-gray-600 text-sm mb-3\">{range.description}</p>\n                      )}\n                      <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                        <span>A├▒os: {range.yearFrom} - {range.yearTo}</span>\n                        <span>ÔÇó</span>\n                        <span>Tasa: {formatRate(range.interestRate)}</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2 ml-6\">\n                      <button\n                        onClick={() => handleEdit(range)}\n                        className=\"p-2 text-gray-600 hover:text-brand-primary-600 hover:bg-brand-primary-50 rounded-lg transition-all\"\n                        title=\"Editar rango\"\n                      >\n                        <Edit className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleDelete(range.id)}\n                        className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all\"\n                        title=\"Eliminar rango\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Modal para crear/editar rango */}\n        {showCreateModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-xl font-bold text-gray-900\">\n                  {editingRange ? 'Editar Rango de Tasas' : 'Crear Nuevo Rango de Tasas'}\n                </h3>\n                <p className=\"text-gray-600 text-sm mt-1\">\n                  Configure las tasas de inter├®s seg├║n el a├▒o del modelo del veh├¡culo\n                </p>\n              </div>\n              \n              <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Nombre del Rango *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      placeholder=\"Ej: Veh├¡culos 2005-2015\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Descripci├│n\n                    </label>\n                    <textarea\n                      value={formData.description}\n                      onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      placeholder=\"Descripci├│n opcional del rango\"\n                      rows={3}\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      A├▒o Desde *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.yearFrom}\n                      onChange={(e) => setFormData({ ...formData, yearFrom: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"1900\"\n                      max=\"2050\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      A├▒o Hasta *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.yearTo}\n                      onChange={(e) => setFormData({ ...formData, yearTo: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"1900\"\n                      max=\"2050\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Tasa de Inter├®s Anual (%) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.interestRate * 100}\n                      onChange={(e) => setFormData({ ...formData, interestRate: parseFloat(e.target.value) / 100 })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"0.01\"\n                      max=\"100\"\n                      step=\"0.01\"\n                      required\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Ingrese el porcentaje (ej: 45.5 para 45.5%)\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Prioridad\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.priority}\n                      onChange={(e) => setFormData({ ...formData, priority: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"0\"\n                      max=\"100\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Mayor prioridad en caso de solapamiento\n                    </p>\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"flex items-center gap-2\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.isActive}\n                        onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n                        className=\"w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-500\"\n                      />\n                      <span className=\"text-sm font-medium text-gray-700\">\n                        Rango activo\n                      </span>\n                    </label>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Solo los rangos activos se utilizan en los c├ílculos\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-end gap-3 pt-6 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCreateModal(false);\n                      setEditingRange(null);\n                      setError('');\n                      setSuccess('');\n                    }}\n                    className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-all\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className=\"flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 disabled:opacity-50 transition-all\"\n                  >\n                    {loading ? (\n                      <RefreshCw className=\"w-4 h-4 animate-spin\" />\n                    ) : (\n                      <Save className=\"w-4 h-4\" />\n                    )}\n                    {editingRange ? 'Actualizar' : 'Crear'} Rango\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Nota informativa */}\n        <div className=\"mt-8 bg-blue-50 border border-blue-200 rounded-xl p-6\">\n          <div className=\"flex items-start gap-4\">\n            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n              <AlertCircle className=\"w-5 h-5 text-blue-600\" />\n            </div>\n            <div>\n              <h4 className=\"font-semibold text-blue-900 mb-2\">Informaci├│n del Sistema de Tasas</h4>\n              <div className=\"text-blue-800 text-sm space-y-1\">\n                <p>ÔÇó Los rangos de a├▒os no pueden solaparse entre s├¡</p>\n                <p>ÔÇó La calculadora del concesionario aplicar├í autom├íticamente la tasa seg├║n el a├▒o del veh├¡culo</p>\n                <p>ÔÇó En caso de solapamiento, se usa el rango con mayor prioridad</p>\n                <p>ÔÇó Los concesionarios pueden ver las tasas pero no modificarlas</p>\n                <p>ÔÇó Los cambios se aplican inmediatamente en todas las calculadoras</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\dealers\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\loan-applications\\[publicId]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\loan-applications\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\rates\\[id]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\rates\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\change-password\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":47,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":47,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { z } from 'zod';\nimport { prisma } from '@/lib/prisma';\n\nconst changePasswordSchema = z.object({\n  currentPassword: z.string().min(1, 'Contrase├▒a actual requerida'),\n  newPassword: z.string().min(8, 'La nueva contrase├▒a debe tener al menos 8 caracteres'),\n  confirmPassword: z.string().min(1, 'Confirmaci├│n de contrase├▒a requerida'),\n}).refine((data) => data.newPassword === data.confirmPassword, {\n  message: \"Las contrase├▒as no coinciden\",\n  path: [\"confirmPassword\"],\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Validar datos\n    const validation = changePasswordSchema.safeParse(body);\n    if (!validation.success) {\n      return NextResponse.json(\n        { \n          error: 'Datos inv├ílidos',\n          details: validation.error.errors \n        },\n        { status: 400 }\n      );\n    }\n\n    const { currentPassword, newPassword } = validation.data;\n\n    // Obtener token de las cookies\n    const accessToken = request.cookies.get('accessToken')?.value;\n    if (!accessToken) {\n      return NextResponse.json(\n        { error: 'No autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar token\n    let decoded;\n    try {\n      decoded = jwt.verify(accessToken, process.env.JWT_SECRET!) as any;\n    } catch (error) {\n      return NextResponse.json(\n        { error: 'Token inv├ílido' },\n        { status: 401 }\n      );\n    }\n\n    // Buscar usuario\n    const user = await prisma.user.findUnique({\n      where: { \n        id: decoded.userId,\n        deletedAt: null \n      }\n    });\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Usuario no encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar contrase├▒a actual\n    if (!user.passwordHash) {\n      return NextResponse.json(\n        { error: 'Usuario no tiene contrase├▒a configurada' },\n        { status: 400 }\n      );\n    }\n\n    const isCurrentPasswordValid = await bcrypt.compare(currentPassword, user.passwordHash);\n    if (!isCurrentPasswordValid) {\n      return NextResponse.json(\n        { error: 'Contrase├▒a actual incorrecta' },\n        { status: 400 }\n      );\n    }\n\n    // Generar hash de la nueva contrase├▒a\n    const newPasswordHash = await bcrypt.hash(newPassword, 12);\n\n    // Actualizar contrase├▒a y estado del usuario\n    await prisma.user.update({\n      where: { id: user.id },\n      data: {\n        passwordHash: newPasswordHash,\n        status: user.status === 'INVITED' ? 'ACTIVE' : user.status // Activar si era invitado\n      }\n    });\n\n    // Registrar en audit log\n    await prisma.auditLog.create({\n      data: {\n        actorUserId: user.id,\n        action: 'auth.password_changed',\n        entityType: 'user',\n        entityId: user.publicId,\n        metadata: {\n          wasInvited: user.status === 'INVITED',\n        },\n        ip: request.headers.get('x-forwarded-for') || 'unknown'\n      }\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: 'Contrase├▒a actualizada correctamente'\n    });\n\n  } catch (error) {\n    console.error('Change password error:', error);\n    return NextResponse.json(\n      { error: 'Error interno del servidor' },\n      { status: 500 }\n    );\n  }\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\login\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\logout\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\me\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\refresh\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":30,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { prisma } from '@/lib/prisma';\n\n// Utilidad local para generar tokens (mismo formato que /api/auth/login)\nfunction generateTokens(userId: number, role: string, dealerId?: number) {\n  const payload: any = { userId, role };\n  if (typeof dealerId === 'number') payload.dealerId = dealerId;\n\n  const accessToken = jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '15m' });\n  const refreshToken = jwt.sign(payload, process.env.JWT_REFRESH_SECRET!, { expiresIn: '7d' });\n  return { accessToken, refreshToken };\n}\n\nasync function hashToken(token: string): Promise<string> {\n  return bcrypt.hash(token, 12);\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const rCookie = request.cookies.get('refresh_token')?.value;\n    if (!rCookie) {\n      return NextResponse.json({ error: 'Falta refresh token' }, { status: 401 });\n    }\n\n    let decoded: any;\n    try {\n      decoded = jwt.verify(rCookie, process.env.JWT_REFRESH_SECRET!);\n    } catch (err) {\n      return NextResponse.json({ error: 'Refresh token inv├ílido o expirado' }, { status: 401 });\n    }\n\n    const userId = decoded.userId as number | undefined;\n    if (!userId) {\n      return NextResponse.json({ error: 'Token sin identidad' }, { status: 401 });\n    }\n\n    // Validar usuario vigente\n    const user = await prisma.user.findFirst({\n      where: { id: userId, deletedAt: null },\n      include: { dealer: { select: { id: true, status: true } } },\n    });\n    if (!user) {\n      return NextResponse.json({ error: 'Usuario no encontrado' }, { status: 401 });\n    }\n    if (user.status === 'SUSPENDED') {\n      return NextResponse.json({ error: 'Usuario suspendido' }, { status: 403 });\n    }\n    if (user.role === 'DEALER' && user.dealer?.status !== 'APPROVED') {\n      return NextResponse.json({ error: 'Concesionario no aprobado' }, { status: 403 });\n    }\n\n    // Buscar registro de refresh token vigente y comparar hash\n    const candidates = await prisma.refreshToken.findMany({\n      where: {\n        userId: user.id,\n        revokedAt: null,\n        expiresAt: { gt: new Date() },\n      },\n      orderBy: { createdAt: 'desc' },\n    });\n\n    let matched: { id: number } | null = null;\n    for (const c of candidates) {\n      const ok = await bcrypt.compare(rCookie, c.tokenHash);\n      if (ok) {\n        matched = { id: c.id };\n        break;\n      }\n    }\n\n    if (!matched) {\n      // Opcional: invalidar todos los tokens si hay sospecha de robo\n      return NextResponse.json({ error: 'Refresh token no reconocido' }, { status: 401 });\n    }\n\n    // Generar nuevos tokens\n    let dealerIdForToken: number | undefined = undefined;\n    if (user.role === 'DEALER' || user.role === 'EJECUTIVO_CUENTAS') {\n      dealerIdForToken = user.dealerId || undefined;\n    }\n    const { accessToken, refreshToken } = generateTokens(user.id, user.role, dealerIdForToken);\n\n    // Rotaci├│n segura: crear nuevo registro, revocar el anterior y enlazar replacedBy\n    const userAgent = request.headers.get('user-agent') || undefined;\n    const ip = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown';\n\n    const newHash = await hashToken(refreshToken);\n    const newRecord = await prisma.refreshToken.create({\n      data: {\n        userId: user.id,\n        tokenHash: newHash,\n        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n        userAgent,\n        ip,\n      },\n      select: { id: true },\n    });\n\n    await prisma.refreshToken.update({\n      where: { id: matched.id },\n      data: { revokedAt: new Date(), replacedByTokenId: newRecord.id },\n    });\n\n    // Audit log\n    await prisma.auditLog.create({\n      data: {\n        actorUserId: user.id,\n        action: 'auth.refresh',\n        entityType: 'user',\n        entityId: String(user.publicId),\n        metadata: { ip, ua: userAgent },\n        ip: typeof ip === 'string' ? ip : 'unknown',\n      },\n    });\n\n    // Preparar respuesta con nuevas cookies\n    const response = NextResponse.json({ success: true });\n    const cookieOptions = {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax' as const,\n      path: '/',\n    };\n\n    response.cookies.set('access_token', accessToken, { ...cookieOptions, maxAge: 15 * 60 });\n    response.cookies.set('refresh_token', refreshToken, { ...cookieOptions, maxAge: 7 * 24 * 60 * 60 });\n\n    return response;\n  } catch (error) {\n    console.error('Refresh error:', error);\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealer\\users\\[publicId]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealer\\users\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealers\\register\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\health\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\loan-applications\\my-applications\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'role' is assigned a value but never used.","line":40,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":40,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'dealerId' is assigned a value but never used.","line":41,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":41,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport { jwtVerify } from 'jose';\nimport { prisma } from '@/lib/prisma';\nimport { cookies } from 'next/headers';\nimport { errorLog } from '@/lib/logger';\n\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || '');\nconst JWT_REFRESH_SECRET = new TextEncoder().encode(process.env.JWT_REFRESH_SECRET || '');\n\nexport async function GET(request: NextRequest) {\n  try {\n    // 1) Intentar obtener identidad desde headers inyectados por middleware\n    const headerUserId = request.headers.get('x-user-id');\n    const headerRole = request.headers.get('x-user-role');\n    const headerDealerId = request.headers.get('x-user-dealer-id');\n\n    let userId: number | null = headerUserId ? parseInt(headerUserId, 10) : null;\n    let role: string | null = headerRole || null;\n    let dealerId: number | null = headerDealerId ? parseInt(headerDealerId, 10) : null;\n\n    // 2) Fallback: verificar cookies (access_token primero, luego refresh_token)\n    if (!userId) {\n      const cookieStore = await cookies();\n      const accessToken = cookieStore.get('access_token')?.value;\n      const refreshToken = cookieStore.get('refresh_token')?.value;\n\n      if (!accessToken && !refreshToken) {\n        return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n      }\n\n      try {\n        if (accessToken) {\n          const { payload } = await jwtVerify(accessToken, JWT_SECRET);\n          userId = (payload.userId as number) ?? null;\n          role = (payload.role as string) ?? null;\n          dealerId = (payload.dealerId as number) ?? null;\n        } else if (refreshToken) {\n          const { payload } = await jwtVerify(refreshToken, JWT_REFRESH_SECRET);\n          userId = (payload.userId as number) ?? null;\n          role = (payload.role as string) ?? null;\n          dealerId = (payload.dealerId as number) ?? null;\n        }\n      } catch (err) {\n        errorLog('ÔØî Error verificando JWT en /my-applications:', err);\n        return NextResponse.json({ error: 'Token inv├ílido' }, { status: 401 });\n      }\n    }\n\n    if (!userId) {\n      return NextResponse.json({ error: 'Token inv├ílido' }, { status: 401 });\n    }\n\n    // Obtener datos del usuario\n    const user = await prisma.user.findFirst({\n      where: { \n        id: userId,\n        deletedAt: null \n      },\n      select: {\n        id: true,\n        role: true,\n        dealerId: true,\n        dealer: {\n          select: {\n            id: true,\n            tradeName: true,\n          }\n        }\n      },\n    });\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Usuario no encontrado' },\n        { status: 404 }\n      );\n    }\n\n    const whereCondition: any = {};\n\n    // Filtrar seg├║n el rol del usuario\n    if (user.role === 'EJECUTIVO_CUENTAS') {\n      // Ejecutivos solo ven sus propias solicitudes\n      whereCondition.submittedByUserId = user.id;\n    } else if (user.role === 'DEALER') {\n      // Dealers ven todas las solicitudes de su concesionario\n      if (user.dealerId) {\n        // M├ís simple y alineado con la otra ruta: filtrar por dealerId\n        whereCondition.dealerId = user.dealerId\n      } else {\n        // Si el dealer no tiene dealerId, solo sus propias solicitudes\n        whereCondition.submittedByUserId = user.id\n      }\n    } else if (user.role === 'ADMIN') {\n      // Admins ven todas las solicitudes (sin filtro adicional)\n    } else {\n      return NextResponse.json(\n        { error: 'Rol no autorizado' },\n        { status: 403 }\n      );\n    }\n\n\n    // Obtener solicitudes filtradas\n    const applications = await prisma.loanApplication.findMany({\n      where: whereCondition,\n      select: {\n        publicId: true,\n        // Datos del solicitante (seg├║n schema.prisma)\n        applicantFirstName: true,\n        applicantLastName: true,\n        applicantCuil: true,\n        applicantEmail: true,\n        applicantPhone: true,\n        // C├ílculos del pr├®stamo\n        vehiclePrice: true,\n        loanAmount: true,\n        monthlyPayment: true,\n        loanTermMonths: true,\n        interestRate: true,\n        status: true,\n        createdAt: true,\n        updatedAt: true,\n        dealerId: true,\n        submittedByUserId: true,\n        submittedByUser: {\n          select: {\n            firstName: true,\n            lastName: true,\n            role: true,\n          }\n        }\n      },\n      orderBy: {\n        createdAt: 'desc'\n      }\n    });\n\n    return NextResponse.json({\n      success: true,\n      applications,\n      userInfo: {\n        role: user.role,\n        dealerName: user.dealer?.tradeName || null,\n        totalApplications: applications.length\n      }\n    });\n\n  } catch (error) {\n    errorLog('Error en /api/loan-applications/my-applications:', error);\n    return NextResponse.json(\n      { error: 'Error interno del servidor' },\n      { status: 500 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\loan-applications\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\rates\\by-year\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\rates\\by-year\\temp-route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\uploads\\loan-docs\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\change-password\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\login\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\dashboard\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\login.backup\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\registro-concesionario\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\HomePage.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":8,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\"\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\"\nimport { CheckCircle, Star, Zap, Shield, Building, FileText, Users, Calculator, Car, Bike } from \"lucide-react\"\nimport { LoginModal } from \"@/components/LoginModal\"\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nexport default function HomePage() {\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n\n  return (\n    <main className=\"font-sans bg-gradient-to-br from-white via-slate-50 to-blue-50 text-text min-h-screen\">\n      {/* Header con Logo */}\n      <header className=\"bg-white border-b border-gray-100\" role=\"banner\">\n        <div className=\"w-full px-1 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Image\n              src=\"/crediexpress-logo-sinfondo.png\"\n              alt=\"Crediexpress Automotor\"\n              width={400}\n              height={98}\n              className=\"h-auto object-contain max-h-14\"\n              style={{ width: 'auto' }}\n            />\n            <nav className=\"hidden md:flex items-center space-x-6\" role=\"navigation\" aria-label=\"Navegaci├│n principal\">\n              <a href=\"#beneficios\" className=\"text-gray-600 hover:text-brand-primary-600 font-medium transition-colors\">Beneficios</a>\n              <a href=\"#como-acceder\" className=\"text-gray-600 hover:text-brand-primary-600 font-medium transition-colors\">C├│mo funciona</a>\n              <Button className=\"bg-brand-primary-600 hover:bg-brand-primary-700 transition-colors\">Contacto</Button>\n              <Button \n                onClick={() => setIsLoginModalOpen(true)}\n                className=\"bg-brand-primary-600 hover:bg-brand-primary-700 transition-colors\"\n              >\n                Soy Concesionario\n              </Button>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero */}\n      <section className=\"relative overflow-hidden bg-white\" role=\"main\" aria-labelledby=\"hero-title\">\n        {/* Imagen de fondo */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-white via-white/70 to-white/40 z-10\"></div>\n          <Image\n            src=\"https://images.unsplash.com/photo-1503376780353-7e6692767b70?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80\"\n            alt=\"Auto de lujo\"\n            fill\n            sizes=\"100vw\"\n            className=\"object-cover object-center\"\n            priority\n          />\n        </div>\n        <div className=\"absolute inset-0 bg-gradient-to-br from-brand-primary-600/5 via-transparent to-brand-accent-500/5 z-20\"></div>\n        <div className=\"container mx-auto px-6 sm:px-8 py-20 sm:py-32 relative z-30\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"space-y-8\">\n              <div className=\"space-y-6\">\n                <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-brand-accent-500/10 border border-brand-accent-500/20\">\n                  <span className=\"text-sm font-medium text-brand-primary-600 drop-shadow-sm\">Ô£¿ Financiaci├│n confiable desde 2008</span>\n                </div>\n                <h1 id=\"hero-title\" className=\"text-5xl sm:text-6xl lg:text-7xl font-bold leading-tight tracking-tight drop-shadow-lg\">\n                  <span className=\"text-brand-primary-600 drop-shadow-md\">Cr├®ditos</span>\n                  <br />\n                  <span className=\"text-gray-900 drop-shadow-md\">prendarios</span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-brand-accent-500 to-yellow-400 bg-clip-text text-transparent drop-shadow-md\">inteligentes</span>\n                </h1>\n                <p className=\"text-xl text-gray-600 max-w-prose leading-relaxed drop-shadow-sm\">\n                  Financi├í tu auto o moto con las mejores condiciones del mercado. \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">Tasas competitivas</span>, \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">aprobaci├│n r├ípida</span> y \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">transparencia total</span>.\n                </p>\n              </div>\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Button size=\"lg\" className=\"bg-brand-primary-600 hover:bg-brand-primary-700 text-white shadow-lg hover:shadow-xl transition-all transform hover:scale-105\">\n                  <Calculator className=\"mr-2 h-5 w-5\" />\n                  Simul├í tu Cr├®dito\n                </Button>\n                <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-brand-primary-600 text-brand-primary-600 hover:bg-brand-primary-600 hover:text-white shadow-lg hover:shadow-xl transition-all transform hover:scale-105\">\n                  <FileText className=\"mr-2 h-5 w-5\" />\n                  Ver Solicitudes\n                </Button>\n              </div>\n            </div>\n            <div className=\"relative\">\n              <div className=\"bg-white rounded-2xl shadow-2xl p-8 backdrop-blur-sm bg-white/90 border border-gray-100\">\n                <h2 className=\"text-2xl font-bold text-brand-primary-600 mb-6\">Calculadora R├ípida</h2>\n                <div className=\"space-y-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tipo de Veh├¡culo</label>\n                    <div className=\"flex gap-2\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        <Car className=\"mr-2 h-4 w-4\" />\n                        Auto\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        <Bike className=\"mr-2 h-4 w-4\" />\n                        Moto\n                      </Button>\n                    </div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Monto del Veh├¡culo</label>\n                    <input \n                      type=\"text\" \n                      placeholder=\"$15.000.000\" \n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-transparent\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cuotas</label>\n                    <select className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-transparent\">\n                      <option>12 cuotas</option>\n                      <option>24 cuotas</option>\n                      <option>36 cuotas</option>\n                      <option>48 cuotas</option>\n                    </select>\n                  </div>\n                  <div className=\"bg-brand-primary-600/5 p-4 rounded-lg\">\n                    <div className=\"text-center\">\n                      <p className=\"text-sm text-gray-600\">Cuota estimada</p>\n                      <p className=\"text-3xl font-bold text-brand-primary-600\">$625.000</p>\n                      <p className=\"text-xs text-gray-500 mt-1\">TNA: 70% | TEA: 98% | CFT: 115%</p>\n                    </div>\n                  </div>\n                  <Button className=\"w-full bg-brand-primary-600 hover:bg-brand-primary-700 text-white\">\n                    Ver Simulaci├│n Completa\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Beneficios */}\n      <section id=\"beneficios\" className=\"py-20 bg-white\" aria-labelledby=\"beneficios-title\">\n        <div className=\"container mx-auto px-6 sm:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 id=\"beneficios-title\" className=\"text-4xl font-bold text-brand-primary-600 mb-4\">┬┐Por qu├® elegir Crediexpress?</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              M├ís de 15 a├▒os financiando sue├▒os automotrices con transparencia y confianza\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-blue-50 to-white border border-blue-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-brand-primary-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Zap className=\"h-8 w-8 text-brand-primary-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aprobaci├│n R├ípida</h3>\n              <p className=\"text-gray-600\">Respuesta en menos de 24 horas con documentaci├│n m├¡nima</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-green-50 to-white border border-green-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-green-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"h-8 w-8 text-green-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">100% Seguro</h3>\n              <p className=\"text-gray-600\">Plataforma encriptada y regulada por el BCRA</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-yellow-50 to-white border border-yellow-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-brand-accent-500/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Building className=\"h-8 w-8 text-brand-accent-500\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">+500 Concesionarios</h3>\n              <p className=\"text-gray-600\">Red nacional de concesionarios aliados</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-purple-50 to-white border border-purple-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-purple-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"h-8 w-8 text-purple-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Sin Comisiones Ocultas</h3>\n              <p className=\"text-gray-600\">Transparencia total en costos y condiciones</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-red-50 to-white border border-red-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-red-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Star className=\"h-8 w-8 text-red-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Atenci├│n Personalizada</h3>\n              <p className=\"text-gray-600\">Asesoramiento experto en cada paso del proceso</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-indigo-50 to-white border border-indigo-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-indigo-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"h-8 w-8 text-indigo-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Comunidad Activa</h3>\n              <p className=\"text-gray-600\">M├ís de 50.000 clientes satisfechos nos recomiendan</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* C├│mo Acceder */}\n      <section id=\"como-acceder\" className=\"py-20 bg-gradient-to-br from-slate-50 to-blue-50\" aria-labelledby=\"como-acceder-title\">\n        <div className=\"container mx-auto px-6 sm:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 id=\"como-acceder-title\" className=\"text-4xl font-bold text-brand-primary-600 mb-4\">┬┐C├│mo acceder a tu cr├®dito?</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Proceso simple y r├ípido en 3 pasos\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                1\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Simul├í tu Cr├®dito</h3>\n              <p className=\"text-gray-600\">Ingres├í el monto y plazo deseado para conocer tu cuota mensual</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                2\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Complet├í tu Solicitud</h3>\n              <p className=\"text-gray-600\">Carg├í tus datos personales y documentaci├│n requerida</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                3\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">┬íRetir├í tu Auto!</h3>\n              <p className=\"text-gray-600\">Una vez aprobado, coordin├í la entrega en el concesionario</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Final */}\n      <section className=\"py-20 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 text-white\">\n        <div className=\"container mx-auto px-6 sm:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-4\">┬┐Listo para financiar tu pr├│ximo veh├¡culo?</h2>\n          <p className=\"text-xl mb-8 opacity-90\">\n            Comenz├í ahora y obten├® tu preaprobaci├│n en minutos\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-brand-primary-600 hover:bg-gray-100 transition-all\">\n              Simular Cr├®dito\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-brand-primary-600 transition-all\">\n              Contactar Asesor\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer Informaci├│n */}\n      <footer className=\"bg-surface py-8\">\n        <div className=\"container mx-auto px-6 sm:px-8 text-center\">\n          <p className=\"text-sm text-[color:var(--color-text)]/60\">\n            Crediexpress Auto - Cr├®ditos prendarios para autos y motos\n          </p>\n          <p className=\"text-xs text-[color:var(--color-text)]/40 mt-2\">\n            Los valores mostrados son estimativos. Sujeto a evaluaci├│n crediticia.\n          </p>\n        </div>\n      </footer>\n\n      <LoginModal \n        open={isLoginModalOpen} \n        onOpenChange={setIsLoginModalOpen} \n      />\n    </main>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\LoginModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\admin\\AdminNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\calculator\\LoanCalculator.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calendar' is defined but never used.","line":4,"column":46,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":54},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setSelectedTerm' is assigned a value but never used.","line":31,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":39},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchRateByYear'. Either include it or remove the dependency array.","line":72,"column":6,"nodeType":"ArrayExpression","endLine":72,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [fetchRateByYear, vehicleYear]","fix":{"range":[2760,2773],"text":"[fetchRateByYear, vehicleYear]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'availableTerms'. Either include it or remove the dependency array.","line":95,"column":6,"nodeType":"ArrayExpression","endLine":95,"endColumn":49,"suggestions":[{"desc":"Update the dependencies array to be: [inputs, selectedTerm, onCalculationChange, availableTerms]","fix":{"range":[3425,3468],"text":"[inputs, selectedTerm, onCalculationChange, availableTerms]"}}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'formatCurrency' is assigned a value but never used.","line":108,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":108,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'formatPercent' is assigned a value but never used.","line":117,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":117,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Calculator, TrendingUp, DollarSign, Calendar, Percent, CheckCircle } from 'lucide-react';\nimport { calcular, type Inputs, type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanCalculatorProps {\n  className?: string;\n  onCalculationComplete?: (result: any) => void;\n  onCalculationChange?: (result: Result | null) => void;\n}\n\nexport default function LoanCalculator({ onCalculationChange, onCalculationComplete }: LoanCalculatorProps) {\n  const [inputs, setInputs] = useState<Inputs>({\n    monto: 5000000,\n    plazoMeses: 36,\n    tasa: { tipo: 'TNA', valor: 0.60 }, // 60% TNA\n    ivaInteres: 0.21, // 21% IVA\n    gastosOtorgamientoPct: 0.03, // 3%\n    gastosFijosIniciales: 0,\n    sellosPct: 0.012, // 1.2% sellos\n    svsPctMensual: 0,\n    seguroAutoMensual: 0,\n  });\n\n  const [vehicleYear, setVehicleYear] = useState<number>(new Date().getFullYear());\n  const [loadingRate, setLoadingRate] = useState(false);\n  const [rateError, setRateError] = useState<string>('');\n  const [rateInfo, setRateInfo] = useState<string>('');\n  const [results, setResults] = useState<{[key: number]: Result}>({});\n  const [selectedTerm, setSelectedTerm] = useState<number>(24);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  const availableTerms = [6, 12, 24, 48];\n\n  // Funci├│n para obtener la tasa seg├║n el a├▒o del veh├¡culo\n  const fetchRateByYear = async (year: number) => {\n    setLoadingRate(true);\n    setRateError('');\n    setRateInfo('');\n    \n    try {\n      const response = await fetch(`/api/rates/by-year?year=${year}`);\n      const json = await response.json();\n      \n      if (json?.success && json?.data?.interestRate != null) {\n        // Actualizar la tasa en los inputs\n        const { interestRate, rateRange } = json.data;\n        updateTasa('valor', Number(interestRate));\n        const yFrom = rateRange?.yearFrom ?? '';\n        const yTo = rateRange?.yearTo ?? '';\n        setRateInfo(`Tasa aplicada: ${(Number(interestRate) * 100).toFixed(1)}% ${yFrom && yTo ? `para veh├¡culos ${yFrom}-${yTo}` : ''}`);\n      } else {\n        setRateError(json?.error || 'No se encontr├│ una tasa para este a├▒o');\n        // Mantener tasa por defecto\n        updateTasa('valor', 0.60); // 60% por defecto\n      }\n    } catch (error) {\n      console.error('Error al obtener tasa:', error);\n      setRateError('Error al obtener la tasa. Se usar├í la tasa por defecto.');\n      updateTasa('valor', 0.60); // 60% por defecto\n    } finally {\n      setLoadingRate(false);\n    }\n  };\n\n  // Efecto para obtener tasa cuando cambia el a├▒o\n  useEffect(() => {\n    if (vehicleYear >= 1990 && vehicleYear <= new Date().getFullYear() + 1) {\n      fetchRateByYear(vehicleYear);\n    }\n  }, [vehicleYear]);\n\n  useEffect(() => {\n    try {\n      // Calcular para todos los plazos disponibles\n      const newResults: {[key: number]: Result} = {};\n      \n      availableTerms.forEach(term => {\n        const inputsForTerm = { ...inputs, plazoMeses: term };\n        newResults[term] = calcular(inputsForTerm);\n      });\n      \n      setResults(newResults);\n      \n      // Notificar el resultado del plazo seleccionado\n      if (newResults[selectedTerm]) {\n        onCalculationChange?.(newResults[selectedTerm]);\n      }\n    } catch (error) {\n      console.error('Error en c├ílculo:', error);\n      setResults({});\n      onCalculationChange?.(null);\n    }\n  }, [inputs, selectedTerm, onCalculationChange]);\n\n  const updateInput = (field: keyof Inputs, value: any) => {\n    setInputs(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateTasa = (field: 'tipo' | 'valor', value: any) => {\n    setInputs(prev => ({\n      ...prev,\n      tasa: { ...prev.tasa, [field]: value }\n    }));\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatPercent = (value: number) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con gradiente */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-8 py-8 text-center relative overflow-hidden\">\n        <div className=\"absolute top-0 right-0 w-32 h-32 bg-white/5 rounded-full -translate-y-16 translate-x-16\"></div>\n        <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-brand-accent-500/20 rounded-full translate-y-12 -translate-x-12\"></div>\n        \n        <div className=\"relative\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center\">\n              <Calculator className=\"w-6 h-6 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-white\">Calculadora de Pr├®stamos</h2>\n          </div>\n          <p className=\"text-brand-primary-100 text-lg\">Calcula tu pr├®stamo prendario en tiempo real</p>\n        </div>\n      </div>\n\n      <div className=\"p-8 space-y-8\">\n        {/* Campos b├ísicos */}\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n            <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center shadow-sm\">\n              <DollarSign className=\"w-4 h-4 text-white\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900\">Datos del Pr├®stamo</h3>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Monto a Financiar *\n              </label>\n              <input\n                type=\"number\"\n                value={inputs.monto}\n                onChange={(e) => updateInput('monto', Number(e.target.value))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"5.000.000\"\n                min=\"100000\"\n                step=\"10000\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                A├▒o del Veh├¡culo *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={vehicleYear}\n                  onChange={(e) => setVehicleYear(Number(e.target.value))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                  placeholder={new Date().getFullYear().toString()}\n                  min=\"1990\"\n                  max={new Date().getFullYear() + 1}\n                />\n                {loadingRate && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-brand-primary-600\"></div>\n                  </div>\n                )}\n              </div>\n              {rateInfo && (\n                <p className=\"text-sm text-green-600 mt-1 flex items-center gap-1\">\n                  <CheckCircle className=\"w-4 h-4\" />\n                  {rateInfo}\n                </p>\n              )}\n              {rateError && (\n                <p className=\"text-sm text-red-600 mt-1\">\n                  {rateError}\n                </p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tipo de Tasa *\n              </label>\n              <select\n                value={inputs.tasa.tipo}\n                onChange={(e) => updateTasa('tipo', e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"TNA\">TNA (Tasa Nominal Anual)</option>\n                <option value=\"TEA\">TEA (Tasa Efectiva Anual)</option>\n                <option value=\"MENSUAL\">Tasa Mensual</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tasa de Inter├®s (%) - Solo Lectura\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={inputs.tasa.valor * 100}\n                  readOnly\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700 cursor-not-allowed shadow-sm\"\n                  placeholder=\"60\"\n                />\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  <Percent className=\"w-4 h-4 text-gray-400\" />\n                </div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                La tasa se asigna autom├íticamente seg├║n el a├▒o del veh├¡culo\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                IVA sobre Intereses *\n              </label>\n              <select\n                value={inputs.ivaInteres}\n                onChange={(e) => updateInput('ivaInteres', Number(e.target.value))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value={0}>Sin IVA (0%)</option>\n                <option value={0.105}>IVA Reducido (10.5%)</option>\n                <option value={0.21}>IVA General (21%)</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={() => setShowAdvanced((s) => !s)}\n              className=\"text-sm font-medium text-brand-primary-700 hover:text-brand-primary-800 underline\"\n            >\n              {showAdvanced ? 'Ocultar configuraci├│n avanzada' : 'Mostrar configuraci├│n avanzada'}\n            </button>\n          </div>\n\n          {showAdvanced && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Configuraci├│n avanzada</h3>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Gastos de Otorgamiento (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={(inputs.gastosOtorgamientoPct ?? 0) * 100}\n                    onChange={(e) => updateInput('gastosOtorgamientoPct', Number(e.target.value) / 100)}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                    placeholder=\"3\"\n                    min=\"0\"\n                    max=\"20\"\n                    step=\"0.1\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"rounded-lg bg-gray-50 p-4 text-sm text-gray-600\">\n                La cuota se calcula con tasa mensual que <strong>incluye IVA</strong> y se <strong>redondea a entero</strong>. Conversi├│n TNAÔåÆTEM: 365/30. El CFT anual se obtiene sobre el desembolso neto (descontando <strong>solo</strong> gastos de otorgamiento <em>netos de IVA</em>) y se anualiza con 365/30.\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Resultados por Plazo */}\n        {Object.keys(results).length > 0 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n              <div className=\"w-8 h-8 bg-green-600 rounded-full flex items-center justify-center shadow-sm\">\n                <TrendingUp className=\"w-4 h-4 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Resultados por Plazo</h3>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n              {availableTerms.map((term) => {\n                const result = results[term];\n                if (!result) return null;\n                \n                return (\n                  <div key={term} className=\"bg-white border border-gray-200 rounded-2xl p-6 hover:shadow-lg transition-all\">\n                    {/* Header */}\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div>\n                        <h4 className=\"text-2xl font-bold text-gray-900\">{term} meses</h4>\n                        <p className=\"text-sm text-gray-600\">\n                          {term === 6 ? 'Pago r├ípido' : term === 12 ? 'Equilibrado' : term === 24 ? 'Recomendado' : 'Cuotas bajas'}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm text-gray-600\">CFT Anual</div>\n                        <div className=\"text-lg font-bold text-brand-accent-500\">\n                          {(result.totales.cftEfectivoAnual * 100).toFixed(1)}%\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Cuota destacada */}\n                    <div className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 rounded-xl p-4 text-white mb-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <div className=\"text-sm text-brand-primary-100\">Cuota mensual</div>\n                          <div className=\"text-2xl font-bold\">\n                            ${Math.round(result.rows[0]?.cuotaTotal || 0).toLocaleString('es-AR')}\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-brand-primary-100\">Total a pagar</div>\n                          <div className=\"text-lg font-semibold\">\n                            ${Math.round(result.totales.sumaCuotas).toLocaleString('es-AR')}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Detalles */}\n                    <div className=\"space-y-2 text-sm mb-4\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Monto que recib├¡s:</span>\n                        <span className=\"font-semibold text-green-600\">\n                          ${Math.round(result.totales.desembolsoNeto).toLocaleString('es-AR')}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Costos iniciales:</span>\n                        <span className=\"font-semibold text-gray-900\">\n                          ${Math.round(result.totales.costosIniciales).toLocaleString('es-AR')}\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Bot├│n de solicitud */}\n                    <button\n                      onClick={() => {\n                        if (onCalculationComplete) {\n                          const calculationData = {\n                            vehiclePrice: inputs.monto,\n                            vehicleYear: vehicleYear,\n                            downPayment: 0,\n                            loanTerm: term,\n                            interestRate: inputs.tasa.valor,\n                            loanAmount: result.totales.desembolsoNeto,\n                            monthlyPayment: result.rows[0]?.cuotaTotal || 0,\n                            totalAmount: result.totales.sumaCuotas,\n                            cft: result.totales.cftEfectivoAnual\n                          };\n                          onCalculationComplete(calculationData);\n                        }\n                      }}\n                      className=\"w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold py-3 px-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 flex items-center justify-center gap-2\"\n                    >\n                      <DollarSign className=\"w-4 h-4\" />\n                      Solicitar en {term} meses\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'RELACIONES_LABORALES' is assigned a value but never used.","line":65,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CUOTAS_DISPONIBLES' is assigned a value but never used.","line":69,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":69,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { User, Heart, FileText } from 'lucide-react';\nimport { type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanApplicationData {\n  // Datos Personales\n  apellidos: string;\n  nombre: string;\n  cuitCuil: string;\n  fechaNacimiento: string;\n  provincia: string;\n  localidad: string;\n  domicilio: string;\n  codigoPostal: string;\n  email: string;\n  telefono: string;\n  estadoCivil: string;\n  \n  // Datos del C├│nyuge (condicional)\n  tieneConyuge: boolean;\n  conyugeNombre?: string;\n  conyugeApellido?: string;\n  conyugeCuitCuil?: string;\n  conyugeIngresos?: number;\n  \n  // Datos Laborales\n  relacionLaboral: string;\n  relacionLaboralOtro?: string;\n  empresa: string;\n  antiguedad: string;\n  telefonoEmpresa: string;\n  ingresosMensuales: number;\n  \n  // Datos del Veh├¡culo\n  marca: string;\n  modelo: string;\n  version: string;\n  esNuevo: boolean;\n  anoVehiculo?: number;\n  valorTotal: number;\n  saldoFinanciar: number;\n  cantidadCuotas: number;\n}\n\ninterface LoanApplicationFormProps {\n  calculationResult?: Result | null;\n  onSubmit?: (data: LoanApplicationData) => void;\n}\n\nconst PROVINCIAS = [\n  'Buenos Aires', 'Catamarca', 'Chaco', 'Chubut', 'C├│rdoba', 'Corrientes',\n  'Entre R├¡os', 'Formosa', 'Jujuy', 'La Pampa', 'La Rioja', 'Mendoza',\n  'Misiones', 'Neuqu├®n', 'R├¡o Negro', 'Salta', 'San Juan', 'San Luis',\n  'Santa Cruz', 'Santa Fe', 'Santiago del Estero', 'Tierra del Fuego',\n  'Tucum├ín', 'Ciudad Aut├│noma de Buenos Aires'\n];\n\nconst ESTADOS_CIVILES = [\n  'Soltero/a', 'Casado/a', 'Divorciado/a', 'Viudo/a', 'Uni├│n Convivencial'\n];\n\nconst RELACIONES_LABORALES = [\n  'Relaci├│n de dependencia', 'Monotributo', 'Jubilado', 'Aut├│nomo', 'Otro'\n];\n\nconst CUOTAS_DISPONIBLES = [6, 12, 24, 36, 48];\n\nexport default function LoanApplicationForm({ calculationResult, onSubmit }: LoanApplicationFormProps) {\n  const [files] = useState<File[]>([]);\n  const { register, handleSubmit, watch, formState: { errors, isSubmitting }, setValue } = useForm<LoanApplicationData>({\n    defaultValues: {\n      tieneConyuge: false,\n      esNuevo: true,\n      relacionLaboral: 'Relaci├│n de dependencia',\n      cantidadCuotas: 36,\n    }\n  });\n\n  const watchTieneConyuge = watch('tieneConyuge');\n\n  // Sincronizar datos de la calculadora\n  if (calculationResult) {\n    setValue('valorTotal', calculationResult.totales.desembolsoBruto);\n    setValue('saldoFinanciar', calculationResult.totales.desembolsoBruto);\n  }\n\n  const onFormSubmit = (data: LoanApplicationData) => {\n    const formData = {\n      ...data,\n      documentos: files,\n    };\n    onSubmit?.(data);\n    console.log('Datos del formulario:', formData);\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con gradiente */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-8 py-8 text-center relative overflow-hidden\">\n        <div className=\"absolute top-0 right-0 w-32 h-32 bg-white/5 rounded-full -translate-y-16 translate-x-16\"></div>\n        <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-brand-accent-500/20 rounded-full translate-y-12 -translate-x-12\"></div>\n        \n        <div className=\"relative\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center\">\n              <FileText className=\"w-6 h-6 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-white\">Solicitud de Pr├®stamo</h2>\n          </div>\n          <p className=\"text-brand-primary-100 text-lg\">Complete todos los datos para procesar su solicitud</p>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit(onFormSubmit)} className=\"p-8 space-y-8\">\n        {/* Datos Personales */}\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n            <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center shadow-sm\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900\">Datos Personales</h3>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Apellidos *\n              </label>\n              <input\n                {...register('apellidos', { required: 'Los apellidos son requeridos' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese sus apellidos\"\n              />\n              {errors.apellidos && <p className=\"text-red-500 text-sm mt-1\">{errors.apellidos.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre *\n              </label>\n              <input\n                {...register('nombre', { required: 'El nombre es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese su nombre\"\n              />\n              {errors.nombre && <p className=\"text-red-500 text-sm mt-1\">{errors.nombre.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                CUIT/CUIL *\n              </label>\n              <input\n                {...register('cuitCuil', { \n                  required: 'El CUIT/CUIL es requerido',\n                  pattern: {\n                    value: /^\\d{2}-\\d{8}-\\d{1}$/,\n                    message: 'Formato: 20-12345678-9'\n                  }\n                })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"20-12345678-9\"\n              />\n              {errors.cuitCuil && <p className=\"text-red-500 text-sm mt-1\">{errors.cuitCuil.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de Nacimiento *\n              </label>\n              <input\n                type=\"date\"\n                {...register('fechaNacimiento', { required: 'La fecha de nacimiento es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              />\n              {errors.fechaNacimiento && <p className=\"text-red-500 text-sm mt-1\">{errors.fechaNacimiento.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Provincia *\n              </label>\n              <select\n                {...register('provincia', { required: 'La provincia es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"\">Seleccione una provincia</option>\n                {PROVINCIAS.map(provincia => (\n                  <option key={provincia} value={provincia}>{provincia}</option>\n                ))}\n              </select>\n              {errors.provincia && <p className=\"text-red-500 text-sm mt-1\">{errors.provincia.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Localidad *\n              </label>\n              <input\n                {...register('localidad', { required: 'La localidad es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese su localidad\"\n              />\n              {errors.localidad && <p className=\"text-red-500 text-sm mt-1\">{errors.localidad.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Domicilio *\n              </label>\n              <input\n                {...register('domicilio', { required: 'El domicilio es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Calle y n├║mero\"\n              />\n              {errors.domicilio && <p className=\"text-red-500 text-sm mt-1\">{errors.domicilio.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                C├│digo Postal *\n              </label>\n              <input\n                {...register('codigoPostal', { required: 'El c├│digo postal es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"1234\"\n              />\n              {errors.codigoPostal && <p className=\"text-red-500 text-sm mt-1\">{errors.codigoPostal.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email *\n              </label>\n              <input\n                type=\"email\"\n                {...register('email', { \n                  required: 'El email es requerido',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Email inv├ílido'\n                  }\n                })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"email@ejemplo.com\"\n              />\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tel├®fono *\n              </label>\n              <input\n                type=\"tel\"\n                {...register('telefono', { required: 'El tel├®fono es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"+54 11 1234-5678\"\n              />\n              {errors.telefono && <p className=\"text-red-500 text-sm mt-1\">{errors.telefono.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Estado Civil *\n              </label>\n              <select\n                {...register('estadoCivil', { required: 'El estado civil es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"\">Seleccione estado civil</option>\n                {ESTADOS_CIVILES.map(estado => (\n                  <option key={estado} value={estado}>{estado}</option>\n                ))}\n              </select>\n              {errors.estadoCivil && <p className=\"text-red-500 text-sm mt-1\">{errors.estadoCivil.message}</p>}\n            </div>\n\n            <div className=\"sm:col-span-2\">\n              <div className=\"flex items-start gap-3\">\n                <input\n                  type=\"checkbox\"\n                  {...register('tieneConyuge')}\n                  className=\"mt-1 w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-600\"\n                />\n                <label className=\"text-sm text-gray-700 leading-relaxed\">\n                  ┬┐Tiene c├│nyuge?\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Datos del C├│nyuge (condicional) */}\n          {watchTieneConyuge && (\n            <div className=\"bg-blue-50 rounded-xl p-6 space-y-4\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n                  <Heart className=\"w-3 h-3 text-white\" />\n                </div>\n                <h4 className=\"text-lg font-semibold text-blue-900\">Datos del C├│nyuge</h4>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nombre y Apellido *\n                  </label>\n                  <input\n                    {...register('conyugeNombre', { \n                      required: watchTieneConyuge ? 'El nombre del c├│nyuge es requerido' : false \n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"Nombre completo del c├│nyuge\"\n                  />\n                  {errors.conyugeNombre && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeNombre.message}</p>}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    CUIT/CUIL *\n                  </label>\n                  <input\n                    {...register('conyugeCuitCuil', { \n                      required: watchTieneConyuge ? 'El CUIT/CUIL del c├│nyuge es requerido' : false,\n                      pattern: {\n                        value: /^\\d{2}-\\d{8}-\\d{1}$/,\n                        message: 'Formato: 20-12345678-9'\n                      }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"20-12345678-9\"\n                  />\n                  {errors.conyugeCuitCuil && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeCuitCuil.message}</p>}\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Ingresos Mensuales *\n                  </label>\n                  <input\n                    type=\"number\"\n                    {...register('conyugeIngresos', { \n                      required: watchTieneConyuge ? 'Los ingresos del c├│nyuge son requeridos' : false,\n                      min: { value: 1, message: 'Los ingresos deben ser mayor a 0' }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"500000\"\n                    step=\"1000\"\n                  />\n                  {errors.conyugeIngresos && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeIngresos.message}</p>}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Contin├║a en la siguiente parte... */}\n        <div className=\"text-center py-4\">\n          <p className=\"text-gray-500 text-sm\">Formulario contin├║a con Datos Laborales, Veh├¡culo y Documentaci├│n...</p>\n        </div>\n\n        {/* Bot├│n de env├¡o temporal */}\n        <div className=\"flex justify-end\">\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 disabled:from-gray-300 disabled:to-gray-400 text-white font-semibold py-4 px-8 rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl disabled:shadow-none transform hover:scale-[1.02] disabled:scale-100 disabled:cursor-not-allowed flex items-center gap-3\"\n          >\n            {isSubmitting ? (\n              <>\n                <div className=\"w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                Procesando...\n              </>\n            ) : (\n              <>\n                <FileText className=\"w-5 h-5\" />\n                Enviar Solicitud\n              </>\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationFormComplete.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationSteps.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getValues' is assigned a value but never used.","line":90,"column":74,"nodeType":null,"messageId":"unusedVar","endLine":90,"endColumn":83}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { User, Briefcase, Car, Upload, Heart, FileText, CheckCircle, ArrowRight, ArrowLeft, Calculator } from 'lucide-react';\nimport FileUpload from '@/components/ui/FileUpload';\nimport { type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanApplicationStepsProps {\n  calculationResult?: Result | null;\n  calculationData?: any;\n  onSubmit: (data: any) => void;\n  isSubmitting?: boolean;\n}\n\ninterface FormData {\n  // Datos Personales\n  nombre: string;\n  apellido: string;\n  cuil: string;\n  fechaNacimiento: string;\n  provincia: string;\n  localidad: string;\n  domicilio: string;\n  codigoPostal: string;\n  email: string;\n  telefono: string;\n  estadoCivil: string;\n  \n  // Datos del C├│nyuge (condicional)\n  tieneConyugue: boolean;\n  cuilConyugue?: string;\n  nombreConyugue?: string;\n  apellidoConyugue?: string;\n  \n  // Datos Laborales\n  relacionLaboral: string;\n  otraRelacionLaboral?: string;\n  empresa: string;\n  telefonoEmpresa: string;\n  antiguedad: string;\n  \n  // Datos del Veh├¡culo\n  condicionVehiculo: string;\n  marca: string;\n  modelo: string;\n  anio: string;\n  version: string;\n  \n  // Documentaci├│n\n  documentos: File[];\n}\n\nconst steps = [\n  {\n    id: 'personal',\n    title: 'Datos Personales',\n    icon: User,\n    description: 'Informaci├│n b├ísica del solicitante'\n  },\n  {\n    id: 'spouse',\n    title: 'Datos del C├│nyuge',\n    icon: Heart,\n    description: 'Informaci├│n del c├│nyuge (si aplica)'\n  },\n  {\n    id: 'work',\n    title: 'Datos Laborales',\n    icon: Briefcase,\n    description: 'Informaci├│n laboral y de ingresos'\n  },\n  {\n    id: 'vehicle',\n    title: 'Datos del Veh├¡culo',\n    icon: Car,\n    description: 'Informaci├│n del veh├¡culo a financiar'\n  },\n  {\n    id: 'documents',\n    title: 'Documentaci├│n',\n    icon: Upload,\n    description: 'Adjuntar documentos requeridos'\n  }\n];\n\nexport default function LoanApplicationSteps({ calculationResult, calculationData, onSubmit, isSubmitting = false }: LoanApplicationStepsProps) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const { register, handleSubmit, watch, formState: { errors }, trigger, getValues } = useForm<FormData>();\n  \n  const tieneConyugue = watch('tieneConyugue');\n  const relacionLaboral = watch('relacionLaboral');\n  const condicionVehiculo = watch('condicionVehiculo');\n\n  const nextStep = async () => {\n    const stepFields = getStepFields(currentStep);\n    const isValid = await trigger(stepFields);\n    \n    if (isValid) {\n      if (currentStep === 1 && !tieneConyugue) {\n        setCurrentStep(2); // Saltar paso del c├│nyuge si no tiene\n      } else {\n        setCurrentStep(Math.min(currentStep + 1, steps.length - 1));\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep === 2 && !tieneConyugue) {\n      setCurrentStep(0); // Volver a datos personales si no tiene c├│nyuge\n    } else {\n      setCurrentStep(Math.max(currentStep - 1, 0));\n    }\n  };\n\n  const getStepFields = (step: number): (keyof FormData)[] => {\n    switch (step) {\n      case 0: return ['nombre', 'apellido', 'cuil', 'fechaNacimiento', 'provincia', 'localidad', 'domicilio', 'codigoPostal', 'email', 'telefono', 'estadoCivil'];\n      case 1: return tieneConyugue ? ['cuilConyugue', 'nombreConyugue', 'apellidoConyugue'] : [];\n      case 2: return ['relacionLaboral', 'empresa', 'telefonoEmpresa', 'antiguedad'];\n      case 3: return ['condicionVehiculo', 'marca', 'modelo', 'anio', 'version'];\n      case 4: return [];\n      default: return [];\n    }\n  };\n\n  const handleFinalSubmit = handleSubmit((formData) => {\n    // Guard adicional: si no hay c├ílculo, simplemente cerrar el modal y no enviar\n    if (!calculationResult) {\n      setShowConfirmation(false);\n      return;\n    }\n    // Llama a onSubmit (que es handleLoanSubmit en el hook) con los datos del formulario.\n    // El hook se encargar├í de mapear y a├▒adir los datos de c├ílculo.\n    onSubmit(formData);\n    setShowConfirmation(false);\n  });\n\n  const handleSubmitClick = () => {\n    setShowConfirmation(true);\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con Steps */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 p-6\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"w-8 h-8 bg-brand-accent-500 rounded-full flex items-center justify-center shadow-sm\">\n            <FileText className=\"w-4 h-4 text-gray-900 font-bold\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-white\">Solicitud de Pr├®stamo</h2>\n        </div>\n        \n        {/* Progress Steps */}\n        <div className=\"flex items-center justify-between relative\">\n          {steps.map((step, index) => {\n            const isActive = index === currentStep;\n            const isCompleted = index < currentStep;\n            const isSkipped = index === 1 && !tieneConyugue && currentStep > 1;\n            \n            return (\n              <div key={step.id} className=\"flex flex-col items-center relative z-10\">\n                <div className={`w-12 h-12 rounded-full flex items-center justify-center transition-all ${\n                  isCompleted \n                    ? 'bg-brand-accent-500 text-gray-900' \n                    : isActive \n                      ? 'bg-white text-brand-primary-600 ring-4 ring-white/30' \n                      : isSkipped\n                        ? 'bg-gray-400 text-white'\n                        : 'bg-white/20 text-white/60'\n                }`}>\n                  {isCompleted ? (\n                    <CheckCircle className=\"w-6 h-6\" />\n                  ) : (\n                    <step.icon className=\"w-6 h-6\" />\n                  )}\n                </div>\n                <div className=\"mt-2 text-center\">\n                  <p className={`text-sm font-medium ${\n                    isActive ? 'text-white' : isCompleted ? 'text-brand-accent-500' : 'text-white/70'\n                  }`}>\n                    {step.title}\n                  </p>\n                  <p className=\"text-xs text-white/50 max-w-[80px] leading-tight\">\n                    {step.description}\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n          \n          {/* Progress Line */}\n          <div className=\"absolute top-6 left-6 right-6 h-0.5 bg-white/20\">\n            <div \n              className=\"h-full bg-brand-accent-500 transition-all duration-500\"\n              style={{ width: `${(currentStep / (steps.length - 1)) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Resumen de C├ílculo */}\n      {calculationData && (\n        <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border-b border-green-200 p-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <div className=\"w-6 h-6 bg-green-600 rounded-full flex items-center justify-center\">\n                <Calculator className=\"w-3 h-3 text-white\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-green-900\">Valores Calculados para tu Pr├®stamo</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3 mb-3\">\n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Monto del Veh├¡culo</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  ${calculationData.vehiclePrice?.toLocaleString('es-AR')}\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Cuota Mensual</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  ${calculationData.monthlyPayment?.toLocaleString('es-AR')}\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Plazo</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  {calculationData.loanTerm} meses\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">CFT Anual</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  {(calculationData.cft * 100)?.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-green-100 rounded-lg p-2 text-center border border-green-200\">\n              <p className=\"text-xs text-green-800\">\n                <strong>Ô£ô Estos valores ser├ín incluidos en tu solicitud.</strong> Completa los datos personales a continuaci├│n para enviar tu solicitud.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Form Content */}\n      <div className=\"p-8\">\n        {/* Step 0: Datos Personales */}\n        {currentStep === 0 && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Nombre *</label>\n                <input\n                  {...register('nombre', { required: 'Nombre es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Juan\"\n                />\n                {errors.nombre && <p className=\"text-red-500 text-sm mt-1\">{errors.nombre.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Apellido *</label>\n                <input\n                  {...register('apellido', { required: 'Apellido es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"P├®rez\"\n                />\n                {errors.apellido && <p className=\"text-red-500 text-sm mt-1\">{errors.apellido.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">CUIL *</label>\n                <input\n                  {...register('cuil', { required: 'CUIL es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"20-12345678-9\"\n                />\n                {errors.cuil && <p className=\"text-red-500 text-sm mt-1\">{errors.cuil.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Fecha de Nacimiento *</label>\n                <input\n                  type=\"date\"\n                  {...register('fechaNacimiento', { required: 'Fecha de nacimiento es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                />\n                {errors.fechaNacimiento && <p className=\"text-red-500 text-sm mt-1\">{errors.fechaNacimiento.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Provincia *</label>\n                <input\n                  {...register('provincia', { required: 'Provincia es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Buenos Aires\"\n                />\n                {errors.provincia && <p className=\"text-red-500 text-sm mt-1\">{errors.provincia.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Localidad *</label>\n                <input\n                  {...register('localidad', { required: 'Localidad es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"CABA\"\n                />\n                {errors.localidad && <p className=\"text-red-500 text-sm mt-1\">{errors.localidad.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Domicilio *</label>\n                <input\n                  {...register('domicilio', { required: 'Domicilio es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Av. Corrientes 1234\"\n                />\n                {errors.domicilio && <p className=\"text-red-500 text-sm mt-1\">{errors.domicilio.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">C├│digo Postal *</label>\n                <input\n                  {...register('codigoPostal', { required: 'C├│digo postal es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"1043\"\n                />\n                {errors.codigoPostal && <p className=\"text-red-500 text-sm mt-1\">{errors.codigoPostal.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email *</label>\n                <input\n                  type=\"email\"\n                  {...register('email', { required: 'Email es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"usuario@email.com\"\n                />\n                {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tel├®fono *</label>\n                <input\n                  {...register('telefono', { required: 'Tel├®fono es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"+54 11 1234-5678\"\n                />\n                {errors.telefono && <p className=\"text-red-500 text-sm mt-1\">{errors.telefono.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Estado Civil *</label>\n                <select\n                  {...register('estadoCivil', { required: 'Estado civil es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"soltero\">Soltero/a</option>\n                  <option value=\"casado\">Casado/a</option>\n                  <option value=\"divorciado\">Divorciado/a</option>\n                  <option value=\"viudo\">Viudo/a</option>\n                  <option value=\"union_convivencial\">Uni├│n Convivencial</option>\n                </select>\n                {errors.estadoCivil && <p className=\"text-red-500 text-sm mt-1\">{errors.estadoCivil.message}</p>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 1: Datos del C├│nyuge */}\n        {currentStep === 1 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-brand-accent-500/10 rounded-lg border border-brand-accent-500/20\">\n              <Heart className=\"w-5 h-5 text-brand-primary-600\" />\n              <div>\n                <p className=\"font-medium text-brand-primary-600\">┬┐Tiene c├│nyuge?</p>\n                <p className=\"text-sm text-gray-600\">Marque si est├í casado/a o en uni├│n convivencial</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <label className=\"flex items-center gap-2 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  {...register('tieneConyugue')}\n                  className=\"w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-600\"\n                />\n                <span className=\"text-sm font-medium text-gray-700\">S├¡, tengo c├│nyuge</span>\n              </label>\n            </div>\n\n            {tieneConyugue && (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 pt-6 border-t border-gray-200\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">CUIL del C├│nyuge *</label>\n                  <input\n                    {...register('cuilConyugue', { \n                      required: tieneConyugue ? 'CUIL del c├│nyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"27-12345678-9\"\n                  />\n                  {errors.cuilConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.cuilConyugue.message}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Nombre del C├│nyuge *</label>\n                  <input\n                    {...register('nombreConyugue', { \n                      required: tieneConyugue ? 'Nombre del c├│nyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"Mar├¡a\"\n                  />\n                  {errors.nombreConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.nombreConyugue.message}</p>}\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Apellido del C├│nyuge *</label>\n                  <input\n                    {...register('apellidoConyugue', { \n                      required: tieneConyugue ? 'Apellido del c├│nyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"Gonz├ílez\"\n                  />\n                  {errors.apellidoConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.apellidoConyugue.message}</p>}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 2: Datos Laborales */}\n        {currentStep === 2 && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Relaci├│n Laboral *</label>\n                <select\n                  {...register('relacionLaboral', { required: 'Relaci├│n laboral es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"empleado_relacion_dependencia\">Empleado en Relaci├│n de Dependencia</option>\n                  <option value=\"empleado_publico\">Empleado P├║blico</option>\n                  <option value=\"jubilado_pensionado\">Jubilado/Pensionado</option>\n                  <option value=\"trabajador_autonomo\">Trabajador Aut├│nomo</option>\n                  <option value=\"profesional_independiente\">Profesional Independiente</option>\n                  <option value=\"comerciante\">Comerciante</option>\n                  <option value=\"otro\">Otro</option>\n                </select>\n                {errors.relacionLaboral && <p className=\"text-red-500 text-sm mt-1\">{errors.relacionLaboral.message}</p>}\n              </div>\n\n              {relacionLaboral === 'otro' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Especificar Relaci├│n Laboral *</label>\n                  <input\n                    {...register('otraRelacionLaboral', { \n                      required: relacionLaboral === 'otro' ? 'Debe especificar la relaci├│n laboral' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"Especificar...\"\n                  />\n                  {errors.otraRelacionLaboral && <p className=\"text-red-500 text-sm mt-1\">{errors.otraRelacionLaboral.message}</p>}\n                </div>\n              )}\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Empresa *</label>\n                <input\n                  {...register('empresa', { required: 'Empresa es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Nombre de la empresa\"\n                />\n                {errors.empresa && <p className=\"text-red-500 text-sm mt-1\">{errors.empresa.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tel├®fono Empresa *</label>\n                <input\n                  {...register('telefonoEmpresa', { required: 'Tel├®fono de empresa es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"+54 11 1234-5678\"\n                />\n                {errors.telefonoEmpresa && <p className=\"text-red-500 text-sm mt-1\">{errors.telefonoEmpresa.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Antig├╝edad *</label>\n                <input\n                  {...register('antiguedad', { required: 'Antig├╝edad es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"2 a├▒os\"\n                />\n                {errors.antiguedad && <p className=\"text-red-500 text-sm mt-1\">{errors.antiguedad.message}</p>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Datos del Veh├¡culo */}\n        {currentStep === 3 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <Car className=\"w-5 h-5 text-brand-primary-600\" />\n              <div>\n                <p className=\"font-medium text-brand-primary-600\">Informaci├│n del Veh├¡culo</p>\n                <p className=\"text-sm text-gray-600\">Complete los datos del veh├¡culo que desea financiar</p>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Condici├│n del Veh├¡culo *</label>\n                <select\n                  {...register('condicionVehiculo', { required: 'Condici├│n del veh├¡culo es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"nuevo\">Nuevo (0 km)</option>\n                  <option value=\"usado\">Usado</option>\n                </select>\n                {errors.condicionVehiculo && <p className=\"text-red-500 text-sm mt-1\">{errors.condicionVehiculo.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Marca *</label>\n                <input\n                  {...register('marca', { required: 'Marca es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Toyota, Ford, Chevrolet...\"\n                />\n                {errors.marca && <p className=\"text-red-500 text-sm mt-1\">{errors.marca.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Modelo *</label>\n                <input\n                  {...register('modelo', { required: 'Modelo es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Corolla, Focus, Onix...\"\n                />\n                {errors.modelo && <p className=\"text-red-500 text-sm mt-1\">{errors.modelo.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">A├▒o *</label>\n                <input\n                  type=\"number\"\n                  min=\"2000\"\n                  max=\"2025\"\n                  {...register('anio', { required: 'A├▒o es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"2024\"\n                />\n                {errors.anio && <p className=\"text-red-500 text-sm mt-1\">{errors.anio.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Versi├│n *</label>\n                <input\n                  {...register('version', { required: 'Versi├│n es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"XEI 1.8 CVT, SE 1.6, LTZ 1.4 Turbo...\"\n                />\n                {errors.version && <p className=\"text-red-500 text-sm mt-1\">{errors.version.message}</p>}\n              </div>\n            </div>\n\n            {condicionVehiculo && (\n              <div className=\"p-4 bg-brand-accent-500/10 rounded-lg border border-brand-accent-500/20\">\n                <p className=\"text-sm text-gray-700\">\n                  <strong>Nota:</strong> {condicionVehiculo === 'nuevo' \n                    ? 'Para veh├¡culos 0km se requiere factura proforma del concesionario.'\n                    : 'Para veh├¡culos usados se requiere t├¡tulo de propiedad y verificaci├│n policial.'\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 4: Documentaci├│n */}\n        {currentStep === 4 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-green-50 rounded-lg border border-green-200\">\n              <Upload className=\"w-5 h-5 text-green-600\" />\n              <div>\n                <p className=\"font-medium text-green-800\">Documentaci├│n Requerida</p>\n                <p className=\"text-sm text-green-700\">Adjunte todos los documentos necesarios para procesar su solicitud</p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-gray-900\">Documentos Personales</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    DNI del titular (frente y dorso)\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    ├Ültimos 3 recibos de sueldo\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    Certificado de trabajo\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    Comprobante de ingresos\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-gray-900\">Documentos del Veh├¡culo</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    {condicionVehiculo === 'nuevo' ? 'Factura proforma' : 'T├¡tulo de propiedad'}\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    {condicionVehiculo === 'nuevo' ? 'Cotizaci├│n oficial' : 'Verificaci├│n policial'}\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    Fotos del veh├¡culo\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Adjuntar Documentos *\n              </label>\n              <FileUpload\n                onFilesChange={(files) => {\n                  // Actualizar el valor en react-hook-form\n                  register('documentos').onChange({\n                    target: { value: files, name: 'documentos' }\n                  });\n                }}\n                accept=\".pdf,.jpg,.jpeg,.png\"\n                multiple={true}\n                maxSize={10}\n                maxFiles={10}\n                error={errors.documentos?.message}\n              />\n            </div>\n\n            {calculationResult && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 border border-blue-200 rounded-lg p-6\">\n                <h4 className=\"font-semibold text-blue-900 mb-3\">Resumen de la Solicitud</h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Monto</p>\n                    <p className=\"text-blue-900 font-bold\">${calculationResult.totales.desembolsoBruto.toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Cuota</p>\n                    <p className=\"text-blue-900 font-bold\">${calculationResult.rows[0]?.cuotaTotal.toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Plazo</p>\n                    <p className=\"text-blue-900 font-bold\">{calculationResult.rows.length} meses</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">CFT</p>\n                    <p className=\"text-blue-900 font-bold\">{(calculationResult.totales.cftEfectivoAnual * 100).toFixed(2)}%</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between pt-8 border-t border-gray-200 mt-8\">\n          <button\n            type=\"button\"\n            onClick={prevStep}\n            disabled={currentStep === 0 || isSubmitting}\n            className=\"flex items-center gap-2 px-6 py-3 text-gray-600 hover:text-gray-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Anterior\n          </button>\n          \n          {currentStep < steps.length - 1 ? (\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              disabled={isSubmitting || (currentStep === 1 && !calculationResult)}\n              className=\"flex items-center gap-2 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 text-white px-6 py-3 rounded-lg font-medium transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Enviando...' : (currentStep === 1 && !calculationResult ? 'Complete el C├ílculo Primero' : 'Siguiente')}\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={handleSubmitClick}\n              disabled={!calculationResult || isSubmitting}\n              className=\"flex items-center gap-2 bg-gradient-to-r from-brand-accent-500 to-yellow-500 hover:from-yellow-500 hover:to-brand-accent-500 text-gray-900 px-6 py-3 rounded-lg font-bold transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <CheckCircle className=\"w-4 h-4\" />\n              {isSubmitting ? 'Enviando...' : (calculationResult ? 'Enviar Solicitud' : 'Complete el C├ílculo Primero')}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de Confirmaci├│n */}\n      {showConfirmation && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-2xl shadow-2xl max-w-md w-full p-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-brand-accent-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"w-8 h-8 text-gray-900\" />\n              </div>\n              \n              <h3 className=\"text-xl font-bold text-gray-900 mb-2\">\n                ┬┐Confirmar Env├¡o de Solicitud?\n              </h3>\n              \n              <p className=\"text-gray-600 mb-6\">\n                Una vez enviada, la solicitud ser├í procesada por nuestro equipo. \n                Aseg├║rate de haber cargado todos los documentos requeridos.\n              </p>\n\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmation(false)}\n                  className=\"flex-1 px-4 py-3 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg font-medium transition-colors\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleFinalSubmit}\n                  disabled={isSubmitting}\n                  className=\"flex-1 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 text-white px-4 py-3 rounded-lg font-bold transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isSubmitting ? 'Enviando...' : 'Confirmar Env├¡o'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\LoanApplicationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\MainTabContent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\OverviewTabContent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\PortalHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\PortalTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\StatusBadge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\TeamTabContent.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calendar' is defined but never used.","line":2,"column":42,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":50}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo, useState } from 'react';\nimport { Plus, Users, User, Mail, Phone, Calendar, PlayCircle, PauseCircle, Trash2 } from 'lucide-react';\nimport StatusBadge from './StatusBadge';\nimport ConfirmActionModal from '@/components/ui/ConfirmActionModal';\nimport { type User as UserType } from '@/hooks/portal/usePortalDashboard';\n\ntype NewUserForm = { email: string; firstName: string; lastName: string; phone: string };\n\ninterface TeamTabContentProps {\n  users: UserType[];\n  loading: boolean;\n  showCreateUser: boolean;\n  setShowCreateUser: (show: boolean) => void;\n  newUser: NewUserForm;\n  setNewUser: (user: NewUserForm) => void;\n  handleCreateUser: (e: React.FormEvent) => void;\n  onActivate: (user: UserType) => void;\n  onSuspend: (user: UserType) => void;\n  onDelete: (user: UserType) => void;\n}\n\nconst TeamTabContent: React.FC<TeamTabContentProps> = ({ \n  users, \n  loading, \n  showCreateUser, \n  setShowCreateUser, \n  newUser, \n  setNewUser, \n  handleCreateUser,\n  onActivate,\n  onSuspend,\n  onDelete,\n}) => {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [confirmTitle, setConfirmTitle] = useState('');\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [confirmType, setConfirmType] = useState<'warning' | 'danger' | 'info'>('warning');\n  const [confirmAction, setConfirmAction] = useState<() => void>(() => () => {});\n\n  const openConfirm = (opts: { title: string; message: string; type?: 'warning'|'danger'|'info'; onConfirm: () => void }) => {\n    setConfirmTitle(opts.title);\n    setConfirmMessage(opts.message);\n    setConfirmType(opts.type || 'warning');\n    setConfirmAction(() => opts.onConfirm);\n    setConfirmOpen(true);\n  };\n\n  const closeConfirm = () => setConfirmOpen(false);\n\n  const columns = useMemo(() => [\n    { key: 'name', label: 'Nombre' },\n    { key: 'contact', label: 'Contacto' },\n    { key: 'created', label: 'Creado' },\n    { key: 'status', label: 'Estado' },\n    { key: 'lastLogin', label: '├Ültimo Acceso' },\n    { key: 'actions', label: 'Acciones', align: 'right' as const },\n  ], []);\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Gesti├│n de Equipo</h2>\n        <button\n          onClick={() => setShowCreateUser(true)}\n          className=\"flex items-center gap-2 bg-brand-primary-600 hover:bg-brand-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n        >\n          <Plus className=\"w-5 h-5\" />\n          Nuevo Ejecutivo\n        </button>\n      </div>\n\n      {showCreateUser && (\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Crear Ejecutivo de Cuentas</h3>\n          <form onSubmit={handleCreateUser} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre</label>\n              <input\n                type=\"text\"\n                value={newUser.firstName}\n                onChange={(e) => setNewUser({...newUser, firstName: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"Nombre\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Apellido</label>\n              <input\n                type=\"text\"\n                value={newUser.lastName}\n                onChange={(e) => setNewUser({...newUser, lastName: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"Apellido\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n              <input\n                type=\"email\"\n                value={newUser.email}\n                onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"email@ejemplo.com\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Tel├®fono (opcional)</label>\n              <input\n                type=\"tel\"\n                value={newUser.phone}\n                onChange={(e) => setNewUser({...newUser, phone: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"+54 9 11 1234 5678\"\n              />\n            </div>\n            <div className=\"md:col-span-2 flex gap-3\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"bg-brand-primary-600 hover:bg-brand-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors disabled:opacity-50\"\n              >\n                {loading ? 'Creando...' : 'Crear Ejecutivo'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setShowCreateUser(false)}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"text-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary-600 mx-auto\"></div>\n          <p className=\"mt-2 text-gray-500\">Cargando equipo...</p>\n        </div>\n      ) : users.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-gray-500\">No hay ejecutivos de cuentas creados</p>\n          <p className=\"text-sm text-gray-400\">Crea tu primer ejecutivo para comenzar</p>\n        </div>\n      ) : (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-[900px] w-full border-collapse bg-white rounded-xl overflow-hidden\">\n            <thead>\n              <tr className=\"bg-gray-50 text-left text-xs font-semibold text-gray-600\">\n                {columns.map((c) => (\n                  <th key={c.key} className={`px-4 py-3 border-b ${c.align === 'right' ? 'text-right' : ''}`}>{c.label}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"text-sm text-gray-900\">\n              {users.map((u) => (\n                <tr key={u.publicId} className=\"hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gradient-to-br from-brand-primary-100 to-brand-primary-200 shadow-sm\">\n                        <User className=\"w-4 h-4 text-brand-primary-600\" />\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">{u.firstName} {u.lastName}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"text-sm text-gray-700 flex items-center gap-3 flex-wrap\">\n                      <span className=\"flex items-center gap-1\"><Mail className=\"w-4 h-4 text-gray-400\" />{u.email}</span>\n                      {u.phone && <span className=\"flex items-center gap-1\"><Phone className=\"w-4 h-4 text-gray-400\" />{u.phone}</span>}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"font-medium\">{new Date(u.createdAt).toLocaleDateString('es-AR')}</div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <StatusBadge status={u.status} type=\"user\" />\n                  </td>\n                  <td className=\"px-4 py-3 align-middle text-xs text-gray-500\">\n                    {u.lastLoginAt ? new Date(u.lastLoginAt).toLocaleDateString('es-AR') : 'ÔÇö'}\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"flex items-center justify-end gap-1\">\n                      {u.status !== 'ACTIVE' ? (\n                        <button\n                          disabled={loading}\n                          onClick={() =>\n                            openConfirm({\n                              title: 'Activar usuario',\n                              message: `┬┐Desea activar a ${u.firstName} ${u.lastName} (${u.email})?`,\n                              type: 'info',\n                              onConfirm: () => { onActivate(u); closeConfirm(); },\n                            })\n                          }\n                          className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-emerald-600 hover:bg-emerald-700 disabled:opacity-50\"\n                          title=\"Activar\"\n                        >\n                          <PlayCircle className=\"w-4 h-4\" /> Activar\n                        </button>\n                      ) : (\n                        <button\n                          disabled={loading}\n                          onClick={() =>\n                            openConfirm({\n                              title: 'Suspender usuario',\n                              message: `┬┐Suspender a ${u.firstName} ${u.lastName}? Se cerrar├ín sus sesiones activas.`,\n                              type: 'warning',\n                              onConfirm: () => { onSuspend(u); closeConfirm(); },\n                            })\n                          }\n                          className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-amber-600 hover:bg-amber-700 disabled:opacity-50\"\n                          title=\"Suspender\"\n                        >\n                          <PauseCircle className=\"w-4 h-4\" /> Suspender\n                        </button>\n                      )}\n\n                      <button\n                        disabled={loading}\n                        onClick={() =>\n                          openConfirm({\n                            title: 'Eliminar usuario',\n                            message: `┬┐Eliminar a ${u.firstName} ${u.lastName}? Esto es un borrado l├│gico y podr├í crearse nuevamente si es necesario.`,\n                            type: 'danger',\n                            onConfirm: () => { onDelete(u); closeConfirm(); },\n                          })\n                        }\n                        className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-red-600 hover:bg-red-700 disabled:opacity-50\"\n                        title=\"Eliminar\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" /> Eliminar\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      <ConfirmActionModal\n        isOpen={confirmOpen}\n        title={confirmTitle}\n        message={confirmMessage}\n        type={confirmType}\n        loading={loading}\n        onConfirm={confirmAction}\n        onCancel={closeConfirm}\n      />\n    </div>\n  );\n};\n\nexport default TeamTabContent;\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\ConfirmActionModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\ConfirmationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\DealerDetailsModal.disabled.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\FileUpload.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has unnecessary dependencies: 'accept' and 'maxSize'. Either exclude them or remove the dependency array.","line":95,"column":6,"nodeType":"ArrayExpression","endLine":95,"endColumn":69,"suggestions":[{"desc":"Update the dependencies array to be: [files, maxFiles, onFilesChange, validateFile]","fix":{"range":[2678,2741],"text":"[files, maxFiles, onFilesChange, validateFile]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useCallback, useRef } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File } from 'lucide-react';\nimport Image from 'next/image';\n\ninterface FileUploadProps {\n  onFilesChange: (files: File[]) => void;\n  accept?: string;\n  multiple?: boolean;\n  maxSize?: number; // en MB\n  maxFiles?: number;\n  className?: string;\n  error?: string;\n}\n\ninterface FileWithPreview extends File {\n  id: string;\n  preview?: string;\n}\n\nexport default function FileUpload({\n  onFilesChange,\n  accept = \".pdf,.jpg,.jpeg,.png\",\n  multiple = true,\n  maxSize = 10,\n  maxFiles = 10,\n  className = \"\",\n  error\n}: FileUploadProps) {\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [uploadError, setUploadError] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const validateFile = useCallback((file: File): string | null => {\n    // Validar tama├▒o\n    if (file.size > maxSize * 1024 * 1024) {\n      return `El archivo \"${file.name}\" excede el tama├▒o m├íximo de ${maxSize}MB`;\n    }\n\n    // Validar tipo\n    const acceptedTypes = accept.split(',').map(type => type.trim());\n    const fileExtension = '.' + file.name.split('.').pop()?.toLowerCase();\n    const isValidType = acceptedTypes.some(type => \n      type === fileExtension || \n      file.type.startsWith(type.replace('*', ''))\n    );\n\n    if (!isValidType) {\n      return `El archivo \"${file.name}\" no es un tipo v├ílido. Tipos permitidos: ${accept}`;\n    }\n\n    return null;\n  }, [maxSize, accept]);\n\n  const processFiles = useCallback((newFiles: FileList | File[]) => {\n    const fileArray = Array.from(newFiles);\n    const validFiles: FileWithPreview[] = [];\n    const errors: string[] = [];\n\n    // Validar l├¡mite de archivos\n    if (files.length + fileArray.length > maxFiles) {\n      setUploadError(`No puede subir m├ís de ${maxFiles} archivos`);\n      return;\n    }\n\n    fileArray.forEach(file => {\n      const error = validateFile(file);\n      if (error) {\n        errors.push(error);\n      } else {\n        const fileWithPreview: FileWithPreview = Object.assign(file, {\n          id: Math.random().toString(36).substr(2, 9)\n        });\n\n        // Crear preview para im├ígenes\n        if (file.type.startsWith('image/')) {\n          fileWithPreview.preview = URL.createObjectURL(file);\n        }\n\n        validFiles.push(fileWithPreview);\n      }\n    });\n\n    if (errors.length > 0) {\n      setUploadError(errors.join('. '));\n      return;\n    }\n\n    setUploadError('');\n    const updatedFiles = [...files, ...validFiles];\n    setFiles(updatedFiles);\n    onFilesChange(updatedFiles);\n  }, [files, maxFiles, maxSize, accept, onFilesChange, validateFile]);\n\n  const removeFile = (fileId: string) => {\n    const updatedFiles = files.filter(file => {\n      if (file.id === fileId && file.preview) {\n        URL.revokeObjectURL(file.preview);\n      }\n      return file.id !== fileId;\n    });\n    setFiles(updatedFiles);\n    onFilesChange(updatedFiles);\n  };\n\n  const handleDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n\n    const droppedFiles = e.dataTransfer.files;\n    if (droppedFiles.length > 0) {\n      processFiles(droppedFiles);\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles && selectedFiles.length > 0) {\n      processFiles(selectedFiles);\n    }\n    // Limpiar el input para permitir seleccionar el mismo archivo nuevamente\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const getFileIcon = (file: File) => {\n    if (file.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-4 h-4\" />;\n    }\n    if (file.type === 'application/pdf') {\n      return <FileText className=\"w-4 h-4\" />;\n    }\n    return <File className=\"w-4 h-4\" />;\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Zona de Drop */}\n      <div\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        onClick={handleClick}\n        className={`\n          border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-all\n          ${isDragOver \n            ? 'border-brand-primary-600 bg-brand-primary-50' \n            : 'border-gray-300 hover:border-brand-primary-600'\n          }\n          ${error || uploadError ? 'border-red-300 bg-red-50' : ''}\n        `}\n      >\n        <Upload className={`w-12 h-12 mx-auto mb-4 ${\n          isDragOver ? 'text-brand-primary-600' : 'text-gray-400'\n        }`} />\n        \n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          multiple={multiple}\n          accept={accept}\n          onChange={handleFileSelect}\n          className=\"hidden\"\n        />\n        \n        <div className=\"space-y-2\">\n          <p className=\"text-brand-primary-600 font-medium hover:text-brand-primary-700\">\n            Haga clic para seleccionar archivos\n          </p>\n          <p className=\"text-gray-500\">o arrastre y suelte aqu├¡</p>\n          <p className=\"text-xs text-gray-500\">\n            Formatos permitidos: {accept} (m├íximo {maxSize}MB por archivo)\n          </p>\n          {maxFiles > 1 && (\n            <p className=\"text-xs text-gray-500\">\n              M├íximo {maxFiles} archivos\n            </p>\n          )}\n        </div>\n      </div>\n\n      {/* Mensajes de Error */}\n      {(error || uploadError) && (\n        <div className=\"text-red-500 text-sm\">\n          {error || uploadError}\n        </div>\n      )}\n\n      {/* Lista de Archivos Subidos */}\n      {files.length > 0 && (\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">\n            Archivos seleccionados ({files.length})\n          </h4>\n          <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {files.map((file) => (\n              <div\n                key={file.id}\n                className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg border\"\n              >\n                <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                  {/* Preview o Icono */}\n                  <div className=\"flex-shrink-0\">\n                    {file.preview ? (\n                      <Image\n                        src={file.preview as string}\n                        alt={file.name}\n                        width={40}\n                        height={40}\n                        unoptimized\n                        className=\"w-10 h-10 object-cover rounded\"\n                      />\n                    ) : (\n                      <div className=\"w-10 h-10 bg-gray-200 rounded flex items-center justify-center\">\n                        {getFileIcon(file)}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Info del Archivo */}\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900 truncate\">\n                      {file.name}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {formatFileSize(file.size)}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Bot├│n Eliminar */}\n                <button\n                  type=\"button\"\n                  onClick={() => removeFile(file.id)}\n                  className=\"flex-shrink-0 p-1 text-gray-400 hover:text-red-500 transition-colors\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\hooks\\portal\\usePortalDashboard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\hooks\\useAuth.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":67,"column":16,"nodeType":null,"messageId":"unusedVar","endLine":67,"endColumn":21}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\n\ninterface User {\n  id: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  role: 'ADMIN' | 'DEALER' | 'EJECUTIVO_CUENTAS';\n  status: string;\n  dealerId?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n}\n\n// Respuesta esperada del endpoint /api/auth/me\ninterface ApiMeResponse {\n  success: boolean;\n  user?: User;\n}\n\nexport function useAuth() {\n  const [authState, setAuthState] = useState<AuthState>({\n    user: null,\n    loading: true,\n    error: null,\n  });\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const response = await fetch('/api/auth/me', {\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          const userData: ApiMeResponse = await response.json();\n          console.log('­ƒöì useAuth - Datos recibidos del API:', userData);\n          console.log('­ƒöì useAuth - Usuario:', userData.user);\n          console.log('­ƒöì useAuth - Rol del usuario:', userData.user?.role);\n\n          if (userData.success && userData.user) {\n            setAuthState({\n              user: userData.user,\n              loading: false,\n              error: null,\n            });\n          } else {\n            setAuthState({\n              user: null,\n              loading: false,\n              error: 'Datos de usuario inv├ílidos',\n            });\n          }\n        } else {\n          setAuthState({\n            user: null,\n            loading: false,\n            error: 'No autenticado',\n          });\n        }\n      } catch (error: unknown) {\n        setAuthState({\n          user: null,\n          loading: false,\n          error: 'Error de conexi├│n',\n        });\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  const hasRole = (role: string | string[]) => {\n    if (!authState.user) return false;\n    if (Array.isArray(role)) {\n      return role.includes(authState.user.role);\n    }\n    return authState.user.role === role;\n  };\n\n  const isDealer = () => hasRole('DEALER');\n  const isExecutive = () => hasRole('EJECUTIVO_CUENTAS');\n  const isAdmin = () => hasRole('ADMIN');\n  const canManageTeam = () => {\n    const result = hasRole('DEALER');\n    console.log('­ƒöì canManageTeam - Usuario:', authState.user?.role, 'Resultado:', result);\n    return result;\n  };\n  const canAccessFullDashboard = () => {\n    const result = hasRole('DEALER');\n    console.log('­ƒöì canAccessFullDashboard - Usuario:', authState.user?.role, 'Resultado:', result);\n    return result;\n  };\n\n  return {\n    ...authState,\n    hasRole,\n    isDealer,\n    isExecutive,\n    isAdmin,\n    canManageTeam,\n    canAccessFullDashboard,\n  };\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\auth-helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\authFetch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\calculator\\loan-calculator.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'gastosFijosIniciales' is assigned a value but never used.","line":82,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":82,"endColumn":25},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'sellosPct' is assigned a value but never used.","line":83,"column":5,"nodeType":null,"messageId":"unusedVar","endLine":83,"endColumn":14}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// loan-calculator.ts\nexport type RateInput =\n  | { tipo: 'TNA'; valor: number; capitalizaciones?: number }\n  | { tipo: 'TEA'; valor: number }\n  | { tipo: 'MENSUAL'; valor: number }; // efectiva mensual (sin IVA)\n\nexport type Inputs = {\n  monto: number;                  // Capital P\n  plazoMeses: number;             // n\n  tasa: RateInput;                // TNA/TEA/MENSUAL en decimales (sin IVA)\n  ivaInteres: number;             // 0 | 0.105 | 0.21\n  gastosOtorgamientoPct?: number; // % sobre monto P (se usa NETO de IVA para desembolso)\n  gastosFijosIniciales?: number;  // (No considerados para CFT empresarial)\n  sellosPct?: number;             // (No considerados para CFT empresarial)\n  svsPctMensual?: number;         // % sobre saldo/mes (opcional, fuera de CFT empresarial)\n  seguroAutoMensual?: number;     // monto fijo/mes (opcional, fuera de CFT empresarial)\n};\n\nexport type Row = {\n  periodo: number;\n  cuotaBase: number;\n  interes: number;\n  amortizacion: number;\n  ivaInteres: number;\n  svs: number;\n  otros: number;\n  cuotaTotal: number;\n  saldo: number;\n};\n\nexport type Result = {\n  rows: Row[];\n  totales: {\n    desembolsoBruto: number;\n    costosIniciales: number;      // Gastos de otorgamiento NETOS de IVA\n    desembolsoNeto: number;       // P - costosIniciales\n    sumaCuotas: number;           // Suma de cuotas (incluye extras si se configuraran)\n    cftMensual: number;           // Con IVA\n    cftEfectivoAnual: number;     // Con IVA, anualizaci├│n 365/30\n  };\n};\n\n// Conversi├│n a tasa efectiva mensual SIN IVA seg├║n documentaci├│n empresarial\n// TNA -> TEM: (TNA/365)*30\n// TEA -> TEM: (1+TEA)^(30/365)-1\nfunction toMensualSinIVA(tasa: RateInput): number {\n  if (tasa.tipo === 'MENSUAL') return tasa.valor;\n  if (tasa.tipo === 'TEA') return Math.pow(1 + tasa.valor, 30 / 365) - 1;\n  // Ignoramos capitalizaciones: la empresa usa 365/30 para TNA\n  return (tasa.valor / 365) * 30;\n}\n\nfunction cuotaFrances(P: number, i: number, n: number): number {\n  return (P * i) / (1 - Math.pow(1 + i, -n));\n}\n\nfunction irr(cashflows: number[], guess = 0.02): number {\n  // Implementaci├│n simple de TIR por Newton-Raphson\n  let r = guess;\n  for (let k = 0; k < 100; k++) {\n    let npv = 0, d = 0;\n    for (let t = 0; t < cashflows.length; t++) {\n      const cf = cashflows[t];\n      npv += cf / Math.pow(1 + r, t);\n      if (t > 0) d += -t * cf / Math.pow(1 + r, t + 1);\n    }\n    const rNew = r - npv / (d || 1e-12);\n    if (Math.abs(rNew - r) < 1e-12) return rNew;\n    r = rNew;\n  }\n  return r;\n}\n\nexport function calcular(inputs: Inputs): Result {\n  const {\n    monto: P,\n    plazoMeses: n,\n    tasa,\n    ivaInteres,\n    gastosOtorgamientoPct = 0,\n    // Los siguientes no se consideran para CFT empresarial\n    gastosFijosIniciales = 0,\n    sellosPct = 0,\n    svsPctMensual = 0,\n    seguroAutoMensual = 0,\n  } = inputs;\n\n  const ivaFactor = 1 + ivaInteres;\n\n  // Tasa efectiva mensual SIN IVA seg├║n est├índar empresarial\n  const iSinIVA = toMensualSinIVA(tasa);\n  // Tasa mensual CON IVA para f├│rmula de cuota fija\n  const iConIVA = iSinIVA * ivaFactor;\n\n  // Cuota fija (con IVA incluido en la tasa), redondeada a entero\n  const cuotaConIVA = Math.round(cuotaFrances(P, iConIVA, n));\n\n  // Gastos de otorgamiento NETOS de IVA para desembolso\n  const gastosTot = P * (gastosOtorgamientoPct || 0);     // con IVA\n  const gastosNetos = gastosTot / ivaFactor;               // neto de IVA\n  const desembolsoNeto = P - gastosNetos;\n  const costosIniciales = gastosNetos;                     // mostrado como neto\n\n  // Cuadro de amortizaci├│n usando tasa CON IVA y cuota fija entera\n  let saldo = P;\n  const rows: Row[] = [];\n\n  // Flujos para CFT (no considerar extras mensuales)\n  const cashflows: number[] = [round(desembolsoNeto, 2)];\n\n  for (let t = 1; t <= n; t++) {\n    const interesConIVA = saldo * iConIVA;\n    const amortizacion = cuotaConIVA - interesConIVA;\n\n    // Separaci├│n de IVA sobre inter├®s\n    const interesNeto = interesConIVA / ivaFactor;\n    const ivaInteresMonto = interesConIVA - interesNeto;\n\n    // Extras (opcionales, fuera del CFT empresarial)\n    const svs = saldo * (svsPctMensual || 0);\n    const otros = seguroAutoMensual || 0;\n    const cuotaTotal = cuotaConIVA + svs + otros;\n\n    saldo -= amortizacion;\n\n    rows.push({\n      periodo: t,\n      cuotaBase: round(cuotaConIVA),\n      interes: round(interesNeto),\n      amortizacion: round(amortizacion),\n      ivaInteres: round(ivaInteresMonto),\n      svs: round(svs),\n      otros: round(otros),\n      cuotaTotal: round(cuotaTotal),\n      saldo: round(Math.max(0, saldo)),\n    });\n\n    cashflows.push(-cuotaConIVA);\n  }\n\n  // CFT mensual (con IVA) por IRR de flujos: [desembolso neto, -cuota fija, ...]\n  const cftMensualConIVA = irr(cashflows);\n  const cftMensualNeto = cftMensualConIVA / ivaFactor;\n\n  // Anualizaci├│n 365/30 seg├║n documentaci├│n\n  const cftEaNeto = Math.pow(1 + cftMensualNeto, 365 / 30) - 1;\n  const cftEaTot = cftEaNeto * ivaFactor;\n\n  return {\n    rows,\n    totales: {\n      desembolsoBruto: round(P),\n      costosIniciales: round(costosIniciales), // neto de IVA\n      desembolsoNeto: round(desembolsoNeto),\n      sumaCuotas: round(rows.reduce((a, r) => a + r.cuotaTotal, 0)),\n      cftMensual: round(cftMensualConIVA),\n      cftEfectivoAnual: round(cftEaTot),\n    },\n  };\n}\n\nfunction round(x: number, d = 2): number {\n  const m = Math.pow(10, d);\n  return Math.round((x + Number.EPSILON) * m) / m;\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\email.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\prisma.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
