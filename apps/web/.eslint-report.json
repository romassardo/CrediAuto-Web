[{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\eslint.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\middleware.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\next.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\postcss.config.mjs","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\dashboard\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\kpis\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\loans\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":6,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":6,"endColumn":12},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Filter' is defined but never used.","line":7,"column":88,"nodeType":null,"messageId":"unusedVar","endLine":7,"endColumn":94},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'loadingDetails' is assigned a value but never used.","line":96,"column":10,"nodeType":null,"messageId":"unusedVar","endLine":96,"endColumn":24},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'selectedLabel' is assigned a value but never used.","line":173,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":173,"endColumn":22}],"suppressedMessages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchApplications'. Either include it or remove the dependency array.","line":311,"column":6,"nodeType":"ArrayExpression","endLine":311,"endColumn":38,"suggestions":[{"desc":"Update the dependencies array to be: [statusFilter, page, searchTerm, fetchApplications]","fix":{"range":[10117,10149],"text":"[statusFilter, page, searchTerm, fetchApplications]"}}],"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\";\n\nimport { useEffect, useMemo, useState } from \"react\";\nimport ConfirmationModal from \"@/components/ui/ConfirmationModal\";\nimport AdminNavigation from \"@/components/admin/AdminNavigation\";\nimport Link from \"next/link\";\nimport { Check, X, Search, Calendar, Clock, Eye, FileText, User, Building, DollarSign, Filter, Car, Heart, Download, ExternalLink, Briefcase, MapPin } from \"lucide-react\";\n\n// Tipos alineados con /api/admin/loan-applications (GET)\ninterface AdminLoanApplication {\n  id: number;\n  publicId: string;\n  clientFirstName: string;\n  clientLastName: string;\n  clientDni: string;\n  clientEmail: string;\n  clientPhone: string;\n  vehiclePrice: number;\n  loanAmount: number;\n  monthlyPayment: number;\n  loanTerm: number;\n  cft: number;\n  status: string;\n  createdAt: string;\n  reviewedAt?: string;\n  // Campos adicionales del vehículo\n  vehicleBrand?: string;\n  vehicleModel?: string;\n  vehicleYear?: number;\n  vehicleVersion?: string;\n  vehicleCondition?: string;\n  // Campos adicionales del cónyuge\n  spouseFirstName?: string;\n  spouseLastName?: string;\n  spouseCuil?: string;\n  // Campos adicionales de dirección y empleo\n  applicantFirstName?: string;\n  applicantLastName?: string;\n  applicantCuil?: string;\n  applicantEmail?: string;\n  applicantPhone?: string;\n  applicantAddress?: string;\n  applicantCity?: string;\n  applicantProvince?: string;\n  applicantPostalCode?: string;\n  applicantMaritalStatus?: string;\n  applicantBirthDate?: string;\n  employmentType?: string;\n  employmentTypeOther?: string;\n  companyName?: string;\n  companyPhone?: string;\n  workExperience?: string;\n  dealer: {\n    companyName: string;\n  };\n  submittedByUser: {\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n  documentsMetadata?: any[];\n  // Datos de submisión con estructura anidada\n  submissionData?: {\n    vehicleData?: {\n      marca: string;\n      modelo: string;\n      anio: number;\n      version: string;\n      condicionVehiculo: string;\n    };\n    spouseData?: {\n      nombreConyuge: string;\n      apellidoConyuge: string;\n      cuilConyuge: string;\n    };\n    personalData?: any;\n    employmentData?: any;\n    calculationData?: any;\n    documents?: any[];\n  };\n}\n\ntype ModalType = \"success\" | \"error\" | \"warning\" | \"info\";\n\nexport default function AdminLoansPage() {\n  const [apps, setApps] = useState<AdminLoanApplication[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [processingId, setProcessingId] = useState<string | null>(null);\n  const [statusFilter, setStatusFilter] = useState<string>('ALL');\n  const [searchTerm, setSearchTerm] = useState<string>(\"\");\n  const [page, setPage] = useState<number>(1);\n  const [limit] = useState<number>(15);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [selectedApp, setSelectedApp] = useState<AdminLoanApplication | null>(null);\n  const [loadingDetails, setLoadingDetails] = useState<boolean>(false);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const [modalState, setModalState] = useState<{\n    isOpen: boolean;\n    title: string;\n    message: string;\n    type: ModalType;\n  }>({ isOpen: false, title: \"\", message: \"\", type: \"info\" });\n\n  const showModal = (title: string, message: unknown, type: ModalType = \"info\") => {\n    const safeMessage =\n      typeof message === \"string\"\n        ? message\n        : message instanceof Error\n        ? message.message\n        : (() => {\n            try {\n              return JSON.stringify(message);\n            } catch {\n              return \"Error desconocido\";\n            }\n          })();\n    setModalState({ isOpen: true, title, message: safeMessage, type });\n  };\n  const closeModal = () => setModalState((prev) => ({ ...prev, isOpen: false }));\n\n  // Función para obtener token de cookies\n  const getTokenFromCookies = (): string | null => {\n    if (typeof document === 'undefined') return null;\n    const cookies = document.cookie.split(';');\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=');\n      if (name === 'access_token') {\n        return decodeURIComponent(value);\n      }\n    }\n    return null;\n  };\n\n  const handleOpenDetailsModal = async (app: AdminLoanApplication) => {\n    setLoadingDetails(true);\n    setIsModalOpen(true);\n    \n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch(`/api/admin/loan-applications/${app.publicId}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Error ${response.status}: ${response.statusText}`);\n      }\n\n      const result = await response.json();\n      if (result.success && result.data) {\n        setSelectedApp(result.data);\n      } else {\n        throw new Error('No se pudieron obtener los detalles');\n      }\n    } catch (error) {\n      console.error('Error al obtener detalles:', error);\n      showModal('Error', 'No se pudieron cargar los detalles de la solicitud', 'error');\n      setSelectedApp(app); // Fallback a datos básicos\n    } finally {\n      setLoadingDetails(false);\n    }\n  };\n\n  const handleCloseDetailsModal = () => {\n    setIsModalOpen(false);\n    setSelectedApp(null);\n  };\n\n  const selectedLabel = useMemo(() => {\n    const map: Record<string, string> = {\n      PENDING: \"Pendientes\",\n      UNDER_REVIEW: \"En revisión\",\n      APPROVED: \"Aprobadas\",\n      REJECTED: \"Rechazadas\",\n      CANCELLED: \"Canceladas\",\n    };\n    return map[statusFilter] ?? statusFilter;\n  }, [statusFilter]);\n\n  const fetchApplications = async () => {\n    setLoading(true);\n    try {\n      const params = new URLSearchParams({\n        page: String(page),\n        limit: String(limit),\n      });\n      if (statusFilter) params.set(\"status\", statusFilter);\n      if (searchTerm.trim()) params.set(\"search\", searchTerm.trim());\n\n      const response = await fetch(`/api/admin/loan-applications?${params.toString()}` , {\n        credentials: \"include\",\n        headers: { Accept: \"application/json\" },\n      });\n\n      const contentType = response.headers.get(\"content-type\") || \"\";\n\n      if (!response.ok) {\n        let message = `Error ${response.status}`;\n        if (contentType.includes(\"application/json\")) {\n          try {\n            const err = await response.json();\n            message = err.error || err.message || message;\n          } catch {}\n        } else {\n          try {\n            const text = await response.text();\n            message = text?.slice(0, 300) || message;\n          } catch {}\n        }\n        showModal(\"❌ Error al cargar\", message, \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n        return;\n      }\n\n      if (!contentType.includes(\"application/json\")) {\n        const text = await response.text();\n        console.error(\"Non-JSON response for GET /api/admin/loan-applications:\", text.slice(0, 300));\n        showModal(\"❌ Respuesta inválida\", \"El servidor devolvió un contenido no-JSON.\", \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n        return;\n      }\n\n      const data = await response.json();\n      if (data?.success && data?.data?.applications) {\n        setApps(data.data.applications as AdminLoanApplication[]);\n        const p = data.data.pagination;\n        setTotalPages(p?.totalPages ?? 1);\n        setTotalCount(p?.totalCount ?? 0);\n      } else {\n        showModal(\"❌ Error\", data?.error || \"Respuesta inválida del servidor\", \"error\");\n        setApps([]);\n        setTotalPages(1);\n        setTotalCount(0);\n      }\n    } catch (error) {\n      console.error(\"Error fetching applications:\", error);\n      showModal(\"❌ Error de Conexión\", \"No se pudo conectar con el servidor. Intenta nuevamente.\", \"error\");\n      setApps([]);\n      setTotalPages(1);\n      setTotalCount(0);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const updateStatus = async (applicationPublicId: string, nextStatus: \"PENDING\" | \"UNDER_REVIEW\" | \"APPROVED\" | \"REJECTED\") => {\n    setProcessingId(applicationPublicId);\n    try {\n      const response = await fetch(\"/api/admin/loan-applications\", {\n        method: \"PATCH\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n        body: JSON.stringify({ applicationId: applicationPublicId, status: nextStatus }),\n      });\n\n      const contentType = response.headers.get(\"content-type\") || \"\";\n\n      if (!response.ok) {\n        let message = `Error ${response.status}`;\n        if (contentType.includes(\"application/json\")) {\n          try {\n            const err = await response.json();\n            message = err.error || err.message || message;\n          } catch {}\n        } else {\n          try {\n            const text = await response.text();\n            message = text?.slice(0, 300) || message;\n          } catch {}\n        }\n        showModal(\"❌ Error\", message, \"error\");\n        return;\n      }\n\n      if (!contentType.includes(\"application/json\")) {\n        const text = await response.text();\n        console.error(\"Non-JSON response for PATCH /api/admin/loan-applications:\", text.slice(0, 300));\n        showModal(\"❌ Respuesta inválida\", \"El servidor devolvió un contenido no-JSON.\", \"error\");\n        return;\n      }\n\n      const data = await response.json();\n      if (data?.success) {\n        await fetchApplications();\n        showModal(\"✅ Operación exitosa\", data.message || \"Solicitud actualizada correctamente.\", \"success\");\n      } else {\n        showModal(\"❌ Error\", data?.error || \"Error al actualizar solicitud\", \"error\");\n      }\n    } catch (error) {\n      console.error(\"Error updating application:\", error);\n      showModal(\"❌ Error de Conexión\", \"No se pudo conectar con el servidor. Intenta nuevamente.\", \"error\");\n    } finally {\n      setProcessingId(null);\n    }\n  };\n\n  useEffect(() => {\n    fetchApplications();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statusFilter, page, searchTerm]);\n  const getStatusBadge = (status: AdminLoanApplication[\"status\"]) => {\n    const styles: Record<string, string> = {\n      PENDING: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n      UNDER_REVIEW: \"bg-blue-100 text-blue-800 border-blue-200\",\n      APPROVED: \"bg-green-100 text-green-800 border-green-200\",\n      REJECTED: \"bg-red-100 text-red-800 border-red-200\",\n      CANCELLED: \"bg-gray-100 text-gray-800 border-gray-200\",\n    };\n    const labels: Record<string, string> = {\n      PENDING: \"Pendiente\",\n      UNDER_REVIEW: \"En revisión\",\n      APPROVED: \"Aprobada\",\n      REJECTED: \"Rechazada\",\n      CANCELLED: \"Cancelada\",\n    };\n    return (\n      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${styles[status]}`}>\n        {labels[status]}\n      </span>\n    );\n  };\n\n  const formatMoney = (n: number) =>\n    new Intl.NumberFormat(\"es-AR\", { style: \"currency\", currency: \"ARS\", maximumFractionDigits: 0 }).format(n);\n\n  const formatDate = (s?: string) => (s ? new Date(s).toLocaleDateString() : \"-\");\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50 relative overflow-hidden\">\n      {/* Nueva Navegación Admin */}\n      <AdminNavigation \n        title=\"Solicitudes de Préstamo\"\n        subtitle=\"Gestiona las solicitudes de financiamiento\"\n        stats={{\n          count: totalCount,\n          label: \"solicitudes\"\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6 relative\">\n        {/* Filtros y búsqueda compactos */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-4 mb-6\">\n          <div className=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n            <div className=\"flex flex-wrap gap-2\">\n              {([\"ALL\", \"PENDING\", \"UNDER_REVIEW\", \"APPROVED\", \"REJECTED\", \"CANCELLED\"] as const).map((st) => (\n                <button\n                  key={st}\n                  onClick={() => { setStatusFilter(st); setPage(1); }}\n                  className={`px-3 py-1.5 rounded-lg text-xs font-semibold transition-all border ${\n                    statusFilter === st\n                      ? \"bg-brand-primary-600 text-white border-brand-primary-700 shadow-sm\"\n                      : \"bg-gray-50 text-gray-700 hover:bg-gray-100 border-gray-200\"\n                  }`}\n                >\n                  {st === \"ALL\" && \"Todos\"}\n                  {st === \"PENDING\" && \"Pendientes\"}\n                  {st === \"UNDER_REVIEW\" && \"En Revisión\"}\n                  {st === \"APPROVED\" && \"Aprobadas\"}\n                  {st === \"REJECTED\" && \"Rechazadas\"}\n                  {st === \"CANCELLED\" && \"Canceladas\"}\n                </button>\n              ))}\n            </div>\n            <div className=\"flex items-center gap-2 w-full lg:w-80 bg-white border-2 border-gray-300 rounded-lg px-3 py-2 shadow-sm\">\n              <Search className=\"w-4 h-4 text-gray-500\" />\n              <input\n                value={searchTerm}\n                onChange={(e) => { setSearchTerm(e.target.value); setPage(1); }}\n                placeholder=\"Buscar por nombre, DNI, email...\"\n                className=\"flex-1 bg-transparent outline-none text-sm text-gray-900 placeholder-gray-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Tabla moderna y densa */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 overflow-hidden\">\n          {loading ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"animate-spin rounded-full h-8 w-8 border-4 border-brand-primary-600/20 border-t-brand-primary-600 mx-auto\"></div>\n              <p className=\"mt-3 text-gray-600 text-sm\">Cargando solicitudes...</p>\n            </div>\n          ) : apps.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Calendar className=\"w-8 h-8 text-gray-400\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-1\">No hay solicitudes</h3>\n              <p className=\"text-gray-500 text-sm\">No se encontraron solicitudes para este filtro</p>\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50 border-b border-gray-200\">\n                  <tr>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Solicitante\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Contacto\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Préstamo\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Dealer\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Estado\n                    </th>\n                    <th className=\"px-4 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Fecha\n                    </th>\n                    <th className=\"px-4 py-3 text-center text-xs font-semibold text-gray-600 uppercase tracking-wider\">\n                      Acciones\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"divide-y divide-gray-100\">\n                  {apps.map((a) => (\n                    <tr key={a.publicId} className=\"hover:bg-gray-50 transition-colors\">\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center gap-3\">\n                          <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center\">\n                            <User className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <div>\n                            <div className=\"font-semibold text-gray-900 text-sm\">\n                              {a.clientFirstName} {a.clientLastName}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">DNI: {a.clientDni}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm text-gray-900\">{a.clientEmail}</div>\n                        <div className=\"text-xs text-gray-500\">{a.clientPhone}</div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(a.loanAmount)}</div>\n                        <div className=\"text-xs text-gray-500\">\n                          {formatMoney(a.monthlyPayment)} × {a.loanTerm}m\n                        </div>\n                        <div className=\"text-xs text-brand-primary-600\">CFT: {(a.cft || 0).toFixed(2)}%</div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <Building className=\"w-3 h-3 text-gray-400\" />\n                          <div className=\"text-sm text-gray-900 truncate max-w-32\">\n                            {a.dealer.companyName}\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        {getStatusBadge(a.status)}\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"text-sm text-gray-900\">{formatDate(a.createdAt)}</div>\n                        {a.reviewedAt && (\n                          <div className=\"text-xs text-gray-500\">Rev: {formatDate(a.reviewedAt)}</div>\n                        )}\n                      </td>\n                      <td className=\"px-4 py-3\">\n                        <div className=\"flex items-center justify-center gap-1\">\n                          <button\n                            onClick={() => handleOpenDetailsModal(a)}\n                            className=\"p-1.5 rounded-lg text-brand-primary-600 hover:bg-brand-primary-50 transition-colors\"\n                            title=\"Ver detalles\"\n                          >\n                            <Eye className=\"w-4 h-4\" />\n                          </button>\n                          {a.status !== \"APPROVED\" && a.status !== \"REJECTED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"UNDER_REVIEW\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-blue-600 hover:bg-blue-50 transition-colors disabled:opacity-50\"\n                              title=\"Marcar en revisión\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <Clock className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                          {a.status !== \"APPROVED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"APPROVED\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-green-600 hover:bg-green-50 transition-colors disabled:opacity-50\"\n                              title=\"Aprobar\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <Check className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                          {a.status !== \"REJECTED\" && (\n                            <button\n                              onClick={() => updateStatus(a.publicId, \"REJECTED\")}\n                              disabled={processingId === a.publicId}\n                              className=\"p-1.5 rounded-lg text-red-600 hover:bg-red-50 transition-colors disabled:opacity-50\"\n                              title=\"Rechazar\"\n                            >\n                              {processingId === a.publicId ? (\n                                <Clock className=\"w-4 h-4 animate-spin\" />\n                              ) : (\n                                <X className=\"w-4 h-4\" />\n                              )}\n                            </button>\n                          )}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n\n          {/* Paginación compacta */}\n          {!loading && totalPages > 1 && (\n            <div className=\"px-4 py-3 bg-gray-50 border-t border-gray-200 flex items-center justify-between\">\n              <button\n                onClick={() => setPage((p) => Math.max(1, p - 1))}\n                disabled={page <= 1}\n                className=\"px-3 py-1.5 rounded-lg text-sm font-medium bg-white hover:bg-gray-50 border border-gray-200 disabled:opacity-50 transition-colors\"\n              >\n                Anterior\n              </button>\n              <div className=\"text-sm text-gray-600\">\n                Página {page} de {totalPages} • {totalCount} solicitudes\n              </div>\n              <button\n                onClick={() => setPage((p) => Math.min(totalPages, p + 1))}\n                disabled={page >= totalPages}\n                className=\"px-3 py-1.5 rounded-lg text-sm font-medium bg-white hover:bg-gray-50 border border-gray-200 disabled:opacity-50 transition-colors\"\n              >\n                Siguiente\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de detalles */}\n      {isModalOpen && selectedApp && (\n        <div className=\"fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <div className=\"bg-white rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden\">\n            {/* Header del modal */}\n            <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-6 py-4 relative overflow-hidden\">\n              <div className=\"absolute top-0 right-0 w-24 h-24 bg-white/5 rounded-full -translate-y-12 translate-x-12\"></div>\n              <div className=\"relative flex items-center justify-between\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"w-10 h-10 bg-white/10 backdrop-blur-sm rounded-xl flex items-center justify-center\">\n                    <User className=\"w-5 h-5 text-white\" />\n                  </div>\n                  <div>\n                    <h2 className=\"text-xl font-bold text-white\">\n                      {selectedApp.clientFirstName} {selectedApp.clientLastName}\n                    </h2>\n                    <p className=\"text-brand-primary-100 text-sm\">Solicitud de Préstamo</p>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  {getStatusBadge(selectedApp.status)}\n                  <button\n                    onClick={handleCloseDetailsModal}\n                    className=\"p-2 rounded-lg text-white/80 hover:text-white hover:bg-white/10 transition-colors\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Contenido del modal */}\n            <div className=\"p-6 overflow-y-auto max-h-[calc(90vh-80px)]\">\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {/* Información Personal */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <User className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información Personal</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre Completo</label>\n                      <div className=\"text-sm font-medium text-gray-900\">\n                        {selectedApp.applicantFirstName || selectedApp.clientFirstName} {selectedApp.applicantLastName || selectedApp.clientLastName}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CUIL</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantCuil || selectedApp.clientDni}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantEmail || selectedApp.clientEmail}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Teléfono</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantPhone || selectedApp.clientPhone}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Nacimiento</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.applicantBirthDate ? formatDate(selectedApp.applicantBirthDate) : '-'}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Estado Civil</label>\n                      <div className=\"text-sm text-gray-900 capitalize\">\n                        {selectedApp.applicantMaritalStatus || '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información de Dirección */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <MapPin className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información de Dirección</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Dirección</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.applicantAddress || '-'}\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Ciudad</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.applicantCity || '-'}</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Código Postal</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.applicantPostalCode || '-'}</div>\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Provincia</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.applicantProvince || '-'}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información Laboral */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Briefcase className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información Laboral</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Tipo de Empleo</label>\n                      <div className=\"text-sm text-gray-900 capitalize\">\n                        {selectedApp.employmentType?.replace('_', ' ') || '-'}\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</label>\n                      <div className=\"text-sm text-gray-900\">{selectedApp.companyName || '-'}</div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Teléfono Empresa</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.companyPhone || '-'}</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Experiencia</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.workExperience ? `${selectedApp.workExperience} años` : '-'}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información del Préstamo */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <DollarSign className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información del Préstamo</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Monto del Vehículo</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.vehiclePrice)}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Monto del Préstamo</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.loanAmount)}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Cuota Mensual</label>\n                      <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.monthlyPayment)}</div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Plazo</label>\n                        <div className=\"text-sm text-gray-900\">{selectedApp.loanTerm} meses</div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CFT</label>\n                        <div className=\"text-sm font-semibold text-brand-primary-600\">{(selectedApp.cft || 0).toFixed(2)}%</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información del Vehículo */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Car className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información del Vehículo</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Marca y Modelo</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.vehicleData ? \n                          `${selectedApp.submissionData.vehicleData.marca} ${selectedApp.submissionData.vehicleData.modelo}` :\n                          `${selectedApp.vehicleBrand || '-'} ${selectedApp.vehicleModel || '-'}`\n                        }\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Año</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.submissionData?.vehicleData?.anio || selectedApp.vehicleYear || '-'}\n                        </div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Versión</label>\n                        <div className=\"text-sm text-gray-900\">\n                          {selectedApp.submissionData?.vehicleData?.version || selectedApp.vehicleVersion || '-'}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-3\">\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Condición</label>\n                        <div className=\"text-sm text-gray-900 capitalize\">\n                          {selectedApp.submissionData?.vehicleData?.condicionVehiculo || selectedApp.vehicleCondition || '-'}\n                        </div>\n                      </div>\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Precio</label>\n                        <div className=\"text-sm font-semibold text-gray-900\">{formatMoney(selectedApp.vehiclePrice)}</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información del Cónyuge */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Heart className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información del Cónyuge</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Nombre Completo</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.spouseData ? \n                          `${selectedApp.submissionData.spouseData.nombreConyuge?.trim()} ${selectedApp.submissionData.spouseData.apellidoConyuge}` :\n                          selectedApp.spouseFirstName && selectedApp.spouseLastName ?\n                          `${selectedApp.spouseFirstName} ${selectedApp.spouseLastName}` :\n                          'No registrado'\n                        }\n                      </div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">CUIL</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submissionData?.spouseData?.cuilConyuge || selectedApp.spouseCuil || '-'}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información del Dealer */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Building className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Concesionario</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Empresa</label>\n                      <div className=\"text-sm font-medium text-gray-900\">{selectedApp.dealer?.companyName || '-'}</div>\n                    </div>\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Enviado por</label>\n                      <div className=\"text-sm text-gray-900\">\n                        {selectedApp.submittedByUser?.firstName || ''} {selectedApp.submittedByUser?.lastName || ''}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">{selectedApp.submittedByUser?.email || '-'}</div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Información de Solicitud */}\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 pb-2 border-b border-gray-200\">\n                    <Calendar className=\"w-4 h-4 text-brand-primary-600\" />\n                    <h3 className=\"font-semibold text-gray-900\">Información de Solicitud</h3>\n                  </div>\n                  <div className=\"space-y-3\">\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Creación</label>\n                      <div className=\"text-sm text-gray-900\">{formatDate(selectedApp.createdAt)}</div>\n                    </div>\n                    {selectedApp.reviewedAt && (\n                      <div>\n                        <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Fecha de Revisión</label>\n                        <div className=\"text-sm text-gray-900\">{formatDate(selectedApp.reviewedAt)}</div>\n                      </div>\n                    )}\n                    <div>\n                      <label className=\"text-xs font-medium text-gray-500 uppercase tracking-wider\">Estado Actual</label>\n                      <div className=\"mt-1\">{getStatusBadge(selectedApp.status)}</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Documentación Subida */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"flex items-center gap-2 pb-4 border-b border-gray-200\">\n                  <FileText className=\"w-4 h-4 text-brand-primary-600\" />\n                  <h3 className=\"font-semibold text-gray-900\">Documentación Subida</h3>\n                </div>\n                <div className=\"mt-4\">\n                  {selectedApp.documentsMetadata && Array.isArray(selectedApp.documentsMetadata) && selectedApp.documentsMetadata.length > 0 ? (\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n                      {selectedApp.documentsMetadata.map((doc: any, index: number) => (\n                        <div key={index} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors\">\n                          <div className=\"w-8 h-8 bg-brand-primary-600 rounded-lg flex items-center justify-center\">\n                            <FileText className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <div className=\"flex-1 min-w-0\">\n                            <div className=\"text-sm font-medium text-gray-900 truncate\">\n                              {doc.name || `Documento ${index + 1}`}\n                            </div>\n                            <div className=\"text-xs text-gray-500\">\n                              {doc.size ? `${Math.round(doc.size / 1024)} KB` : 'Tamaño desconocido'}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center gap-1\">\n                            {doc.url && (\n                              <>\n                                <button\n                                  onClick={() => window.open(doc.url, '_blank')}\n                                  className=\"p-1.5 rounded-lg text-brand-primary-600 hover:bg-brand-primary-50 transition-colors\"\n                                  title=\"Ver documento\"\n                                >\n                                  <ExternalLink className=\"w-4 h-4\" />\n                                </button>\n                                <button\n                                  onClick={() => {\n                                    const link = document.createElement('a');\n                                    link.href = doc.url;\n                                    link.download = doc.name || `documento-${index + 1}`;\n                                    link.click();\n                                  }}\n                                  className=\"p-1.5 rounded-lg text-green-600 hover:bg-green-50 transition-colors\"\n                                  title=\"Descargar documento\"\n                                >\n                                  <Download className=\"w-4 h-4\" />\n                                </button>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                        <FileText className=\"w-8 h-8 text-gray-400\" />\n                      </div>\n                      <h4 className=\"text-sm font-medium text-gray-900 mb-1\">Sin documentos</h4>\n                      <p className=\"text-xs text-gray-500\">No se han subido documentos para esta solicitud</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Acciones del modal */}\n              <div className=\"mt-6 pt-6 border-t border-gray-200\">\n                <div className=\"flex flex-wrap gap-3 justify-end\">\n                  {selectedApp.status !== \"APPROVED\" && selectedApp.status !== \"REJECTED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"UNDER_REVIEW\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-blue-600 hover:bg-blue-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <Clock className=\"w-4 h-4\" />\n                      Marcar en Revisión\n                    </button>\n                  )}\n                  {selectedApp.status !== \"APPROVED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"APPROVED\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-green-600 hover:bg-green-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <Check className=\"w-4 h-4\" />\n                      Aprobar Solicitud\n                    </button>\n                  )}\n                  {selectedApp.status !== \"REJECTED\" && (\n                    <button\n                      onClick={() => {\n                        updateStatus(selectedApp.publicId, \"REJECTED\");\n                        handleCloseDetailsModal();\n                      }}\n                      disabled={processingId === selectedApp.publicId}\n                      className=\"px-4 py-2 rounded-lg text-sm font-semibold bg-red-600 hover:bg-red-700 text-white shadow disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      <X className=\"w-4 h-4\" />\n                      Rechazar Solicitud\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <ConfirmationModal\n        isOpen={modalState.isOpen}\n        onClose={closeModal}\n        title={modalState.title}\n        message={modalState.message}\n        type={modalState.type}\n      />\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\admin\\rates\\page.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'DollarSign' is defined but never used.","line":5,"column":20,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":30},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calculator' is defined but never used.","line":5,"column":41,"nodeType":null,"messageId":"unusedVar","endLine":5,"endColumn":51},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchRateRanges'. Either include it or remove the dependency array.","line":100,"column":6,"nodeType":"ArrayExpression","endLine":100,"endColumn":8,"suggestions":[{"desc":"Update the dependencies array to be: [fetchRateRanges]","fix":{"range":[2721,2723],"text":"[fetchRateRanges]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport AdminNavigation from '@/components/admin/AdminNavigation';\nimport { Settings, DollarSign, Percent, Calculator, Save, RefreshCw, AlertCircle, Plus, Edit, Trash2, Calendar } from 'lucide-react';\n\ninterface InterestRateRange {\n  id: number;\n  name: string;\n  description?: string;\n  yearFrom: number;\n  yearTo: number;\n  interestRate: number;\n  isActive: boolean;\n  priority: number;\n  createdAt: string;\n  updatedAt: string;\n  createdByUser?: {\n    id: number;\n    firstName: string;\n    lastName: string;\n    email: string;\n  };\n}\n\ninterface RateRangeFormData {\n  name: string;\n  description: string;\n  yearFrom: number;\n  yearTo: number;\n  interestRate: number;\n  isActive: boolean;\n  priority: number;\n}\n\nexport default function RatesPage() {\n  const [rateRanges, setRateRanges] = useState<InterestRateRange[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [editingRange, setEditingRange] = useState<InterestRateRange | null>(null);\n  const [formData, setFormData] = useState<RateRangeFormData>({\n    name: '',\n    description: '',\n    yearFrom: new Date().getFullYear() - 10,\n    yearTo: new Date().getFullYear(),\n    interestRate: 0.45,\n    isActive: true,\n    priority: 0\n  });\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n\n  // Función para obtener token desde cookies\n  const getTokenFromCookies = () => {\n    const cookies = document.cookie.split(';');\n    for (const cookie of cookies) {\n      const [name, value] = cookie.trim().split('=');\n      if (name === 'access_token') {\n        return value;\n      }\n    }\n    return null;\n  };\n\n  // Cargar rangos de tasas desde la API\n  const fetchRateRanges = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch('/api/admin/rates', {\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Error al cargar rangos de tasas');\n      }\n      \n      const result = await response.json();\n      if (result.success) {\n        setRateRanges(result.data);\n      } else {\n        setError(result.error || 'Error desconocido');\n      }\n    } catch (err) {\n      setError('Error de conexión al cargar rangos de tasas');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Cargar datos al montar el componente\n  useEffect(() => {\n    fetchRateRanges();\n  }, []);\n\n  // Manejar envío del formulario\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      const token = getTokenFromCookies();\n      const url = editingRange \n        ? `/api/admin/rates/${editingRange.id}`\n        : '/api/admin/rates';\n      \n      const method = editingRange ? 'PATCH' : 'POST';\n      \n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        },\n        credentials: 'include',\n        body: JSON.stringify(formData)\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        setSuccess(result.message || 'Operación exitosa');\n        setShowCreateModal(false);\n        setEditingRange(null);\n        resetForm();\n        await fetchRateRanges();\n      } else {\n        setError(result.error || 'Error en la operación');\n      }\n    } catch (err) {\n      setError('Error de conexión');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Eliminar rango de tasas\n  const handleDelete = async (id: number) => {\n    if (!confirm('¿Está seguro de que desea eliminar este rango de tasas?')) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    \n    try {\n      const token = getTokenFromCookies();\n      const response = await fetch(`/api/admin/rates/${id}`, {\n        method: 'DELETE',\n        credentials: 'include',\n        headers: {\n          'Content-Type': 'application/json',\n          ...(token && { 'Authorization': `Bearer ${token}` }),\n        }\n      });\n\n      const result = await response.json();\n      \n      if (result.success) {\n        setSuccess('Rango eliminado exitosamente');\n        await fetchRateRanges();\n      } else {\n        setError(result.error || 'Error al eliminar');\n      }\n    } catch (err) {\n      setError('Error de conexión');\n      console.error('Error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Resetear formulario\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      description: '',\n      yearFrom: new Date().getFullYear() - 10,\n      yearTo: new Date().getFullYear(),\n      interestRate: 0.45,\n      isActive: true,\n      priority: 0\n    });\n  };\n\n  // Abrir modal de edición\n  const handleEdit = (range: InterestRateRange) => {\n    setEditingRange(range);\n    setFormData({\n      name: range.name,\n      description: range.description || '',\n      yearFrom: range.yearFrom,\n      yearTo: range.yearTo,\n      interestRate: range.interestRate,\n      isActive: range.isActive,\n      priority: range.priority\n    });\n    setShowCreateModal(true);\n  };\n\n  // Formatear tasa como porcentaje\n  const formatRate = (rate: number) => {\n    return `${(rate * 100).toFixed(2)}%`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-white via-slate-50 to-blue-50\">\n      <AdminNavigation \n        title=\"Gestión de Tasas por Años\"\n        subtitle=\"Configuración de tasas de interés según el año del vehículo\"\n        stats={{\n          count: rateRanges.length,\n          label: \"rangos configurados\"\n        }}\n      />\n\n      <div className=\"container mx-auto px-6 sm:px-8 py-6\">\n        {/* Mensajes de error y éxito */}\n        {error && (\n          <div className=\"bg-red-50 border border-red-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <AlertCircle className=\"w-5 h-5 text-red-600\" />\n              <p className=\"text-red-800\">{error}</p>\n            </div>\n          </div>\n        )}\n        \n        {success && (\n          <div className=\"bg-green-50 border border-green-200 rounded-xl p-4 mb-6\">\n            <div className=\"flex items-center gap-3\">\n              <Settings className=\"w-5 h-5 text-green-600\" />\n              <p className=\"text-green-800\">{success}</p>\n            </div>\n          </div>\n        )}\n\n        {/* Header con acciones */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <div className=\"w-12 h-12 bg-brand-primary-100 rounded-xl flex items-center justify-center\">\n                <Calendar className=\"w-6 h-6 text-brand-primary-600\" />\n              </div>\n              <div>\n                <h2 className=\"text-xl font-bold text-gray-900\">Rangos de Tasas por Años</h2>\n                <p className=\"text-gray-600 text-sm\">\n                  Configure tasas de interés según el año del modelo del vehículo\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-3\">\n              <button\n                onClick={fetchRateRanges}\n                disabled={loading}\n                className=\"flex items-center gap-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 disabled:opacity-50 transition-all\"\n              >\n                <RefreshCw className={`w-4 h-4 ${loading ? 'animate-spin' : ''}`} />\n                Actualizar\n              </button>\n              <button\n                onClick={() => {\n                  resetForm();\n                  setEditingRange(null);\n                  setShowCreateModal(true);\n                }}\n                className=\"flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 transition-all\"\n              >\n                <Plus className=\"w-4 h-4\" />\n                Nuevo Rango\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Lista de rangos de tasas */}\n        <div className=\"bg-white rounded-xl shadow-lg border border-gray-100/50 overflow-hidden\">\n          <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 px-6 py-4 border-b border-gray-200\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-10 h-10 rounded-lg flex items-center justify-center bg-blue-50 border-blue-200 text-blue-700\">\n                <Percent className=\"w-5 h-5\" />\n              </div>\n              <div>\n                <h3 className=\"text-lg font-bold text-gray-900\">Rangos de Tasas Configurados</h3>\n                <p className=\"text-sm text-gray-600\">{rateRanges.length} rangos activos</p>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"divide-y divide-gray-100\">\n            {loading ? (\n              <div className=\"p-8 text-center\">\n                <RefreshCw className=\"w-8 h-8 animate-spin mx-auto text-gray-400 mb-4\" />\n                <p className=\"text-gray-600\">Cargando rangos de tasas...</p>\n              </div>\n            ) : rateRanges.length === 0 ? (\n              <div className=\"p-8 text-center\">\n                <Calendar className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" />\n                <h4 className=\"text-lg font-semibold text-gray-900 mb-2\">No hay rangos configurados</h4>\n                <p className=\"text-gray-600 mb-4\">Cree el primer rango de tasas para comenzar</p>\n                <button\n                  onClick={() => {\n                    resetForm();\n                    setEditingRange(null);\n                    setShowCreateModal(true);\n                  }}\n                  className=\"inline-flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 transition-all\"\n                >\n                  <Plus className=\"w-4 h-4\" />\n                  Crear Primer Rango\n                </button>\n              </div>\n            ) : (\n              rateRanges.map((range) => (\n                <div key={range.id} className=\"p-6 hover:bg-gray-50/50 transition-colors\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-3 mb-2\">\n                        <h4 className=\"text-lg font-semibold text-gray-900\">{range.name}</h4>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`px-2 py-1 rounded text-xs font-medium ${\n                            range.isActive \n                              ? 'bg-green-100 text-green-700' \n                              : 'bg-gray-100 text-gray-600'\n                          }`}>\n                            {range.isActive ? 'Activo' : 'Inactivo'}\n                          </span>\n                          {range.priority > 0 && (\n                            <span className=\"px-2 py-1 bg-blue-100 text-blue-700 rounded text-xs font-medium\">\n                              Prioridad {range.priority}\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                      {range.description && (\n                        <p className=\"text-gray-600 text-sm mb-3\">{range.description}</p>\n                      )}\n                      <div className=\"flex items-center gap-4 text-sm text-gray-600\">\n                        <span>Años: {range.yearFrom} - {range.yearTo}</span>\n                        <span>•</span>\n                        <span>Tasa: {formatRate(range.interestRate)}</span>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center gap-2 ml-6\">\n                      <button\n                        onClick={() => handleEdit(range)}\n                        className=\"p-2 text-gray-600 hover:text-brand-primary-600 hover:bg-brand-primary-50 rounded-lg transition-all\"\n                        title=\"Editar rango\"\n                      >\n                        <Edit className=\"w-4 h-4\" />\n                      </button>\n                      <button\n                        onClick={() => handleDelete(range.id)}\n                        className=\"p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all\"\n                        title=\"Eliminar rango\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Modal para crear/editar rango */}\n        {showCreateModal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-xl font-bold text-gray-900\">\n                  {editingRange ? 'Editar Rango de Tasas' : 'Crear Nuevo Rango de Tasas'}\n                </h3>\n                <p className=\"text-gray-600 text-sm mt-1\">\n                  Configure las tasas de interés según el año del modelo del vehículo\n                </p>\n              </div>\n              \n              <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Nombre del Rango *\n                    </label>\n                    <input\n                      type=\"text\"\n                      value={formData.name}\n                      onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      placeholder=\"Ej: Vehículos 2005-2015\"\n                      required\n                    />\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Descripción\n                    </label>\n                    <textarea\n                      value={formData.description}\n                      onChange={(e) => setFormData({ ...formData, description: e.target.value })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      placeholder=\"Descripción opcional del rango\"\n                      rows={3}\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Año Desde *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.yearFrom}\n                      onChange={(e) => setFormData({ ...formData, yearFrom: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"1900\"\n                      max=\"2050\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Año Hasta *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.yearTo}\n                      onChange={(e) => setFormData({ ...formData, yearTo: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"1900\"\n                      max=\"2050\"\n                      required\n                    />\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Tasa de Interés Anual (%) *\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.interestRate * 100}\n                      onChange={(e) => setFormData({ ...formData, interestRate: parseFloat(e.target.value) / 100 })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"0.01\"\n                      max=\"100\"\n                      step=\"0.01\"\n                      required\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Ingrese el porcentaje (ej: 45.5 para 45.5%)\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                      Prioridad\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={formData.priority}\n                      onChange={(e) => setFormData({ ...formData, priority: parseInt(e.target.value) })}\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-brand-primary-500 text-gray-900\"\n                      min=\"0\"\n                      max=\"100\"\n                    />\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Mayor prioridad en caso de solapamiento\n                    </p>\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <label className=\"flex items-center gap-2\">\n                      <input\n                        type=\"checkbox\"\n                        checked={formData.isActive}\n                        onChange={(e) => setFormData({ ...formData, isActive: e.target.checked })}\n                        className=\"w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-500\"\n                      />\n                      <span className=\"text-sm font-medium text-gray-700\">\n                        Rango activo\n                      </span>\n                    </label>\n                    <p className=\"text-xs text-gray-500 mt-1\">\n                      Solo los rangos activos se utilizan en los cálculos\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center justify-end gap-3 pt-6 border-t border-gray-200\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      setShowCreateModal(false);\n                      setEditingRange(null);\n                      setError('');\n                      setSuccess('');\n                    }}\n                    className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-all\"\n                  >\n                    Cancelar\n                  </button>\n                  <button\n                    type=\"submit\"\n                    disabled={loading}\n                    className=\"flex items-center gap-2 px-4 py-2 bg-brand-primary-600 text-white rounded-lg hover:bg-brand-primary-700 disabled:opacity-50 transition-all\"\n                  >\n                    {loading ? (\n                      <RefreshCw className=\"w-4 h-4 animate-spin\" />\n                    ) : (\n                      <Save className=\"w-4 h-4\" />\n                    )}\n                    {editingRange ? 'Actualizar' : 'Crear'} Rango\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        )}\n\n        {/* Nota informativa */}\n        <div className=\"mt-8 bg-blue-50 border border-blue-200 rounded-xl p-6\">\n          <div className=\"flex items-start gap-4\">\n            <div className=\"w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n              <AlertCircle className=\"w-5 h-5 text-blue-600\" />\n            </div>\n            <div>\n              <h4 className=\"font-semibold text-blue-900 mb-2\">Información del Sistema de Tasas</h4>\n              <div className=\"text-blue-800 text-sm space-y-1\">\n                <p>• Los rangos de años no pueden solaparse entre sí</p>\n                <p>• La calculadora del concesionario aplicará automáticamente la tasa según el año del vehículo</p>\n                <p>• En caso de solapamiento, se usa el rango con mayor prioridad</p>\n                <p>• Los concesionarios pueden ver las tasas pero no modificarlas</p>\n                <p>• Los cambios se aplican inmediatamente en todas las calculadoras</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\dealers\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\loan-applications\\[publicId]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\loan-applications\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\rates\\[id]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\admin\\rates\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\change-password\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'error' is defined but never used.","line":47,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":47,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { z } from 'zod';\nimport { prisma } from '@/lib/prisma';\n\nconst changePasswordSchema = z.object({\n  currentPassword: z.string().min(1, 'Contraseña actual requerida'),\n  newPassword: z.string().min(8, 'La nueva contraseña debe tener al menos 8 caracteres'),\n  confirmPassword: z.string().min(1, 'Confirmación de contraseña requerida'),\n}).refine((data) => data.newPassword === data.confirmPassword, {\n  message: \"Las contraseñas no coinciden\",\n  path: [\"confirmPassword\"],\n});\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Validar datos\n    const validation = changePasswordSchema.safeParse(body);\n    if (!validation.success) {\n      return NextResponse.json(\n        { \n          error: 'Datos inválidos',\n          details: validation.error.errors \n        },\n        { status: 400 }\n      );\n    }\n\n    const { currentPassword, newPassword } = validation.data;\n\n    // Obtener token de las cookies\n    const accessToken = request.cookies.get('accessToken')?.value;\n    if (!accessToken) {\n      return NextResponse.json(\n        { error: 'No autorizado' },\n        { status: 401 }\n      );\n    }\n\n    // Verificar token\n    let decoded;\n    try {\n      decoded = jwt.verify(accessToken, process.env.JWT_SECRET!) as any;\n    } catch (error) {\n      return NextResponse.json(\n        { error: 'Token inválido' },\n        { status: 401 }\n      );\n    }\n\n    // Buscar usuario\n    const user = await prisma.user.findUnique({\n      where: { \n        id: decoded.userId,\n        deletedAt: null \n      }\n    });\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Usuario no encontrado' },\n        { status: 404 }\n      );\n    }\n\n    // Verificar contraseña actual\n    if (!user.passwordHash) {\n      return NextResponse.json(\n        { error: 'Usuario no tiene contraseña configurada' },\n        { status: 400 }\n      );\n    }\n\n    const isCurrentPasswordValid = await bcrypt.compare(currentPassword, user.passwordHash);\n    if (!isCurrentPasswordValid) {\n      return NextResponse.json(\n        { error: 'Contraseña actual incorrecta' },\n        { status: 400 }\n      );\n    }\n\n    // Generar hash de la nueva contraseña\n    const newPasswordHash = await bcrypt.hash(newPassword, 12);\n\n    // Actualizar contraseña y estado del usuario\n    await prisma.user.update({\n      where: { id: user.id },\n      data: {\n        passwordHash: newPasswordHash,\n        status: user.status === 'INVITED' ? 'ACTIVE' : user.status // Activar si era invitado\n      }\n    });\n\n    // Registrar en audit log\n    await prisma.auditLog.create({\n      data: {\n        actorUserId: user.id,\n        action: 'auth.password_changed',\n        entityType: 'user',\n        entityId: user.publicId,\n        metadata: {\n          wasInvited: user.status === 'INVITED',\n        },\n        ip: request.headers.get('x-forwarded-for') || 'unknown'\n      }\n    });\n\n    return NextResponse.json({\n      success: true,\n      message: 'Contraseña actualizada correctamente'\n    });\n\n  } catch (error) {\n    console.error('Change password error:', error);\n    return NextResponse.json(\n      { error: 'Error interno del servidor' },\n      { status: 500 }\n    );\n  }\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\login\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\logout\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\me\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\auth\\refresh\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'err' is defined but never used.","line":30,"column":14,"nodeType":null,"messageId":"unusedVar","endLine":30,"endColumn":17}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nimport { prisma } from '@/lib/prisma';\n\n// Utilidad local para generar tokens (mismo formato que /api/auth/login)\nfunction generateTokens(userId: number, role: string, dealerId?: number) {\n  const payload: any = { userId, role };\n  if (typeof dealerId === 'number') payload.dealerId = dealerId;\n\n  const accessToken = jwt.sign(payload, process.env.JWT_SECRET!, { expiresIn: '15m' });\n  const refreshToken = jwt.sign(payload, process.env.JWT_REFRESH_SECRET!, { expiresIn: '7d' });\n  return { accessToken, refreshToken };\n}\n\nasync function hashToken(token: string): Promise<string> {\n  return bcrypt.hash(token, 12);\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const rCookie = request.cookies.get('refresh_token')?.value;\n    if (!rCookie) {\n      return NextResponse.json({ error: 'Falta refresh token' }, { status: 401 });\n    }\n\n    let decoded: any;\n    try {\n      decoded = jwt.verify(rCookie, process.env.JWT_REFRESH_SECRET!);\n    } catch (err) {\n      return NextResponse.json({ error: 'Refresh token inválido o expirado' }, { status: 401 });\n    }\n\n    const userId = decoded.userId as number | undefined;\n    if (!userId) {\n      return NextResponse.json({ error: 'Token sin identidad' }, { status: 401 });\n    }\n\n    // Validar usuario vigente\n    const user = await prisma.user.findFirst({\n      where: { id: userId, deletedAt: null },\n      include: { dealer: { select: { id: true, status: true } } },\n    });\n    if (!user) {\n      return NextResponse.json({ error: 'Usuario no encontrado' }, { status: 401 });\n    }\n    if (user.status === 'SUSPENDED') {\n      return NextResponse.json({ error: 'Usuario suspendido' }, { status: 403 });\n    }\n    if (user.role === 'DEALER' && user.dealer?.status !== 'APPROVED') {\n      return NextResponse.json({ error: 'Concesionario no aprobado' }, { status: 403 });\n    }\n\n    // Buscar registro de refresh token vigente y comparar hash\n    const candidates = await prisma.refreshToken.findMany({\n      where: {\n        userId: user.id,\n        revokedAt: null,\n        expiresAt: { gt: new Date() },\n      },\n      orderBy: { createdAt: 'desc' },\n    });\n\n    let matched: { id: number } | null = null;\n    for (const c of candidates) {\n      const ok = await bcrypt.compare(rCookie, c.tokenHash);\n      if (ok) {\n        matched = { id: c.id };\n        break;\n      }\n    }\n\n    if (!matched) {\n      // Opcional: invalidar todos los tokens si hay sospecha de robo\n      return NextResponse.json({ error: 'Refresh token no reconocido' }, { status: 401 });\n    }\n\n    // Generar nuevos tokens\n    let dealerIdForToken: number | undefined = undefined;\n    if (user.role === 'DEALER' || user.role === 'EJECUTIVO_CUENTAS') {\n      dealerIdForToken = user.dealerId || undefined;\n    }\n    const { accessToken, refreshToken } = generateTokens(user.id, user.role, dealerIdForToken);\n\n    // Rotación segura: crear nuevo registro, revocar el anterior y enlazar replacedBy\n    const userAgent = request.headers.get('user-agent') || undefined;\n    const ip = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || 'unknown';\n\n    const newHash = await hashToken(refreshToken);\n    const newRecord = await prisma.refreshToken.create({\n      data: {\n        userId: user.id,\n        tokenHash: newHash,\n        expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),\n        userAgent,\n        ip,\n      },\n      select: { id: true },\n    });\n\n    await prisma.refreshToken.update({\n      where: { id: matched.id },\n      data: { revokedAt: new Date(), replacedByTokenId: newRecord.id },\n    });\n\n    // Audit log\n    await prisma.auditLog.create({\n      data: {\n        actorUserId: user.id,\n        action: 'auth.refresh',\n        entityType: 'user',\n        entityId: String(user.publicId),\n        metadata: { ip, ua: userAgent },\n        ip: typeof ip === 'string' ? ip : 'unknown',\n      },\n    });\n\n    // Preparar respuesta con nuevas cookies\n    const response = NextResponse.json({ success: true });\n    const cookieOptions = {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === 'production',\n      sameSite: 'lax' as const,\n      path: '/',\n    };\n\n    response.cookies.set('access_token', accessToken, { ...cookieOptions, maxAge: 15 * 60 });\n    response.cookies.set('refresh_token', refreshToken, { ...cookieOptions, maxAge: 7 * 24 * 60 * 60 });\n\n    return response;\n  } catch (error) {\n    console.error('Refresh error:', error);\n    return NextResponse.json({ error: 'Error interno del servidor' }, { status: 500 });\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealer\\users\\[publicId]\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealer\\users\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\dealers\\register\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\health\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\loan-applications\\my-applications\\route.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'role' is assigned a value but never used.","line":40,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":40,"endColumn":15},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'dealerId' is assigned a value but never used.","line":41,"column":11,"nodeType":null,"messageId":"unusedVar","endLine":41,"endColumn":19}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { NextRequest, NextResponse } from 'next/server';\nimport { jwtVerify } from 'jose';\nimport { prisma } from '@/lib/prisma';\nimport { cookies } from 'next/headers';\nimport { errorLog } from '@/lib/logger';\n\nconst JWT_SECRET = new TextEncoder().encode(process.env.JWT_SECRET || '');\nconst JWT_REFRESH_SECRET = new TextEncoder().encode(process.env.JWT_REFRESH_SECRET || '');\n\nexport async function GET(request: NextRequest) {\n  try {\n    // 1) Intentar obtener identidad desde headers inyectados por middleware\n    const headerUserId = request.headers.get('x-user-id');\n    const headerRole = request.headers.get('x-user-role');\n    const headerDealerId = request.headers.get('x-user-dealer-id');\n\n    let userId: number | null = headerUserId ? parseInt(headerUserId, 10) : null;\n    let role: string | null = headerRole || null;\n    let dealerId: number | null = headerDealerId ? parseInt(headerDealerId, 10) : null;\n\n    // 2) Fallback: verificar cookies (access_token primero, luego refresh_token)\n    if (!userId) {\n      const cookieStore = await cookies();\n      const accessToken = cookieStore.get('access_token')?.value;\n      const refreshToken = cookieStore.get('refresh_token')?.value;\n\n      if (!accessToken && !refreshToken) {\n        return NextResponse.json({ error: 'No autorizado' }, { status: 401 });\n      }\n\n      try {\n        if (accessToken) {\n          const { payload } = await jwtVerify(accessToken, JWT_SECRET);\n          userId = (payload.userId as number) ?? null;\n          role = (payload.role as string) ?? null;\n          dealerId = (payload.dealerId as number) ?? null;\n        } else if (refreshToken) {\n          const { payload } = await jwtVerify(refreshToken, JWT_REFRESH_SECRET);\n          userId = (payload.userId as number) ?? null;\n          role = (payload.role as string) ?? null;\n          dealerId = (payload.dealerId as number) ?? null;\n        }\n      } catch (err) {\n        errorLog('❌ Error verificando JWT en /my-applications:', err);\n        return NextResponse.json({ error: 'Token inválido' }, { status: 401 });\n      }\n    }\n\n    if (!userId) {\n      return NextResponse.json({ error: 'Token inválido' }, { status: 401 });\n    }\n\n    // Obtener datos del usuario\n    const user = await prisma.user.findFirst({\n      where: { \n        id: userId,\n        deletedAt: null \n      },\n      select: {\n        id: true,\n        role: true,\n        dealerId: true,\n        dealer: {\n          select: {\n            id: true,\n            tradeName: true,\n          }\n        }\n      },\n    });\n\n    if (!user) {\n      return NextResponse.json(\n        { error: 'Usuario no encontrado' },\n        { status: 404 }\n      );\n    }\n\n    const whereCondition: any = {};\n\n    // Filtrar según el rol del usuario\n    if (user.role === 'EJECUTIVO_CUENTAS') {\n      // Ejecutivos solo ven sus propias solicitudes\n      whereCondition.submittedByUserId = user.id;\n    } else if (user.role === 'DEALER') {\n      // Dealers ven todas las solicitudes de su concesionario\n      if (user.dealerId) {\n        // Más simple y alineado con la otra ruta: filtrar por dealerId\n        whereCondition.dealerId = user.dealerId\n      } else {\n        // Si el dealer no tiene dealerId, solo sus propias solicitudes\n        whereCondition.submittedByUserId = user.id\n      }\n    } else if (user.role === 'ADMIN') {\n      // Admins ven todas las solicitudes (sin filtro adicional)\n    } else {\n      return NextResponse.json(\n        { error: 'Rol no autorizado' },\n        { status: 403 }\n      );\n    }\n\n\n    // Obtener solicitudes filtradas\n    const applications = await prisma.loanApplication.findMany({\n      where: whereCondition,\n      select: {\n        publicId: true,\n        // Datos del solicitante (según schema.prisma)\n        applicantFirstName: true,\n        applicantLastName: true,\n        applicantCuil: true,\n        applicantEmail: true,\n        applicantPhone: true,\n        // Cálculos del préstamo\n        vehiclePrice: true,\n        loanAmount: true,\n        monthlyPayment: true,\n        loanTermMonths: true,\n        interestRate: true,\n        status: true,\n        createdAt: true,\n        updatedAt: true,\n        dealerId: true,\n        submittedByUserId: true,\n        submittedByUser: {\n          select: {\n            firstName: true,\n            lastName: true,\n            role: true,\n          }\n        }\n      },\n      orderBy: {\n        createdAt: 'desc'\n      }\n    });\n\n    return NextResponse.json({\n      success: true,\n      applications,\n      userInfo: {\n        role: user.role,\n        dealerName: user.dealer?.tradeName || null,\n        totalApplications: applications.length\n      }\n    });\n\n  } catch (error) {\n    errorLog('Error en /api/loan-applications/my-applications:', error);\n    return NextResponse.json(\n      { error: 'Error interno del servidor' },\n      { status: 500 }\n    );\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\loan-applications\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\rates\\by-year\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\rates\\by-year\\temp-route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\api\\uploads\\loan-docs\\route.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\change-password\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\layout.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\login\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\dashboard\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\login.backup\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\app\\portal\\registro-concesionario\\page.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\HomePage.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Link' is defined but never used.","line":8,"column":8,"nodeType":null,"messageId":"unusedVar","endLine":8,"endColumn":12}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"\"use client\"\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\"\nimport { CheckCircle, Star, Zap, Shield, Building, FileText, Users, Calculator, Car, Bike } from \"lucide-react\"\nimport { LoginModal } from \"@/components/LoginModal\"\nimport Image from \"next/image\";\nimport Link from \"next/link\";\n\nexport default function HomePage() {\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n\n  return (\n    <main className=\"font-sans bg-gradient-to-br from-white via-slate-50 to-blue-50 text-text min-h-screen\">\n      {/* Header con Logo */}\n      <header className=\"bg-white border-b border-gray-100\" role=\"banner\">\n        <div className=\"w-full px-1 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <Image\n              src=\"/crediexpress-logo-sinfondo.png\"\n              alt=\"Crediexpress Automotor\"\n              width={400}\n              height={98}\n              className=\"h-auto object-contain max-h-14\"\n              style={{ width: 'auto' }}\n            />\n            <nav className=\"hidden md:flex items-center space-x-6\" role=\"navigation\" aria-label=\"Navegación principal\">\n              <a href=\"#beneficios\" className=\"text-gray-600 hover:text-brand-primary-600 font-medium transition-colors\">Beneficios</a>\n              <a href=\"#como-acceder\" className=\"text-gray-600 hover:text-brand-primary-600 font-medium transition-colors\">Cómo funciona</a>\n              <Button className=\"bg-brand-primary-600 hover:bg-brand-primary-700 transition-colors\">Contacto</Button>\n              <Button \n                onClick={() => setIsLoginModalOpen(true)}\n                className=\"bg-brand-primary-600 hover:bg-brand-primary-700 transition-colors\"\n              >\n                Soy Concesionario\n              </Button>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero */}\n      <section className=\"relative overflow-hidden bg-white\" role=\"main\" aria-labelledby=\"hero-title\">\n        {/* Imagen de fondo */}\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-white via-white/70 to-white/40 z-10\"></div>\n          <Image\n            src=\"https://images.unsplash.com/photo-1503376780353-7e6692767b70?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80\"\n            alt=\"Auto de lujo\"\n            fill\n            sizes=\"100vw\"\n            className=\"object-cover object-center\"\n            priority\n          />\n        </div>\n        <div className=\"absolute inset-0 bg-gradient-to-br from-brand-primary-600/5 via-transparent to-brand-accent-500/5 z-20\"></div>\n        <div className=\"container mx-auto px-6 sm:px-8 py-20 sm:py-32 relative z-30\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-16 items-center\">\n            <div className=\"space-y-8\">\n              <div className=\"space-y-6\">\n                <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-brand-accent-500/10 border border-brand-accent-500/20\">\n                  <span className=\"text-sm font-medium text-brand-primary-600 drop-shadow-sm\">✨ Financiación confiable desde 2008</span>\n                </div>\n                <h1 id=\"hero-title\" className=\"text-5xl sm:text-6xl lg:text-7xl font-bold leading-tight tracking-tight drop-shadow-lg\">\n                  <span className=\"text-brand-primary-600 drop-shadow-md\">Créditos</span>\n                  <br />\n                  <span className=\"text-gray-900 drop-shadow-md\">prendarios</span>\n                  <br />\n                  <span className=\"bg-gradient-to-r from-brand-accent-500 to-yellow-400 bg-clip-text text-transparent drop-shadow-md\">inteligentes</span>\n                </h1>\n                <p className=\"text-xl text-gray-600 max-w-prose leading-relaxed drop-shadow-sm\">\n                  Financiá tu auto o moto con las mejores condiciones del mercado. \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">Tasas competitivas</span>, \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">aprobación rápida</span> y \n                  <span className=\"font-semibold text-brand-primary-600 drop-shadow-sm\">transparencia total</span>.\n                </p>\n              </div>\n              <div className=\"flex flex-col sm:flex-row gap-4\">\n                <Button size=\"lg\" className=\"bg-brand-primary-600 hover:bg-brand-primary-700 text-white shadow-lg hover:shadow-xl transition-all transform hover:scale-105\">\n                  <Calculator className=\"mr-2 h-5 w-5\" />\n                  Simulá tu Crédito\n                </Button>\n                <Button size=\"lg\" variant=\"outline\" className=\"border-2 border-brand-primary-600 text-brand-primary-600 hover:bg-brand-primary-600 hover:text-white shadow-lg hover:shadow-xl transition-all transform hover:scale-105\">\n                  <FileText className=\"mr-2 h-5 w-5\" />\n                  Ver Solicitudes\n                </Button>\n              </div>\n            </div>\n            <div className=\"relative\">\n              <div className=\"bg-white rounded-2xl shadow-2xl p-8 backdrop-blur-sm bg-white/90 border border-gray-100\">\n                <h2 className=\"text-2xl font-bold text-brand-primary-600 mb-6\">Calculadora Rápida</h2>\n                <div className=\"space-y-6\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Tipo de Vehículo</label>\n                    <div className=\"flex gap-2\">\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        <Car className=\"mr-2 h-4 w-4\" />\n                        Auto\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\" className=\"flex-1\">\n                        <Bike className=\"mr-2 h-4 w-4\" />\n                        Moto\n                      </Button>\n                    </div>\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Monto del Vehículo</label>\n                    <input \n                      type=\"text\" \n                      placeholder=\"$15.000.000\" \n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-transparent\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Cuotas</label>\n                    <select className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-transparent\">\n                      <option>12 cuotas</option>\n                      <option>24 cuotas</option>\n                      <option>36 cuotas</option>\n                      <option>48 cuotas</option>\n                    </select>\n                  </div>\n                  <div className=\"bg-brand-primary-600/5 p-4 rounded-lg\">\n                    <div className=\"text-center\">\n                      <p className=\"text-sm text-gray-600\">Cuota estimada</p>\n                      <p className=\"text-3xl font-bold text-brand-primary-600\">$625.000</p>\n                      <p className=\"text-xs text-gray-500 mt-1\">TNA: 70% | TEA: 98% | CFT: 115%</p>\n                    </div>\n                  </div>\n                  <Button className=\"w-full bg-brand-primary-600 hover:bg-brand-primary-700 text-white\">\n                    Ver Simulación Completa\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Beneficios */}\n      <section id=\"beneficios\" className=\"py-20 bg-white\" aria-labelledby=\"beneficios-title\">\n        <div className=\"container mx-auto px-6 sm:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 id=\"beneficios-title\" className=\"text-4xl font-bold text-brand-primary-600 mb-4\">¿Por qué elegir Crediexpress?</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Más de 15 años financiando sueños automotrices con transparencia y confianza\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-blue-50 to-white border border-blue-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-brand-primary-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Zap className=\"h-8 w-8 text-brand-primary-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Aprobación Rápida</h3>\n              <p className=\"text-gray-600\">Respuesta en menos de 24 horas con documentación mínima</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-green-50 to-white border border-green-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-green-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Shield className=\"h-8 w-8 text-green-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">100% Seguro</h3>\n              <p className=\"text-gray-600\">Plataforma encriptada y regulada por el BCRA</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-yellow-50 to-white border border-yellow-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-brand-accent-500/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Building className=\"h-8 w-8 text-brand-accent-500\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">+500 Concesionarios</h3>\n              <p className=\"text-gray-600\">Red nacional de concesionarios aliados</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-purple-50 to-white border border-purple-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-purple-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"h-8 w-8 text-purple-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Sin Comisiones Ocultas</h3>\n              <p className=\"text-gray-600\">Transparencia total en costos y condiciones</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-red-50 to-white border border-red-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-red-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Star className=\"h-8 w-8 text-red-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Atención Personalizada</h3>\n              <p className=\"text-gray-600\">Asesoramiento experto en cada paso del proceso</p>\n            </div>\n            <div className=\"text-center p-6 rounded-xl bg-gradient-to-br from-indigo-50 to-white border border-indigo-100 hover:shadow-lg transition-all\">\n              <div className=\"w-16 h-16 bg-indigo-600/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Users className=\"h-8 w-8 text-indigo-600\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Comunidad Activa</h3>\n              <p className=\"text-gray-600\">Más de 50.000 clientes satisfechos nos recomiendan</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Cómo Acceder */}\n      <section id=\"como-acceder\" className=\"py-20 bg-gradient-to-br from-slate-50 to-blue-50\" aria-labelledby=\"como-acceder-title\">\n        <div className=\"container mx-auto px-6 sm:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 id=\"como-acceder-title\" className=\"text-4xl font-bold text-brand-primary-600 mb-4\">¿Cómo acceder a tu crédito?</h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Proceso simple y rápido en 3 pasos\n            </p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                1\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Simulá tu Crédito</h3>\n              <p className=\"text-gray-600\">Ingresá el monto y plazo deseado para conocer tu cuota mensual</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                2\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Completá tu Solicitud</h3>\n              <p className=\"text-gray-600\">Cargá tus datos personales y documentación requerida</p>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"w-20 h-20 bg-brand-primary-600 rounded-full flex items-center justify-center mx-auto mb-6 text-white text-2xl font-bold\">\n                3\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">¡Retirá tu Auto!</h3>\n              <p className=\"text-gray-600\">Una vez aprobado, coordiná la entrega en el concesionario</p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Final */}\n      <section className=\"py-20 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 text-white\">\n        <div className=\"container mx-auto px-6 sm:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-4\">¿Listo para financiar tu próximo vehículo?</h2>\n          <p className=\"text-xl mb-8 opacity-90\">\n            Comenzá ahora y obtené tu preaprobación en minutos\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button size=\"lg\" className=\"bg-white text-brand-primary-600 hover:bg-gray-100 transition-all\">\n              Simular Crédito\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-brand-primary-600 transition-all\">\n              Contactar Asesor\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer Información */}\n      <footer className=\"bg-surface py-8\">\n        <div className=\"container mx-auto px-6 sm:px-8 text-center\">\n          <p className=\"text-sm text-[color:var(--color-text)]/60\">\n            Crediexpress Auto - Créditos prendarios para autos y motos\n          </p>\n          <p className=\"text-xs text-[color:var(--color-text)]/40 mt-2\">\n            Los valores mostrados son estimativos. Sujeto a evaluación crediticia.\n          </p>\n        </div>\n      </footer>\n\n      <LoginModal \n        open={isLoginModalOpen} \n        onOpenChange={setIsLoginModalOpen} \n      />\n    </main>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\LoginModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\admin\\AdminNavigation.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\calculator\\LoanCalculator.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calendar' is defined but never used.","line":4,"column":46,"nodeType":null,"messageId":"unusedVar","endLine":4,"endColumn":54},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'setSelectedTerm' is assigned a value but never used.","line":31,"column":24,"nodeType":null,"messageId":"unusedVar","endLine":31,"endColumn":39},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchRateByYear'. Either include it or remove the dependency array.","line":72,"column":6,"nodeType":"ArrayExpression","endLine":72,"endColumn":19,"suggestions":[{"desc":"Update the dependencies array to be: [fetchRateByYear, vehicleYear]","fix":{"range":[2760,2773],"text":"[fetchRateByYear, vehicleYear]"}}]},{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'availableTerms'. Either include it or remove the dependency array.","line":95,"column":6,"nodeType":"ArrayExpression","endLine":95,"endColumn":49,"suggestions":[{"desc":"Update the dependencies array to be: [inputs, selectedTerm, onCalculationChange, availableTerms]","fix":{"range":[3425,3468],"text":"[inputs, selectedTerm, onCalculationChange, availableTerms]"}}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'formatCurrency' is assigned a value but never used.","line":108,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":108,"endColumn":23},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'formatPercent' is assigned a value but never used.","line":117,"column":9,"nodeType":null,"messageId":"unusedVar","endLine":117,"endColumn":22}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useEffect } from 'react';\nimport { Calculator, TrendingUp, DollarSign, Calendar, Percent, CheckCircle } from 'lucide-react';\nimport { calcular, type Inputs, type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanCalculatorProps {\n  className?: string;\n  onCalculationComplete?: (result: any) => void;\n  onCalculationChange?: (result: Result | null) => void;\n}\n\nexport default function LoanCalculator({ onCalculationChange, onCalculationComplete }: LoanCalculatorProps) {\n  const [inputs, setInputs] = useState<Inputs>({\n    monto: 5000000,\n    plazoMeses: 36,\n    tasa: { tipo: 'TNA', valor: 0.60 }, // 60% TNA\n    ivaInteres: 0.21, // 21% IVA\n    gastosOtorgamientoPct: 0.03, // 3%\n    gastosFijosIniciales: 0,\n    sellosPct: 0.012, // 1.2% sellos\n    svsPctMensual: 0,\n    seguroAutoMensual: 0,\n  });\n\n  const [vehicleYear, setVehicleYear] = useState<number>(new Date().getFullYear());\n  const [loadingRate, setLoadingRate] = useState(false);\n  const [rateError, setRateError] = useState<string>('');\n  const [rateInfo, setRateInfo] = useState<string>('');\n  const [results, setResults] = useState<{[key: number]: Result}>({});\n  const [selectedTerm, setSelectedTerm] = useState<number>(24);\n  const [showAdvanced, setShowAdvanced] = useState(false);\n\n  const availableTerms = [6, 12, 24, 48];\n\n  // Función para obtener la tasa según el año del vehículo\n  const fetchRateByYear = async (year: number) => {\n    setLoadingRate(true);\n    setRateError('');\n    setRateInfo('');\n    \n    try {\n      const response = await fetch(`/api/rates/by-year?year=${year}`);\n      const json = await response.json();\n      \n      if (json?.success && json?.data?.interestRate != null) {\n        // Actualizar la tasa en los inputs\n        const { interestRate, rateRange } = json.data;\n        updateTasa('valor', Number(interestRate));\n        const yFrom = rateRange?.yearFrom ?? '';\n        const yTo = rateRange?.yearTo ?? '';\n        setRateInfo(`Tasa aplicada: ${(Number(interestRate) * 100).toFixed(1)}% ${yFrom && yTo ? `para vehículos ${yFrom}-${yTo}` : ''}`);\n      } else {\n        setRateError(json?.error || 'No se encontró una tasa para este año');\n        // Mantener tasa por defecto\n        updateTasa('valor', 0.60); // 60% por defecto\n      }\n    } catch (error) {\n      console.error('Error al obtener tasa:', error);\n      setRateError('Error al obtener la tasa. Se usará la tasa por defecto.');\n      updateTasa('valor', 0.60); // 60% por defecto\n    } finally {\n      setLoadingRate(false);\n    }\n  };\n\n  // Efecto para obtener tasa cuando cambia el año\n  useEffect(() => {\n    if (vehicleYear >= 1990 && vehicleYear <= new Date().getFullYear() + 1) {\n      fetchRateByYear(vehicleYear);\n    }\n  }, [vehicleYear]);\n\n  useEffect(() => {\n    try {\n      // Calcular para todos los plazos disponibles\n      const newResults: {[key: number]: Result} = {};\n      \n      availableTerms.forEach(term => {\n        const inputsForTerm = { ...inputs, plazoMeses: term };\n        newResults[term] = calcular(inputsForTerm);\n      });\n      \n      setResults(newResults);\n      \n      // Notificar el resultado del plazo seleccionado\n      if (newResults[selectedTerm]) {\n        onCalculationChange?.(newResults[selectedTerm]);\n      }\n    } catch (error) {\n      console.error('Error en cálculo:', error);\n      setResults({});\n      onCalculationChange?.(null);\n    }\n  }, [inputs, selectedTerm, onCalculationChange]);\n\n  const updateInput = (field: keyof Inputs, value: any) => {\n    setInputs(prev => ({ ...prev, [field]: value }));\n  };\n\n  const updateTasa = (field: 'tipo' | 'valor', value: any) => {\n    setInputs(prev => ({\n      ...prev,\n      tasa: { ...prev.tasa, [field]: value }\n    }));\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('es-AR', {\n      style: 'currency',\n      currency: 'ARS',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const formatPercent = (value: number) => {\n    return `${(value * 100).toFixed(2)}%`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con gradiente */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-8 py-8 text-center relative overflow-hidden\">\n        <div className=\"absolute top-0 right-0 w-32 h-32 bg-white/5 rounded-full -translate-y-16 translate-x-16\"></div>\n        <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-brand-accent-500/20 rounded-full translate-y-12 -translate-x-12\"></div>\n        \n        <div className=\"relative\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center\">\n              <Calculator className=\"w-6 h-6 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-white\">Calculadora de Préstamos</h2>\n          </div>\n          <p className=\"text-brand-primary-100 text-lg\">Calcula tu préstamo prendario en tiempo real</p>\n        </div>\n      </div>\n\n      <div className=\"p-8 space-y-8\">\n        {/* Campos básicos */}\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n            <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center shadow-sm\">\n              <DollarSign className=\"w-4 h-4 text-white\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900\">Datos del Préstamo</h3>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Monto a Financiar *\n              </label>\n              <input\n                type=\"number\"\n                value={inputs.monto}\n                onChange={(e) => updateInput('monto', Number(e.target.value))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"5.000.000\"\n                min=\"100000\"\n                step=\"10000\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Año del Vehículo *\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={vehicleYear}\n                  onChange={(e) => setVehicleYear(Number(e.target.value))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                  placeholder={new Date().getFullYear().toString()}\n                  min=\"1990\"\n                  max={new Date().getFullYear() + 1}\n                />\n                {loadingRate && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-brand-primary-600\"></div>\n                  </div>\n                )}\n              </div>\n              {rateInfo && (\n                <p className=\"text-sm text-green-600 mt-1 flex items-center gap-1\">\n                  <CheckCircle className=\"w-4 h-4\" />\n                  {rateInfo}\n                </p>\n              )}\n              {rateError && (\n                <p className=\"text-sm text-red-600 mt-1\">\n                  {rateError}\n                </p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tipo de Tasa *\n              </label>\n              <select\n                value={inputs.tasa.tipo}\n                onChange={(e) => updateTasa('tipo', e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"TNA\">TNA (Tasa Nominal Anual)</option>\n                <option value=\"TEA\">TEA (Tasa Efectiva Anual)</option>\n                <option value=\"MENSUAL\">Tasa Mensual</option>\n              </select>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Tasa de Interés (%) - Solo Lectura\n              </label>\n              <div className=\"relative\">\n                <input\n                  type=\"number\"\n                  value={inputs.tasa.valor * 100}\n                  readOnly\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg bg-gray-50 text-gray-700 cursor-not-allowed shadow-sm\"\n                  placeholder=\"60\"\n                />\n                <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                  <Percent className=\"w-4 h-4 text-gray-400\" />\n                </div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                La tasa se asigna automáticamente según el año del vehículo\n              </p>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                IVA sobre Intereses *\n              </label>\n              <select\n                value={inputs.ivaInteres}\n                onChange={(e) => updateInput('ivaInteres', Number(e.target.value))}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value={0}>Sin IVA (0%)</option>\n                <option value={0.105}>IVA Reducido (10.5%)</option>\n                <option value={0.21}>IVA General (21%)</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"button\"\n              onClick={() => setShowAdvanced((s) => !s)}\n              className=\"text-sm font-medium text-brand-primary-700 hover:text-brand-primary-800 underline\"\n            >\n              {showAdvanced ? 'Ocultar configuración avanzada' : 'Mostrar configuración avanzada'}\n            </button>\n          </div>\n\n          {showAdvanced && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Configuración avanzada</h3>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Gastos de Otorgamiento (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={(inputs.gastosOtorgamientoPct ?? 0) * 100}\n                    onChange={(e) => updateInput('gastosOtorgamientoPct', Number(e.target.value) / 100)}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                    placeholder=\"3\"\n                    min=\"0\"\n                    max=\"20\"\n                    step=\"0.1\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"rounded-lg bg-gray-50 p-4 text-sm text-gray-600\">\n                La cuota se calcula con tasa mensual que <strong>incluye IVA</strong> y se <strong>redondea a entero</strong>. Conversión TNA→TEM: 365/30. El CFT anual se obtiene sobre el desembolso neto (descontando <strong>solo</strong> gastos de otorgamiento <em>netos de IVA</em>) y se anualiza con 365/30.\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Resultados por Plazo */}\n        {Object.keys(results).length > 0 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n              <div className=\"w-8 h-8 bg-green-600 rounded-full flex items-center justify-center shadow-sm\">\n                <TrendingUp className=\"w-4 h-4 text-white\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900\">Resultados por Plazo</h3>\n            </div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n              {availableTerms.map((term) => {\n                const result = results[term];\n                if (!result) return null;\n                \n                return (\n                  <div key={term} className=\"bg-white border border-gray-200 rounded-2xl p-6 hover:shadow-lg transition-all\">\n                    {/* Header */}\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <div>\n                        <h4 className=\"text-2xl font-bold text-gray-900\">{term} meses</h4>\n                        <p className=\"text-sm text-gray-600\">\n                          {term === 6 ? 'Pago rápido' : term === 12 ? 'Equilibrado' : term === 24 ? 'Recomendado' : 'Cuotas bajas'}\n                        </p>\n                      </div>\n                      <div className=\"text-right\">\n                        <div className=\"text-sm text-gray-600\">CFT Anual</div>\n                        <div className=\"text-lg font-bold text-brand-accent-500\">\n                          {(result.totales.cftEfectivoAnual * 100).toFixed(1)}%\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Cuota destacada */}\n                    <div className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 rounded-xl p-4 text-white mb-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div>\n                          <div className=\"text-sm text-brand-primary-100\">Cuota mensual</div>\n                          <div className=\"text-2xl font-bold\">\n                            ${Math.round(result.rows[0]?.cuotaTotal || 0).toLocaleString('es-AR')}\n                          </div>\n                        </div>\n                        <div className=\"text-right\">\n                          <div className=\"text-sm text-brand-primary-100\">Total a pagar</div>\n                          <div className=\"text-lg font-semibold\">\n                            ${Math.round(result.totales.sumaCuotas).toLocaleString('es-AR')}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Detalles */}\n                    <div className=\"space-y-2 text-sm mb-4\">\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Monto que recibís:</span>\n                        <span className=\"font-semibold text-green-600\">\n                          ${Math.round(result.totales.desembolsoNeto).toLocaleString('es-AR')}\n                        </span>\n                      </div>\n                      <div className=\"flex justify-between\">\n                        <span className=\"text-gray-600\">Costos iniciales:</span>\n                        <span className=\"font-semibold text-gray-900\">\n                          ${Math.round(result.totales.costosIniciales).toLocaleString('es-AR')}\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* Botón de solicitud */}\n                    <button\n                      onClick={() => {\n                        if (onCalculationComplete) {\n                          const calculationData = {\n                            vehiclePrice: inputs.monto,\n                            vehicleYear: vehicleYear,\n                            downPayment: 0,\n                            loanTerm: term,\n                            interestRate: inputs.tasa.valor,\n                            loanAmount: result.totales.desembolsoNeto,\n                            monthlyPayment: result.rows[0]?.cuotaTotal || 0,\n                            totalAmount: result.totales.sumaCuotas,\n                            cft: result.totales.cftEfectivoAnual\n                          };\n                          onCalculationComplete(calculationData);\n                        }\n                      }}\n                      className=\"w-full bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold py-3 px-4 rounded-xl transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 flex items-center justify-center gap-2\"\n                    >\n                      <DollarSign className=\"w-4 h-4\" />\n                      Solicitar en {term} meses\n                    </button>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n\n      </div>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationForm.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'RELACIONES_LABORALES' is assigned a value but never used.","line":65,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":65,"endColumn":27},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'CUOTAS_DISPONIBLES' is assigned a value but never used.","line":69,"column":7,"nodeType":null,"messageId":"unusedVar","endLine":69,"endColumn":25}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { User, Heart, FileText } from 'lucide-react';\nimport { type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanApplicationData {\n  // Datos Personales\n  apellidos: string;\n  nombre: string;\n  cuitCuil: string;\n  fechaNacimiento: string;\n  provincia: string;\n  localidad: string;\n  domicilio: string;\n  codigoPostal: string;\n  email: string;\n  telefono: string;\n  estadoCivil: string;\n  \n  // Datos del Cónyuge (condicional)\n  tieneConyuge: boolean;\n  conyugeNombre?: string;\n  conyugeApellido?: string;\n  conyugeCuitCuil?: string;\n  conyugeIngresos?: number;\n  \n  // Datos Laborales\n  relacionLaboral: string;\n  relacionLaboralOtro?: string;\n  empresa: string;\n  antiguedad: string;\n  telefonoEmpresa: string;\n  ingresosMensuales: number;\n  \n  // Datos del Vehículo\n  marca: string;\n  modelo: string;\n  version: string;\n  esNuevo: boolean;\n  anoVehiculo?: number;\n  valorTotal: number;\n  saldoFinanciar: number;\n  cantidadCuotas: number;\n}\n\ninterface LoanApplicationFormProps {\n  calculationResult?: Result | null;\n  onSubmit?: (data: LoanApplicationData) => void;\n}\n\nconst PROVINCIAS = [\n  'Buenos Aires', 'Catamarca', 'Chaco', 'Chubut', 'Córdoba', 'Corrientes',\n  'Entre Ríos', 'Formosa', 'Jujuy', 'La Pampa', 'La Rioja', 'Mendoza',\n  'Misiones', 'Neuquén', 'Río Negro', 'Salta', 'San Juan', 'San Luis',\n  'Santa Cruz', 'Santa Fe', 'Santiago del Estero', 'Tierra del Fuego',\n  'Tucumán', 'Ciudad Autónoma de Buenos Aires'\n];\n\nconst ESTADOS_CIVILES = [\n  'Soltero/a', 'Casado/a', 'Divorciado/a', 'Viudo/a', 'Unión Convivencial'\n];\n\nconst RELACIONES_LABORALES = [\n  'Relación de dependencia', 'Monotributo', 'Jubilado', 'Autónomo', 'Otro'\n];\n\nconst CUOTAS_DISPONIBLES = [6, 12, 24, 36, 48];\n\nexport default function LoanApplicationForm({ calculationResult, onSubmit }: LoanApplicationFormProps) {\n  const [files] = useState<File[]>([]);\n  const { register, handleSubmit, watch, formState: { errors, isSubmitting }, setValue } = useForm<LoanApplicationData>({\n    defaultValues: {\n      tieneConyuge: false,\n      esNuevo: true,\n      relacionLaboral: 'Relación de dependencia',\n      cantidadCuotas: 36,\n    }\n  });\n\n  const watchTieneConyuge = watch('tieneConyuge');\n\n  // Sincronizar datos de la calculadora\n  if (calculationResult) {\n    setValue('valorTotal', calculationResult.totales.desembolsoBruto);\n    setValue('saldoFinanciar', calculationResult.totales.desembolsoBruto);\n  }\n\n  const onFormSubmit = (data: LoanApplicationData) => {\n    const formData = {\n      ...data,\n      documentos: files,\n    };\n    onSubmit?.(data);\n    console.log('Datos del formulario:', formData);\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con gradiente */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 px-8 py-8 text-center relative overflow-hidden\">\n        <div className=\"absolute top-0 right-0 w-32 h-32 bg-white/5 rounded-full -translate-y-16 translate-x-16\"></div>\n        <div className=\"absolute bottom-0 left-0 w-24 h-24 bg-brand-accent-500/20 rounded-full translate-y-12 -translate-x-12\"></div>\n        \n        <div className=\"relative\">\n          <div className=\"flex items-center justify-center gap-3 mb-4\">\n            <div className=\"w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center\">\n              <FileText className=\"w-6 h-6 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-white\">Solicitud de Préstamo</h2>\n          </div>\n          <p className=\"text-brand-primary-100 text-lg\">Complete todos los datos para procesar su solicitud</p>\n        </div>\n      </div>\n\n      <form onSubmit={handleSubmit(onFormSubmit)} className=\"p-8 space-y-8\">\n        {/* Datos Personales */}\n        <div className=\"space-y-6\">\n          <div className=\"flex items-center gap-3 pb-3 border-b border-gray-200\">\n            <div className=\"w-8 h-8 bg-brand-primary-600 rounded-full flex items-center justify-center shadow-sm\">\n              <User className=\"w-4 h-4 text-white\" />\n            </div>\n            <h3 className=\"text-xl font-semibold text-gray-900\">Datos Personales</h3>\n          </div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Apellidos *\n              </label>\n              <input\n                {...register('apellidos', { required: 'Los apellidos son requeridos' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese sus apellidos\"\n              />\n              {errors.apellidos && <p className=\"text-red-500 text-sm mt-1\">{errors.apellidos.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Nombre *\n              </label>\n              <input\n                {...register('nombre', { required: 'El nombre es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese su nombre\"\n              />\n              {errors.nombre && <p className=\"text-red-500 text-sm mt-1\">{errors.nombre.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                CUIT/CUIL *\n              </label>\n              <input\n                {...register('cuitCuil', { \n                  required: 'El CUIT/CUIL es requerido',\n                  pattern: {\n                    value: /^\\d{2}-\\d{8}-\\d{1}$/,\n                    message: 'Formato: 20-12345678-9'\n                  }\n                })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"20-12345678-9\"\n              />\n              {errors.cuitCuil && <p className=\"text-red-500 text-sm mt-1\">{errors.cuitCuil.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Fecha de Nacimiento *\n              </label>\n              <input\n                type=\"date\"\n                {...register('fechaNacimiento', { required: 'La fecha de nacimiento es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              />\n              {errors.fechaNacimiento && <p className=\"text-red-500 text-sm mt-1\">{errors.fechaNacimiento.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Provincia *\n              </label>\n              <select\n                {...register('provincia', { required: 'La provincia es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"\">Seleccione una provincia</option>\n                {PROVINCIAS.map(provincia => (\n                  <option key={provincia} value={provincia}>{provincia}</option>\n                ))}\n              </select>\n              {errors.provincia && <p className=\"text-red-500 text-sm mt-1\">{errors.provincia.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Localidad *\n              </label>\n              <input\n                {...register('localidad', { required: 'La localidad es requerida' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Ingrese su localidad\"\n              />\n              {errors.localidad && <p className=\"text-red-500 text-sm mt-1\">{errors.localidad.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Domicilio *\n              </label>\n              <input\n                {...register('domicilio', { required: 'El domicilio es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"Calle y número\"\n              />\n              {errors.domicilio && <p className=\"text-red-500 text-sm mt-1\">{errors.domicilio.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Código Postal *\n              </label>\n              <input\n                {...register('codigoPostal', { required: 'El código postal es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"1234\"\n              />\n              {errors.codigoPostal && <p className=\"text-red-500 text-sm mt-1\">{errors.codigoPostal.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Email *\n              </label>\n              <input\n                type=\"email\"\n                {...register('email', { \n                  required: 'El email es requerido',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n                    message: 'Email inválido'\n                  }\n                })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"email@ejemplo.com\"\n              />\n              {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Teléfono *\n              </label>\n              <input\n                type=\"tel\"\n                {...register('telefono', { required: 'El teléfono es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 placeholder-gray-400 hover:border-gray-400 shadow-sm\"\n                placeholder=\"+54 11 1234-5678\"\n              />\n              {errors.telefono && <p className=\"text-red-500 text-sm mt-1\">{errors.telefono.message}</p>}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Estado Civil *\n              </label>\n              <select\n                {...register('estadoCivil', { required: 'El estado civil es requerido' })}\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900 shadow-sm\"\n              >\n                <option value=\"\">Seleccione estado civil</option>\n                {ESTADOS_CIVILES.map(estado => (\n                  <option key={estado} value={estado}>{estado}</option>\n                ))}\n              </select>\n              {errors.estadoCivil && <p className=\"text-red-500 text-sm mt-1\">{errors.estadoCivil.message}</p>}\n            </div>\n\n            <div className=\"sm:col-span-2\">\n              <div className=\"flex items-start gap-3\">\n                <input\n                  type=\"checkbox\"\n                  {...register('tieneConyuge')}\n                  className=\"mt-1 w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-600\"\n                />\n                <label className=\"text-sm text-gray-700 leading-relaxed\">\n                  ¿Tiene cónyuge?\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Datos del Cónyuge (condicional) */}\n          {watchTieneConyuge && (\n            <div className=\"bg-blue-50 rounded-xl p-6 space-y-4\">\n              <div className=\"flex items-center gap-3 mb-4\">\n                <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center\">\n                  <Heart className=\"w-3 h-3 text-white\" />\n                </div>\n                <h4 className=\"text-lg font-semibold text-blue-900\">Datos del Cónyuge</h4>\n              </div>\n\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Nombre y Apellido *\n                  </label>\n                  <input\n                    {...register('conyugeNombre', { \n                      required: watchTieneConyuge ? 'El nombre del cónyuge es requerido' : false \n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"Nombre completo del cónyuge\"\n                  />\n                  {errors.conyugeNombre && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeNombre.message}</p>}\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    CUIT/CUIL *\n                  </label>\n                  <input\n                    {...register('conyugeCuitCuil', { \n                      required: watchTieneConyuge ? 'El CUIT/CUIL del cónyuge es requerido' : false,\n                      pattern: {\n                        value: /^\\d{2}-\\d{8}-\\d{1}$/,\n                        message: 'Formato: 20-12345678-9'\n                      }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"20-12345678-9\"\n                  />\n                  {errors.conyugeCuitCuil && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeCuitCuil.message}</p>}\n                </div>\n\n                <div className=\"sm:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Ingresos Mensuales *\n                  </label>\n                  <input\n                    type=\"number\"\n                    {...register('conyugeIngresos', { \n                      required: watchTieneConyuge ? 'Los ingresos del cónyuge son requeridos' : false,\n                      min: { value: 1, message: 'Los ingresos deben ser mayor a 0' }\n                    })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all bg-white text-gray-900\"\n                    placeholder=\"500000\"\n                    step=\"1000\"\n                  />\n                  {errors.conyugeIngresos && <p className=\"text-red-500 text-sm mt-1\">{errors.conyugeIngresos.message}</p>}\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n\n        {/* Continúa en la siguiente parte... */}\n        <div className=\"text-center py-4\">\n          <p className=\"text-gray-500 text-sm\">Formulario continúa con Datos Laborales, Vehículo y Documentación...</p>\n        </div>\n\n        {/* Botón de envío temporal */}\n        <div className=\"flex justify-end\">\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 disabled:from-gray-300 disabled:to-gray-400 text-white font-semibold py-4 px-8 rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl disabled:shadow-none transform hover:scale-[1.02] disabled:scale-100 disabled:cursor-not-allowed flex items-center gap-3\"\n          >\n            {isSubmitting ? (\n              <>\n                <div className=\"w-5 h-5 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                Procesando...\n              </>\n            ) : (\n              <>\n                <FileText className=\"w-5 h-5\" />\n                Enviar Solicitud\n              </>\n            )}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationFormComplete.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\forms\\LoanApplicationSteps.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'getValues' is assigned a value but never used.","line":90,"column":74,"nodeType":null,"messageId":"unusedVar","endLine":90,"endColumn":83}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { User, Briefcase, Car, Upload, Heart, FileText, CheckCircle, ArrowRight, ArrowLeft, Calculator } from 'lucide-react';\nimport FileUpload from '@/components/ui/FileUpload';\nimport { type Result } from '@/lib/calculator/loan-calculator';\n\ninterface LoanApplicationStepsProps {\n  calculationResult?: Result | null;\n  calculationData?: any;\n  onSubmit: (data: any) => void;\n  isSubmitting?: boolean;\n}\n\ninterface FormData {\n  // Datos Personales\n  nombre: string;\n  apellido: string;\n  cuil: string;\n  fechaNacimiento: string;\n  provincia: string;\n  localidad: string;\n  domicilio: string;\n  codigoPostal: string;\n  email: string;\n  telefono: string;\n  estadoCivil: string;\n  \n  // Datos del Cónyuge (condicional)\n  tieneConyugue: boolean;\n  cuilConyugue?: string;\n  nombreConyugue?: string;\n  apellidoConyugue?: string;\n  \n  // Datos Laborales\n  relacionLaboral: string;\n  otraRelacionLaboral?: string;\n  empresa: string;\n  telefonoEmpresa: string;\n  antiguedad: string;\n  \n  // Datos del Vehículo\n  condicionVehiculo: string;\n  marca: string;\n  modelo: string;\n  anio: string;\n  version: string;\n  \n  // Documentación\n  documentos: File[];\n}\n\nconst steps = [\n  {\n    id: 'personal',\n    title: 'Datos Personales',\n    icon: User,\n    description: 'Información básica del solicitante'\n  },\n  {\n    id: 'spouse',\n    title: 'Datos del Cónyuge',\n    icon: Heart,\n    description: 'Información del cónyuge (si aplica)'\n  },\n  {\n    id: 'work',\n    title: 'Datos Laborales',\n    icon: Briefcase,\n    description: 'Información laboral y de ingresos'\n  },\n  {\n    id: 'vehicle',\n    title: 'Datos del Vehículo',\n    icon: Car,\n    description: 'Información del vehículo a financiar'\n  },\n  {\n    id: 'documents',\n    title: 'Documentación',\n    icon: Upload,\n    description: 'Adjuntar documentos requeridos'\n  }\n];\n\nexport default function LoanApplicationSteps({ calculationResult, calculationData, onSubmit, isSubmitting = false }: LoanApplicationStepsProps) {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [showConfirmation, setShowConfirmation] = useState(false);\n  const { register, handleSubmit, watch, formState: { errors }, trigger, getValues } = useForm<FormData>();\n  \n  const tieneConyugue = watch('tieneConyugue');\n  const relacionLaboral = watch('relacionLaboral');\n  const condicionVehiculo = watch('condicionVehiculo');\n\n  const nextStep = async () => {\n    const stepFields = getStepFields(currentStep);\n    const isValid = await trigger(stepFields);\n    \n    if (isValid) {\n      if (currentStep === 1 && !tieneConyugue) {\n        setCurrentStep(2); // Saltar paso del cónyuge si no tiene\n      } else {\n        setCurrentStep(Math.min(currentStep + 1, steps.length - 1));\n      }\n    }\n  };\n\n  const prevStep = () => {\n    if (currentStep === 2 && !tieneConyugue) {\n      setCurrentStep(0); // Volver a datos personales si no tiene cónyuge\n    } else {\n      setCurrentStep(Math.max(currentStep - 1, 0));\n    }\n  };\n\n  const getStepFields = (step: number): (keyof FormData)[] => {\n    switch (step) {\n      case 0: return ['nombre', 'apellido', 'cuil', 'fechaNacimiento', 'provincia', 'localidad', 'domicilio', 'codigoPostal', 'email', 'telefono', 'estadoCivil'];\n      case 1: return tieneConyugue ? ['cuilConyugue', 'nombreConyugue', 'apellidoConyugue'] : [];\n      case 2: return ['relacionLaboral', 'empresa', 'telefonoEmpresa', 'antiguedad'];\n      case 3: return ['condicionVehiculo', 'marca', 'modelo', 'anio', 'version'];\n      case 4: return [];\n      default: return [];\n    }\n  };\n\n  const handleFinalSubmit = handleSubmit((formData) => {\n    // Guard adicional: si no hay cálculo, simplemente cerrar el modal y no enviar\n    if (!calculationResult) {\n      setShowConfirmation(false);\n      return;\n    }\n    // Llama a onSubmit (que es handleLoanSubmit en el hook) con los datos del formulario.\n    // El hook se encargará de mapear y añadir los datos de cálculo.\n    onSubmit(formData);\n    setShowConfirmation(false);\n  });\n\n  const handleSubmitClick = () => {\n    setShowConfirmation(true);\n  };\n\n  return (\n    <div className=\"bg-white rounded-2xl shadow-2xl border border-gray-100/50 overflow-hidden\">\n      {/* Header con Steps */}\n      <div className=\"bg-gradient-to-r from-brand-primary-600 via-brand-primary-700 to-brand-primary-800 p-6\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"w-8 h-8 bg-brand-accent-500 rounded-full flex items-center justify-center shadow-sm\">\n            <FileText className=\"w-4 h-4 text-gray-900 font-bold\" />\n          </div>\n          <h2 className=\"text-2xl font-bold text-white\">Solicitud de Préstamo</h2>\n        </div>\n        \n        {/* Progress Steps */}\n        <div className=\"flex items-center justify-between relative\">\n          {steps.map((step, index) => {\n            const isActive = index === currentStep;\n            const isCompleted = index < currentStep;\n            const isSkipped = index === 1 && !tieneConyugue && currentStep > 1;\n            \n            return (\n              <div key={step.id} className=\"flex flex-col items-center relative z-10\">\n                <div className={`w-12 h-12 rounded-full flex items-center justify-center transition-all ${\n                  isCompleted \n                    ? 'bg-brand-accent-500 text-gray-900' \n                    : isActive \n                      ? 'bg-white text-brand-primary-600 ring-4 ring-white/30' \n                      : isSkipped\n                        ? 'bg-gray-400 text-white'\n                        : 'bg-white/20 text-white/60'\n                }`}>\n                  {isCompleted ? (\n                    <CheckCircle className=\"w-6 h-6\" />\n                  ) : (\n                    <step.icon className=\"w-6 h-6\" />\n                  )}\n                </div>\n                <div className=\"mt-2 text-center\">\n                  <p className={`text-sm font-medium ${\n                    isActive ? 'text-white' : isCompleted ? 'text-brand-accent-500' : 'text-white/70'\n                  }`}>\n                    {step.title}\n                  </p>\n                  <p className=\"text-xs text-white/50 max-w-[80px] leading-tight\">\n                    {step.description}\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n          \n          {/* Progress Line */}\n          <div className=\"absolute top-6 left-6 right-6 h-0.5 bg-white/20\">\n            <div \n              className=\"h-full bg-brand-accent-500 transition-all duration-500\"\n              style={{ width: `${(currentStep / (steps.length - 1)) * 100}%` }}\n            />\n          </div>\n        </div>\n      </div>\n\n      {/* Resumen de Cálculo */}\n      {calculationData && (\n        <div className=\"bg-gradient-to-r from-green-50 to-emerald-50 border-b border-green-200 p-4\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <div className=\"w-6 h-6 bg-green-600 rounded-full flex items-center justify-center\">\n                <Calculator className=\"w-3 h-3 text-white\" />\n              </div>\n              <h3 className=\"text-lg font-semibold text-green-900\">Valores Calculados para tu Préstamo</h3>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-3 mb-3\">\n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Monto del Vehículo</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  ${calculationData.vehiclePrice?.toLocaleString('es-AR')}\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Cuota Mensual</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  ${calculationData.monthlyPayment?.toLocaleString('es-AR')}\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">Plazo</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  {calculationData.loanTerm} meses\n                </p>\n              </div>\n              \n              <div className=\"bg-white rounded-lg p-3 border border-green-200 text-center\">\n                <p className=\"text-xs text-green-700 font-medium mb-1\">CFT Anual</p>\n                <p className=\"text-lg font-bold text-green-900\">\n                  {(calculationData.cft * 100)?.toFixed(2)}%\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"bg-green-100 rounded-lg p-2 text-center border border-green-200\">\n              <p className=\"text-xs text-green-800\">\n                <strong>✓ Estos valores serán incluidos en tu solicitud.</strong> Completa los datos personales a continuación para enviar tu solicitud.\n              </p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Form Content */}\n      <div className=\"p-8\">\n        {/* Step 0: Datos Personales */}\n        {currentStep === 0 && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Nombre *</label>\n                <input\n                  {...register('nombre', { required: 'Nombre es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Juan\"\n                />\n                {errors.nombre && <p className=\"text-red-500 text-sm mt-1\">{errors.nombre.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Apellido *</label>\n                <input\n                  {...register('apellido', { required: 'Apellido es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Pérez\"\n                />\n                {errors.apellido && <p className=\"text-red-500 text-sm mt-1\">{errors.apellido.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">CUIL *</label>\n                <input\n                  {...register('cuil', { required: 'CUIL es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"20-12345678-9\"\n                />\n                {errors.cuil && <p className=\"text-red-500 text-sm mt-1\">{errors.cuil.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Fecha de Nacimiento *</label>\n                <input\n                  type=\"date\"\n                  {...register('fechaNacimiento', { required: 'Fecha de nacimiento es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                />\n                {errors.fechaNacimiento && <p className=\"text-red-500 text-sm mt-1\">{errors.fechaNacimiento.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Provincia *</label>\n                <input\n                  {...register('provincia', { required: 'Provincia es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Buenos Aires\"\n                />\n                {errors.provincia && <p className=\"text-red-500 text-sm mt-1\">{errors.provincia.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Localidad *</label>\n                <input\n                  {...register('localidad', { required: 'Localidad es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"CABA\"\n                />\n                {errors.localidad && <p className=\"text-red-500 text-sm mt-1\">{errors.localidad.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Domicilio *</label>\n                <input\n                  {...register('domicilio', { required: 'Domicilio es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Av. Corrientes 1234\"\n                />\n                {errors.domicilio && <p className=\"text-red-500 text-sm mt-1\">{errors.domicilio.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Código Postal *</label>\n                <input\n                  {...register('codigoPostal', { required: 'Código postal es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"1043\"\n                />\n                {errors.codigoPostal && <p className=\"text-red-500 text-sm mt-1\">{errors.codigoPostal.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Email *</label>\n                <input\n                  type=\"email\"\n                  {...register('email', { required: 'Email es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"usuario@email.com\"\n                />\n                {errors.email && <p className=\"text-red-500 text-sm mt-1\">{errors.email.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Teléfono *</label>\n                <input\n                  {...register('telefono', { required: 'Teléfono es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"+54 11 1234-5678\"\n                />\n                {errors.telefono && <p className=\"text-red-500 text-sm mt-1\">{errors.telefono.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Estado Civil *</label>\n                <select\n                  {...register('estadoCivil', { required: 'Estado civil es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"soltero\">Soltero/a</option>\n                  <option value=\"casado\">Casado/a</option>\n                  <option value=\"divorciado\">Divorciado/a</option>\n                  <option value=\"viudo\">Viudo/a</option>\n                  <option value=\"union_convivencial\">Unión Convivencial</option>\n                </select>\n                {errors.estadoCivil && <p className=\"text-red-500 text-sm mt-1\">{errors.estadoCivil.message}</p>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 1: Datos del Cónyuge */}\n        {currentStep === 1 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-brand-accent-500/10 rounded-lg border border-brand-accent-500/20\">\n              <Heart className=\"w-5 h-5 text-brand-primary-600\" />\n              <div>\n                <p className=\"font-medium text-brand-primary-600\">¿Tiene cónyuge?</p>\n                <p className=\"text-sm text-gray-600\">Marque si está casado/a o en unión convivencial</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-4\">\n              <label className=\"flex items-center gap-2 cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  {...register('tieneConyugue')}\n                  className=\"w-4 h-4 text-brand-primary-600 border-gray-300 rounded focus:ring-brand-primary-600\"\n                />\n                <span className=\"text-sm font-medium text-gray-700\">Sí, tengo cónyuge</span>\n              </label>\n            </div>\n\n            {tieneConyugue && (\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 pt-6 border-t border-gray-200\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">CUIL del Cónyuge *</label>\n                  <input\n                    {...register('cuilConyugue', { \n                      required: tieneConyugue ? 'CUIL del cónyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"27-12345678-9\"\n                  />\n                  {errors.cuilConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.cuilConyugue.message}</p>}\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Nombre del Cónyuge *</label>\n                  <input\n                    {...register('nombreConyugue', { \n                      required: tieneConyugue ? 'Nombre del cónyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"María\"\n                  />\n                  {errors.nombreConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.nombreConyugue.message}</p>}\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Apellido del Cónyuge *</label>\n                  <input\n                    {...register('apellidoConyugue', { \n                      required: tieneConyugue ? 'Apellido del cónyuge es requerido' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"González\"\n                  />\n                  {errors.apellidoConyugue && <p className=\"text-red-500 text-sm mt-1\">{errors.apellidoConyugue.message}</p>}\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 2: Datos Laborales */}\n        {currentStep === 2 && (\n          <div className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Relación Laboral *</label>\n                <select\n                  {...register('relacionLaboral', { required: 'Relación laboral es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"empleado_relacion_dependencia\">Empleado en Relación de Dependencia</option>\n                  <option value=\"empleado_publico\">Empleado Público</option>\n                  <option value=\"jubilado_pensionado\">Jubilado/Pensionado</option>\n                  <option value=\"trabajador_autonomo\">Trabajador Autónomo</option>\n                  <option value=\"profesional_independiente\">Profesional Independiente</option>\n                  <option value=\"comerciante\">Comerciante</option>\n                  <option value=\"otro\">Otro</option>\n                </select>\n                {errors.relacionLaboral && <p className=\"text-red-500 text-sm mt-1\">{errors.relacionLaboral.message}</p>}\n              </div>\n\n              {relacionLaboral === 'otro' && (\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Especificar Relación Laboral *</label>\n                  <input\n                    {...register('otraRelacionLaboral', { \n                      required: relacionLaboral === 'otro' ? 'Debe especificar la relación laboral' : false \n                    })}\n                    className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                    placeholder=\"Especificar...\"\n                  />\n                  {errors.otraRelacionLaboral && <p className=\"text-red-500 text-sm mt-1\">{errors.otraRelacionLaboral.message}</p>}\n                </div>\n              )}\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Empresa *</label>\n                <input\n                  {...register('empresa', { required: 'Empresa es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Nombre de la empresa\"\n                />\n                {errors.empresa && <p className=\"text-red-500 text-sm mt-1\">{errors.empresa.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Teléfono Empresa *</label>\n                <input\n                  {...register('telefonoEmpresa', { required: 'Teléfono de empresa es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"+54 11 1234-5678\"\n                />\n                {errors.telefonoEmpresa && <p className=\"text-red-500 text-sm mt-1\">{errors.telefonoEmpresa.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Antigüedad *</label>\n                <input\n                  {...register('antiguedad', { required: 'Antigüedad es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"2 años\"\n                />\n                {errors.antiguedad && <p className=\"text-red-500 text-sm mt-1\">{errors.antiguedad.message}</p>}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Datos del Vehículo */}\n        {currentStep === 3 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n              <Car className=\"w-5 h-5 text-brand-primary-600\" />\n              <div>\n                <p className=\"font-medium text-brand-primary-600\">Información del Vehículo</p>\n                <p className=\"text-sm text-gray-600\">Complete los datos del vehículo que desea financiar</p>\n              </div>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Condición del Vehículo *</label>\n                <select\n                  {...register('condicionVehiculo', { required: 'Condición del vehículo es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900\"\n                >\n                  <option value=\"\">Seleccionar...</option>\n                  <option value=\"nuevo\">Nuevo (0 km)</option>\n                  <option value=\"usado\">Usado</option>\n                </select>\n                {errors.condicionVehiculo && <p className=\"text-red-500 text-sm mt-1\">{errors.condicionVehiculo.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Marca *</label>\n                <input\n                  {...register('marca', { required: 'Marca es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Toyota, Ford, Chevrolet...\"\n                />\n                {errors.marca && <p className=\"text-red-500 text-sm mt-1\">{errors.marca.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Modelo *</label>\n                <input\n                  {...register('modelo', { required: 'Modelo es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"Corolla, Focus, Onix...\"\n                />\n                {errors.modelo && <p className=\"text-red-500 text-sm mt-1\">{errors.modelo.message}</p>}\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Año *</label>\n                <input\n                  type=\"number\"\n                  min=\"2000\"\n                  max=\"2025\"\n                  {...register('anio', { required: 'Año es requerido' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"2024\"\n                />\n                {errors.anio && <p className=\"text-red-500 text-sm mt-1\">{errors.anio.message}</p>}\n              </div>\n              \n              <div className=\"md:col-span-2\">\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Versión *</label>\n                <input\n                  {...register('version', { required: 'Versión es requerida' })}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-600 focus:border-brand-primary-600 transition-all text-gray-900 placeholder-gray-500\"\n                  placeholder=\"XEI 1.8 CVT, SE 1.6, LTZ 1.4 Turbo...\"\n                />\n                {errors.version && <p className=\"text-red-500 text-sm mt-1\">{errors.version.message}</p>}\n              </div>\n            </div>\n\n            {condicionVehiculo && (\n              <div className=\"p-4 bg-brand-accent-500/10 rounded-lg border border-brand-accent-500/20\">\n                <p className=\"text-sm text-gray-700\">\n                  <strong>Nota:</strong> {condicionVehiculo === 'nuevo' \n                    ? 'Para vehículos 0km se requiere factura proforma del concesionario.'\n                    : 'Para vehículos usados se requiere título de propiedad y verificación policial.'\n                  }\n                </p>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Step 4: Documentación */}\n        {currentStep === 4 && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center gap-3 p-4 bg-green-50 rounded-lg border border-green-200\">\n              <Upload className=\"w-5 h-5 text-green-600\" />\n              <div>\n                <p className=\"font-medium text-green-800\">Documentación Requerida</p>\n                <p className=\"text-sm text-green-700\">Adjunte todos los documentos necesarios para procesar su solicitud</p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-gray-900\">Documentos Personales</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    DNI del titular (frente y dorso)\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    Últimos 3 recibos de sueldo\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    Certificado de trabajo\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-primary-600 rounded-full\"></div>\n                    Comprobante de ingresos\n                  </li>\n                </ul>\n              </div>\n\n              <div className=\"space-y-4\">\n                <h4 className=\"font-semibold text-gray-900\">Documentos del Vehículo</h4>\n                <ul className=\"space-y-2 text-sm text-gray-600\">\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    {condicionVehiculo === 'nuevo' ? 'Factura proforma' : 'Título de propiedad'}\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    {condicionVehiculo === 'nuevo' ? 'Cotización oficial' : 'Verificación policial'}\n                  </li>\n                  <li className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-brand-accent-500 rounded-full\"></div>\n                    Fotos del vehículo\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Adjuntar Documentos *\n              </label>\n              <FileUpload\n                onFilesChange={(files) => {\n                  // Actualizar el valor en react-hook-form\n                  register('documentos').onChange({\n                    target: { value: files, name: 'documentos' }\n                  });\n                }}\n                accept=\".pdf,.jpg,.jpeg,.png\"\n                multiple={true}\n                maxSize={10}\n                maxFiles={10}\n                error={errors.documentos?.message}\n              />\n            </div>\n\n            {calculationResult && (\n              <div className=\"bg-gradient-to-r from-blue-50 to-blue-100 border border-blue-200 rounded-lg p-6\">\n                <h4 className=\"font-semibold text-blue-900 mb-3\">Resumen de la Solicitud</h4>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Monto</p>\n                    <p className=\"text-blue-900 font-bold\">${calculationResult.totales.desembolsoBruto.toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Cuota</p>\n                    <p className=\"text-blue-900 font-bold\">${calculationResult.rows[0]?.cuotaTotal.toLocaleString()}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">Plazo</p>\n                    <p className=\"text-blue-900 font-bold\">{calculationResult.rows.length} meses</p>\n                  </div>\n                  <div>\n                    <p className=\"text-blue-700 font-medium\">CFT</p>\n                    <p className=\"text-blue-900 font-bold\">{(calculationResult.totales.cftEfectivoAnual * 100).toFixed(2)}%</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between pt-8 border-t border-gray-200 mt-8\">\n          <button\n            type=\"button\"\n            onClick={prevStep}\n            disabled={currentStep === 0 || isSubmitting}\n            className=\"flex items-center gap-2 px-6 py-3 text-gray-600 hover:text-gray-800 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            Anterior\n          </button>\n          \n          {currentStep < steps.length - 1 ? (\n            <button\n              type=\"button\"\n              onClick={nextStep}\n              disabled={isSubmitting || (currentStep === 1 && !calculationResult)}\n              className=\"flex items-center gap-2 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 text-white px-6 py-3 rounded-lg font-medium transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isSubmitting ? 'Enviando...' : (currentStep === 1 && !calculationResult ? 'Complete el Cálculo Primero' : 'Siguiente')}\n              <ArrowRight className=\"w-4 h-4\" />\n            </button>\n          ) : (\n            <button\n              type=\"button\"\n              onClick={handleSubmitClick}\n              disabled={!calculationResult || isSubmitting}\n              className=\"flex items-center gap-2 bg-gradient-to-r from-brand-accent-500 to-yellow-500 hover:from-yellow-500 hover:to-brand-accent-500 text-gray-900 px-6 py-3 rounded-lg font-bold transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              <CheckCircle className=\"w-4 h-4\" />\n              {isSubmitting ? 'Enviando...' : (calculationResult ? 'Enviar Solicitud' : 'Complete el Cálculo Primero')}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Modal de Confirmación */}\n      {showConfirmation && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-2xl shadow-2xl max-w-md w-full p-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-gradient-to-r from-brand-accent-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"w-8 h-8 text-gray-900\" />\n              </div>\n              \n              <h3 className=\"text-xl font-bold text-gray-900 mb-2\">\n                ¿Confirmar Envío de Solicitud?\n              </h3>\n              \n              <p className=\"text-gray-600 mb-6\">\n                Una vez enviada, la solicitud será procesada por nuestro equipo. \n                Asegúrate de haber cargado todos los documentos requeridos.\n              </p>\n\n              <div className=\"flex gap-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmation(false)}\n                  className=\"flex-1 px-4 py-3 text-gray-600 hover:text-gray-800 border border-gray-300 rounded-lg font-medium transition-colors\"\n                >\n                  Cancelar\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={handleFinalSubmit}\n                  disabled={isSubmitting}\n                  className=\"flex-1 bg-gradient-to-r from-brand-primary-600 to-brand-primary-700 hover:from-brand-primary-700 hover:to-brand-primary-800 text-white px-4 py-3 rounded-lg font-bold transition-all shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {isSubmitting ? 'Enviando...' : 'Confirmar Envío'}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\LoanApplicationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\MainTabContent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\OverviewTabContent.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\PortalHeader.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\PortalTabs.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\StatusBadge.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\portal\\TeamTabContent.tsx","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'Calendar' is defined but never used.","line":2,"column":42,"nodeType":null,"messageId":"unusedVar","endLine":2,"endColumn":50}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useMemo, useState } from 'react';\nimport { Plus, Users, User, Mail, Phone, Calendar, PlayCircle, PauseCircle, Trash2 } from 'lucide-react';\nimport StatusBadge from './StatusBadge';\nimport ConfirmActionModal from '@/components/ui/ConfirmActionModal';\nimport { type User as UserType } from '@/hooks/portal/usePortalDashboard';\n\ntype NewUserForm = { email: string; firstName: string; lastName: string; phone: string };\n\ninterface TeamTabContentProps {\n  users: UserType[];\n  loading: boolean;\n  showCreateUser: boolean;\n  setShowCreateUser: (show: boolean) => void;\n  newUser: NewUserForm;\n  setNewUser: (user: NewUserForm) => void;\n  handleCreateUser: (e: React.FormEvent) => void;\n  onActivate: (user: UserType) => void;\n  onSuspend: (user: UserType) => void;\n  onDelete: (user: UserType) => void;\n}\n\nconst TeamTabContent: React.FC<TeamTabContentProps> = ({ \n  users, \n  loading, \n  showCreateUser, \n  setShowCreateUser, \n  newUser, \n  setNewUser, \n  handleCreateUser,\n  onActivate,\n  onSuspend,\n  onDelete,\n}) => {\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [confirmTitle, setConfirmTitle] = useState('');\n  const [confirmMessage, setConfirmMessage] = useState('');\n  const [confirmType, setConfirmType] = useState<'warning' | 'danger' | 'info'>('warning');\n  const [confirmAction, setConfirmAction] = useState<() => void>(() => () => {});\n\n  const openConfirm = (opts: { title: string; message: string; type?: 'warning'|'danger'|'info'; onConfirm: () => void }) => {\n    setConfirmTitle(opts.title);\n    setConfirmMessage(opts.message);\n    setConfirmType(opts.type || 'warning');\n    setConfirmAction(() => opts.onConfirm);\n    setConfirmOpen(true);\n  };\n\n  const closeConfirm = () => setConfirmOpen(false);\n\n  const columns = useMemo(() => [\n    { key: 'name', label: 'Nombre' },\n    { key: 'contact', label: 'Contacto' },\n    { key: 'created', label: 'Creado' },\n    { key: 'status', label: 'Estado' },\n    { key: 'lastLogin', label: 'Último Acceso' },\n    { key: 'actions', label: 'Acciones', align: 'right' as const },\n  ], []);\n\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-xl font-semibold text-gray-900\">Gestión de Equipo</h2>\n        <button\n          onClick={() => setShowCreateUser(true)}\n          className=\"flex items-center gap-2 bg-brand-primary-600 hover:bg-brand-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n        >\n          <Plus className=\"w-5 h-5\" />\n          Nuevo Ejecutivo\n        </button>\n      </div>\n\n      {showCreateUser && (\n        <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-6 mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Crear Ejecutivo de Cuentas</h3>\n          <form onSubmit={handleCreateUser} className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Nombre</label>\n              <input\n                type=\"text\"\n                value={newUser.firstName}\n                onChange={(e) => setNewUser({...newUser, firstName: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"Nombre\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Apellido</label>\n              <input\n                type=\"text\"\n                value={newUser.lastName}\n                onChange={(e) => setNewUser({...newUser, lastName: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"Apellido\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Email</label>\n              <input\n                type=\"email\"\n                value={newUser.email}\n                onChange={(e) => setNewUser({...newUser, email: e.target.value})}\n                required\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"email@ejemplo.com\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Teléfono (opcional)</label>\n              <input\n                type=\"tel\"\n                value={newUser.phone}\n                onChange={(e) => setNewUser({...newUser, phone: e.target.value})}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand-primary-500 focus:border-transparent\"\n                placeholder=\"+54 9 11 1234 5678\"\n              />\n            </div>\n            <div className=\"md:col-span-2 flex gap-3\">\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"bg-brand-primary-600 hover:bg-brand-primary-700 text-white px-4 py-2 rounded-lg font-medium transition-colors disabled:opacity-50\"\n              >\n                {loading ? 'Creando...' : 'Crear Ejecutivo'}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => setShowCreateUser(false)}\n                className=\"bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-colors\"\n              >\n                Cancelar\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      {loading ? (\n        <div className=\"text-center py-8\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-brand-primary-600 mx-auto\"></div>\n          <p className=\"mt-2 text-gray-500\">Cargando equipo...</p>\n        </div>\n      ) : users.length === 0 ? (\n        <div className=\"text-center py-8\">\n          <Users className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n          <p className=\"text-gray-500\">No hay ejecutivos de cuentas creados</p>\n          <p className=\"text-sm text-gray-400\">Crea tu primer ejecutivo para comenzar</p>\n        </div>\n      ) : (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-[900px] w-full border-collapse bg-white rounded-xl overflow-hidden\">\n            <thead>\n              <tr className=\"bg-gray-50 text-left text-xs font-semibold text-gray-600\">\n                {columns.map((c) => (\n                  <th key={c.key} className={`px-4 py-3 border-b ${c.align === 'right' ? 'text-right' : ''}`}>{c.label}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody className=\"text-sm text-gray-900\">\n              {users.map((u) => (\n                <tr key={u.publicId} className=\"hover:bg-gray-50\">\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 rounded-full flex items-center justify-center bg-gradient-to-br from-brand-primary-100 to-brand-primary-200 shadow-sm\">\n                        <User className=\"w-4 h-4 text-brand-primary-600\" />\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">{u.firstName} {u.lastName}</div>\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"text-sm text-gray-700 flex items-center gap-3 flex-wrap\">\n                      <span className=\"flex items-center gap-1\"><Mail className=\"w-4 h-4 text-gray-400\" />{u.email}</span>\n                      {u.phone && <span className=\"flex items-center gap-1\"><Phone className=\"w-4 h-4 text-gray-400\" />{u.phone}</span>}\n                    </div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"font-medium\">{new Date(u.createdAt).toLocaleDateString('es-AR')}</div>\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <StatusBadge status={u.status} type=\"user\" />\n                  </td>\n                  <td className=\"px-4 py-3 align-middle text-xs text-gray-500\">\n                    {u.lastLoginAt ? new Date(u.lastLoginAt).toLocaleDateString('es-AR') : '—'}\n                  </td>\n                  <td className=\"px-4 py-3 align-middle\">\n                    <div className=\"flex items-center justify-end gap-1\">\n                      {u.status !== 'ACTIVE' ? (\n                        <button\n                          disabled={loading}\n                          onClick={() =>\n                            openConfirm({\n                              title: 'Activar usuario',\n                              message: `¿Desea activar a ${u.firstName} ${u.lastName} (${u.email})?`,\n                              type: 'info',\n                              onConfirm: () => { onActivate(u); closeConfirm(); },\n                            })\n                          }\n                          className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-emerald-600 hover:bg-emerald-700 disabled:opacity-50\"\n                          title=\"Activar\"\n                        >\n                          <PlayCircle className=\"w-4 h-4\" /> Activar\n                        </button>\n                      ) : (\n                        <button\n                          disabled={loading}\n                          onClick={() =>\n                            openConfirm({\n                              title: 'Suspender usuario',\n                              message: `¿Suspender a ${u.firstName} ${u.lastName}? Se cerrarán sus sesiones activas.`,\n                              type: 'warning',\n                              onConfirm: () => { onSuspend(u); closeConfirm(); },\n                            })\n                          }\n                          className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-amber-600 hover:bg-amber-700 disabled:opacity-50\"\n                          title=\"Suspender\"\n                        >\n                          <PauseCircle className=\"w-4 h-4\" /> Suspender\n                        </button>\n                      )}\n\n                      <button\n                        disabled={loading}\n                        onClick={() =>\n                          openConfirm({\n                            title: 'Eliminar usuario',\n                            message: `¿Eliminar a ${u.firstName} ${u.lastName}? Esto es un borrado lógico y podrá crearse nuevamente si es necesario.`,\n                            type: 'danger',\n                            onConfirm: () => { onDelete(u); closeConfirm(); },\n                          })\n                        }\n                        className=\"inline-flex items-center gap-1 px-2 py-1 rounded-lg text-xs font-medium text-white bg-red-600 hover:bg-red-700 disabled:opacity-50\"\n                        title=\"Eliminar\"\n                      >\n                        <Trash2 className=\"w-4 h-4\" /> Eliminar\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      <ConfirmActionModal\n        isOpen={confirmOpen}\n        title={confirmTitle}\n        message={confirmMessage}\n        type={confirmType}\n        loading={loading}\n        onConfirm={confirmAction}\n        onCancel={closeConfirm}\n      />\n    </div>\n  );\n};\n\nexport default TeamTabContent;\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\ConfirmActionModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\ConfirmationModal.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\DealerDetailsModal.disabled.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\FileUpload.tsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useCallback has unnecessary dependencies: 'accept' and 'maxSize'. Either exclude them or remove the dependency array.","line":95,"column":6,"nodeType":"ArrayExpression","endLine":95,"endColumn":69,"suggestions":[{"desc":"Update the dependencies array to be: [files, maxFiles, onFilesChange, validateFile]","fix":{"range":[2678,2741],"text":"[files, maxFiles, onFilesChange, validateFile]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\n\nimport { useState, useCallback, useRef } from 'react';\nimport { Upload, X, FileText, Image as ImageIcon, File } from 'lucide-react';\nimport Image from 'next/image';\n\ninterface FileUploadProps {\n  onFilesChange: (files: File[]) => void;\n  accept?: string;\n  multiple?: boolean;\n  maxSize?: number; // en MB\n  maxFiles?: number;\n  className?: string;\n  error?: string;\n}\n\ninterface FileWithPreview extends File {\n  id: string;\n  preview?: string;\n}\n\nexport default function FileUpload({\n  onFilesChange,\n  accept = \".pdf,.jpg,.jpeg,.png\",\n  multiple = true,\n  maxSize = 10,\n  maxFiles = 10,\n  className = \"\",\n  error\n}: FileUploadProps) {\n  const [files, setFiles] = useState<FileWithPreview[]>([]);\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [uploadError, setUploadError] = useState<string>('');\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const validateFile = useCallback((file: File): string | null => {\n    // Validar tamaño\n    if (file.size > maxSize * 1024 * 1024) {\n      return `El archivo \"${file.name}\" excede el tamaño máximo de ${maxSize}MB`;\n    }\n\n    // Validar tipo\n    const acceptedTypes = accept.split(',').map(type => type.trim());\n    const fileExtension = '.' + file.name.split('.').pop()?.toLowerCase();\n    const isValidType = acceptedTypes.some(type => \n      type === fileExtension || \n      file.type.startsWith(type.replace('*', ''))\n    );\n\n    if (!isValidType) {\n      return `El archivo \"${file.name}\" no es un tipo válido. Tipos permitidos: ${accept}`;\n    }\n\n    return null;\n  }, [maxSize, accept]);\n\n  const processFiles = useCallback((newFiles: FileList | File[]) => {\n    const fileArray = Array.from(newFiles);\n    const validFiles: FileWithPreview[] = [];\n    const errors: string[] = [];\n\n    // Validar límite de archivos\n    if (files.length + fileArray.length > maxFiles) {\n      setUploadError(`No puede subir más de ${maxFiles} archivos`);\n      return;\n    }\n\n    fileArray.forEach(file => {\n      const error = validateFile(file);\n      if (error) {\n        errors.push(error);\n      } else {\n        const fileWithPreview: FileWithPreview = Object.assign(file, {\n          id: Math.random().toString(36).substr(2, 9)\n        });\n\n        // Crear preview para imágenes\n        if (file.type.startsWith('image/')) {\n          fileWithPreview.preview = URL.createObjectURL(file);\n        }\n\n        validFiles.push(fileWithPreview);\n      }\n    });\n\n    if (errors.length > 0) {\n      setUploadError(errors.join('. '));\n      return;\n    }\n\n    setUploadError('');\n    const updatedFiles = [...files, ...validFiles];\n    setFiles(updatedFiles);\n    onFilesChange(updatedFiles);\n  }, [files, maxFiles, maxSize, accept, onFilesChange, validateFile]);\n\n  const removeFile = (fileId: string) => {\n    const updatedFiles = files.filter(file => {\n      if (file.id === fileId && file.preview) {\n        URL.revokeObjectURL(file.preview);\n      }\n      return file.id !== fileId;\n    });\n    setFiles(updatedFiles);\n    onFilesChange(updatedFiles);\n  };\n\n  const handleDragEnter = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(true);\n  };\n\n  const handleDragLeave = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n  };\n\n  const handleDragOver = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: React.DragEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setIsDragOver(false);\n\n    const droppedFiles = e.dataTransfer.files;\n    if (droppedFiles.length > 0) {\n      processFiles(droppedFiles);\n    }\n  };\n\n  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const selectedFiles = e.target.files;\n    if (selectedFiles && selectedFiles.length > 0) {\n      processFiles(selectedFiles);\n    }\n    // Limpiar el input para permitir seleccionar el mismo archivo nuevamente\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleClick = () => {\n    fileInputRef.current?.click();\n  };\n\n  const getFileIcon = (file: File) => {\n    if (file.type.startsWith('image/')) {\n      return <ImageIcon className=\"w-4 h-4\" />;\n    }\n    if (file.type === 'application/pdf') {\n      return <FileText className=\"w-4 h-4\" />;\n    }\n    return <File className=\"w-4 h-4\" />;\n  };\n\n  const formatFileSize = (bytes: number) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className={`space-y-4 ${className}`}>\n      {/* Zona de Drop */}\n      <div\n        onDragEnter={handleDragEnter}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n        onClick={handleClick}\n        className={`\n          border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-all\n          ${isDragOver \n            ? 'border-brand-primary-600 bg-brand-primary-50' \n            : 'border-gray-300 hover:border-brand-primary-600'\n          }\n          ${error || uploadError ? 'border-red-300 bg-red-50' : ''}\n        `}\n      >\n        <Upload className={`w-12 h-12 mx-auto mb-4 ${\n          isDragOver ? 'text-brand-primary-600' : 'text-gray-400'\n        }`} />\n        \n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          multiple={multiple}\n          accept={accept}\n          onChange={handleFileSelect}\n          className=\"hidden\"\n        />\n        \n        <div className=\"space-y-2\">\n          <p className=\"text-brand-primary-600 font-medium hover:text-brand-primary-700\">\n            Haga clic para seleccionar archivos\n          </p>\n          <p className=\"text-gray-500\">o arrastre y suelte aquí</p>\n          <p className=\"text-xs text-gray-500\">\n            Formatos permitidos: {accept} (máximo {maxSize}MB por archivo)\n          </p>\n          {maxFiles > 1 && (\n            <p className=\"text-xs text-gray-500\">\n              Máximo {maxFiles} archivos\n            </p>\n          )}\n        </div>\n      </div>\n\n      {/* Mensajes de Error */}\n      {(error || uploadError) && (\n        <div className=\"text-red-500 text-sm\">\n          {error || uploadError}\n        </div>\n      )}\n\n      {/* Lista de Archivos Subidos */}\n      {files.length > 0 && (\n        <div className=\"space-y-2\">\n          <h4 className=\"text-sm font-medium text-gray-700\">\n            Archivos seleccionados ({files.length})\n          </h4>\n          <div className=\"space-y-2 max-h-60 overflow-y-auto\">\n            {files.map((file) => (\n              <div\n                key={file.id}\n                className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg border\"\n              >\n                <div className=\"flex items-center gap-3 flex-1 min-w-0\">\n                  {/* Preview o Icono */}\n                  <div className=\"flex-shrink-0\">\n                    {file.preview ? (\n                      <Image\n                        src={file.preview as string}\n                        alt={file.name}\n                        width={40}\n                        height={40}\n                        unoptimized\n                        className=\"w-10 h-10 object-cover rounded\"\n                      />\n                    ) : (\n                      <div className=\"w-10 h-10 bg-gray-200 rounded flex items-center justify-center\">\n                        {getFileIcon(file)}\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Info del Archivo */}\n                  <div className=\"flex-1 min-w-0\">\n                    <p className=\"text-sm font-medium text-gray-900 truncate\">\n                      {file.name}\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                      {formatFileSize(file.size)}\n                    </p>\n                  </div>\n                </div>\n\n                {/* Botón Eliminar */}\n                <button\n                  type=\"button\"\n                  onClick={() => removeFile(file.id)}\n                  className=\"flex-shrink-0 p-1 text-gray-400 hover:text-red-500 transition-colors\"\n                >\n                  <X className=\"w-4 h-4\" />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\alert.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\button.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\card.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\dialog.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\input.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\label.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\select.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\components\\ui\\slider.tsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\hooks\\portal\\usePortalDashboard.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\hooks\\useAuth.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\auth-helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\authFetch.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\calculator\\loan-calculator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\email.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\logger.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\prisma.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"E:\\Proyectos\\CrediAuto\\apps\\web\\src\\lib\\utils.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]